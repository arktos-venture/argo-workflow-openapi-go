/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale
type GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale struct {
	// An expression to determine the number of replicas. Must evaluation to an `int`.
	DesiredReplicas *string `json:"desiredReplicas,omitempty"`
	PeekDelay *string `json:"peekDelay,omitempty"`
	ScalingDelay *string `json:"scalingDelay,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1ScaleWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1ScaleWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale{}
	return &this
}

// GetDesiredReplicas returns the DesiredReplicas field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) GetDesiredReplicas() string {
	if o == nil || o.DesiredReplicas == nil {
		var ret string
		return ret
	}
	return *o.DesiredReplicas
}

// GetDesiredReplicasOk returns a tuple with the DesiredReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) GetDesiredReplicasOk() (*string, bool) {
	if o == nil || o.DesiredReplicas == nil {
		return nil, false
	}
	return o.DesiredReplicas, true
}

// HasDesiredReplicas returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) HasDesiredReplicas() bool {
	if o != nil && o.DesiredReplicas != nil {
		return true
	}

	return false
}

// SetDesiredReplicas gets a reference to the given string and assigns it to the DesiredReplicas field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) SetDesiredReplicas(v string) {
	o.DesiredReplicas = &v
}

// GetPeekDelay returns the PeekDelay field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) GetPeekDelay() string {
	if o == nil || o.PeekDelay == nil {
		var ret string
		return ret
	}
	return *o.PeekDelay
}

// GetPeekDelayOk returns a tuple with the PeekDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) GetPeekDelayOk() (*string, bool) {
	if o == nil || o.PeekDelay == nil {
		return nil, false
	}
	return o.PeekDelay, true
}

// HasPeekDelay returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) HasPeekDelay() bool {
	if o != nil && o.PeekDelay != nil {
		return true
	}

	return false
}

// SetPeekDelay gets a reference to the given string and assigns it to the PeekDelay field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) SetPeekDelay(v string) {
	o.PeekDelay = &v
}

// GetScalingDelay returns the ScalingDelay field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) GetScalingDelay() string {
	if o == nil || o.ScalingDelay == nil {
		var ret string
		return ret
	}
	return *o.ScalingDelay
}

// GetScalingDelayOk returns a tuple with the ScalingDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) GetScalingDelayOk() (*string, bool) {
	if o == nil || o.ScalingDelay == nil {
		return nil, false
	}
	return o.ScalingDelay, true
}

// HasScalingDelay returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) HasScalingDelay() bool {
	if o != nil && o.ScalingDelay != nil {
		return true
	}

	return false
}

// SetScalingDelay gets a reference to the given string and assigns it to the ScalingDelay field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) SetScalingDelay(v string) {
	o.ScalingDelay = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DesiredReplicas != nil {
		toSerialize["desiredReplicas"] = o.DesiredReplicas
	}
	if o.PeekDelay != nil {
		toSerialize["peekDelay"] = o.PeekDelay
	}
	if o.ScalingDelay != nil {
		toSerialize["scalingDelay"] = o.ScalingDelay
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


