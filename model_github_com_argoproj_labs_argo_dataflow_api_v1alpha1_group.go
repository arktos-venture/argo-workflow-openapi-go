/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1Group struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1Group
type GithubComArgoprojLabsArgoDataflowApiV1alpha1Group struct {
	EndOfGroup *string `json:"endOfGroup,omitempty"`
	Format *string `json:"format,omitempty"`
	Key *string `json:"key,omitempty"`
	Storage *GithubComArgoprojLabsArgoDataflowApiV1alpha1Storage `json:"storage,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Group instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Group object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Group() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Group{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1GroupWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Group object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1GroupWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Group{}
	return &this
}

// GetEndOfGroup returns the EndOfGroup field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetEndOfGroup() string {
	if o == nil || o.EndOfGroup == nil {
		var ret string
		return ret
	}
	return *o.EndOfGroup
}

// GetEndOfGroupOk returns a tuple with the EndOfGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetEndOfGroupOk() (*string, bool) {
	if o == nil || o.EndOfGroup == nil {
		return nil, false
	}
	return o.EndOfGroup, true
}

// HasEndOfGroup returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) HasEndOfGroup() bool {
	if o != nil && o.EndOfGroup != nil {
		return true
	}

	return false
}

// SetEndOfGroup gets a reference to the given string and assigns it to the EndOfGroup field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) SetEndOfGroup(v string) {
	o.EndOfGroup = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) SetFormat(v string) {
	o.Format = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) SetKey(v string) {
	o.Key = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetStorage() GithubComArgoprojLabsArgoDataflowApiV1alpha1Storage {
	if o == nil || o.Storage == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Storage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) GetStorageOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Storage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Storage and assigns it to the Storage field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) SetStorage(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Storage) {
	o.Storage = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndOfGroup != nil {
		toSerialize["endOfGroup"] = o.EndOfGroup
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Group) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


