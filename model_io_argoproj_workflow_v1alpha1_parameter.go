/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Parameter Parameter indicate a passed string parameter to a service template with an optional default value
type IoArgoprojWorkflowV1alpha1Parameter struct {
	// Default is the default value to use for an input parameter if a value was not supplied
	Default *string `json:"default,omitempty"`
	// Enum holds a list of string values to choose from, for the actual value of the parameter
	Enum *[]string `json:"enum,omitempty"`
	// GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters
	GlobalName *string `json:"globalName,omitempty"`
	// Name is the parameter name
	Name string `json:"name"`
	// Value is the literal value to use for the parameter. If specified in the context of an input parameter, the value takes precedence over any passed values
	Value *string `json:"value,omitempty"`
	ValueFrom *IoArgoprojWorkflowV1alpha1ValueFrom `json:"valueFrom,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1Parameter instantiates a new IoArgoprojWorkflowV1alpha1Parameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Parameter(name string) *IoArgoprojWorkflowV1alpha1Parameter {
	this := IoArgoprojWorkflowV1alpha1Parameter{}
	this.Name = name
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ParameterWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Parameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ParameterWithDefaults() *IoArgoprojWorkflowV1alpha1Parameter {
	this := IoArgoprojWorkflowV1alpha1Parameter{}
	return &this
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *IoArgoprojWorkflowV1alpha1Parameter) SetDefault(v string) {
	o.Default = &v
}

// GetEnum returns the Enum field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetEnum() []string {
	if o == nil || o.Enum == nil {
		var ret []string
		return ret
	}
	return *o.Enum
}

// GetEnumOk returns a tuple with the Enum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetEnumOk() (*[]string, bool) {
	if o == nil || o.Enum == nil {
		return nil, false
	}
	return o.Enum, true
}

// HasEnum returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) HasEnum() bool {
	if o != nil && o.Enum != nil {
		return true
	}

	return false
}

// SetEnum gets a reference to the given []string and assigns it to the Enum field.
func (o *IoArgoprojWorkflowV1alpha1Parameter) SetEnum(v []string) {
	o.Enum = &v
}

// GetGlobalName returns the GlobalName field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetGlobalName() string {
	if o == nil || o.GlobalName == nil {
		var ret string
		return ret
	}
	return *o.GlobalName
}

// GetGlobalNameOk returns a tuple with the GlobalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetGlobalNameOk() (*string, bool) {
	if o == nil || o.GlobalName == nil {
		return nil, false
	}
	return o.GlobalName, true
}

// HasGlobalName returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) HasGlobalName() bool {
	if o != nil && o.GlobalName != nil {
		return true
	}

	return false
}

// SetGlobalName gets a reference to the given string and assigns it to the GlobalName field.
func (o *IoArgoprojWorkflowV1alpha1Parameter) SetGlobalName(v string) {
	o.GlobalName = &v
}

// GetName returns the Name field value
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoArgoprojWorkflowV1alpha1Parameter) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *IoArgoprojWorkflowV1alpha1Parameter) SetValue(v string) {
	o.Value = &v
}

// GetValueFrom returns the ValueFrom field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetValueFrom() IoArgoprojWorkflowV1alpha1ValueFrom {
	if o == nil || o.ValueFrom == nil {
		var ret IoArgoprojWorkflowV1alpha1ValueFrom
		return ret
	}
	return *o.ValueFrom
}

// GetValueFromOk returns a tuple with the ValueFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) GetValueFromOk() (*IoArgoprojWorkflowV1alpha1ValueFrom, bool) {
	if o == nil || o.ValueFrom == nil {
		return nil, false
	}
	return o.ValueFrom, true
}

// HasValueFrom returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Parameter) HasValueFrom() bool {
	if o != nil && o.ValueFrom != nil {
		return true
	}

	return false
}

// SetValueFrom gets a reference to the given IoArgoprojWorkflowV1alpha1ValueFrom and assigns it to the ValueFrom field.
func (o *IoArgoprojWorkflowV1alpha1Parameter) SetValueFrom(v IoArgoprojWorkflowV1alpha1ValueFrom) {
	o.ValueFrom = &v
}

func (o IoArgoprojWorkflowV1alpha1Parameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Enum != nil {
		toSerialize["enum"] = o.Enum
	}
	if o.GlobalName != nil {
		toSerialize["globalName"] = o.GlobalName
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ValueFrom != nil {
		toSerialize["valueFrom"] = o.ValueFrom
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Parameter struct {
	value *IoArgoprojWorkflowV1alpha1Parameter
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Parameter) Get() *IoArgoprojWorkflowV1alpha1Parameter {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Parameter) Set(val *IoArgoprojWorkflowV1alpha1Parameter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Parameter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Parameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Parameter(val *IoArgoprojWorkflowV1alpha1Parameter) *NullableIoArgoprojWorkflowV1alpha1Parameter {
	return &NullableIoArgoprojWorkflowV1alpha1Parameter{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Parameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Parameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


