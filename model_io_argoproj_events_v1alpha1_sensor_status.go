/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1SensorStatus SensorStatus contains information about the status of a sensor.
type IoArgoprojEventsV1alpha1SensorStatus struct {
	Status *IoArgoprojEventsV1alpha1Status `json:"status,omitempty"`
}

// NewIoArgoprojEventsV1alpha1SensorStatus instantiates a new IoArgoprojEventsV1alpha1SensorStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1SensorStatus() *IoArgoprojEventsV1alpha1SensorStatus {
	this := IoArgoprojEventsV1alpha1SensorStatus{}
	return &this
}

// NewIoArgoprojEventsV1alpha1SensorStatusWithDefaults instantiates a new IoArgoprojEventsV1alpha1SensorStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1SensorStatusWithDefaults() *IoArgoprojEventsV1alpha1SensorStatus {
	this := IoArgoprojEventsV1alpha1SensorStatus{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1SensorStatus) GetStatus() IoArgoprojEventsV1alpha1Status {
	if o == nil || o.Status == nil {
		var ret IoArgoprojEventsV1alpha1Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1SensorStatus) GetStatusOk() (*IoArgoprojEventsV1alpha1Status, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1SensorStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given IoArgoprojEventsV1alpha1Status and assigns it to the Status field.
func (o *IoArgoprojEventsV1alpha1SensorStatus) SetStatus(v IoArgoprojEventsV1alpha1Status) {
	o.Status = &v
}

func (o IoArgoprojEventsV1alpha1SensorStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1SensorStatus struct {
	value *IoArgoprojEventsV1alpha1SensorStatus
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1SensorStatus) Get() *IoArgoprojEventsV1alpha1SensorStatus {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1SensorStatus) Set(val *IoArgoprojEventsV1alpha1SensorStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1SensorStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1SensorStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1SensorStatus(val *IoArgoprojEventsV1alpha1SensorStatus) *NullableIoArgoprojEventsV1alpha1SensorStatus {
	return &NullableIoArgoprojEventsV1alpha1SensorStatus{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1SensorStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1SensorStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


