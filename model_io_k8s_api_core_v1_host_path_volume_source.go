/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1HostPathVolumeSource Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.
type IoK8sApiCoreV1HostPathVolumeSource struct {
	// Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path string `json:"path"`
	// Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type *string `json:"type,omitempty"`
}

// NewIoK8sApiCoreV1HostPathVolumeSource instantiates a new IoK8sApiCoreV1HostPathVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1HostPathVolumeSource(path string) *IoK8sApiCoreV1HostPathVolumeSource {
	this := IoK8sApiCoreV1HostPathVolumeSource{}
	this.Path = path
	return &this
}

// NewIoK8sApiCoreV1HostPathVolumeSourceWithDefaults instantiates a new IoK8sApiCoreV1HostPathVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1HostPathVolumeSourceWithDefaults() *IoK8sApiCoreV1HostPathVolumeSource {
	this := IoK8sApiCoreV1HostPathVolumeSource{}
	return &this
}

// GetPath returns the Path field value
func (o *IoK8sApiCoreV1HostPathVolumeSource) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1HostPathVolumeSource) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *IoK8sApiCoreV1HostPathVolumeSource) SetPath(v string) {
	o.Path = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1HostPathVolumeSource) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1HostPathVolumeSource) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1HostPathVolumeSource) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IoK8sApiCoreV1HostPathVolumeSource) SetType(v string) {
	o.Type = &v
}

func (o IoK8sApiCoreV1HostPathVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["path"] = o.Path
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1HostPathVolumeSource struct {
	value *IoK8sApiCoreV1HostPathVolumeSource
	isSet bool
}

func (v NullableIoK8sApiCoreV1HostPathVolumeSource) Get() *IoK8sApiCoreV1HostPathVolumeSource {
	return v.value
}

func (v *NullableIoK8sApiCoreV1HostPathVolumeSource) Set(val *IoK8sApiCoreV1HostPathVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1HostPathVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1HostPathVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1HostPathVolumeSource(val *IoK8sApiCoreV1HostPathVolumeSource) *NullableIoK8sApiCoreV1HostPathVolumeSource {
	return &NullableIoK8sApiCoreV1HostPathVolumeSource{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1HostPathVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1HostPathVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


