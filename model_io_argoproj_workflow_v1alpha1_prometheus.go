/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Prometheus Prometheus is a prometheus metric to be emitted
type IoArgoprojWorkflowV1alpha1Prometheus struct {
	Counter *IoArgoprojWorkflowV1alpha1Counter `json:"counter,omitempty"`
	Gauge *IoArgoprojWorkflowV1alpha1Gauge `json:"gauge,omitempty"`
	// Help is a string that describes the metric
	Help string `json:"help"`
	Histogram *IoArgoprojWorkflowV1alpha1Histogram `json:"histogram,omitempty"`
	// Labels is a list of metric labels
	Labels *[]IoArgoprojWorkflowV1alpha1MetricLabel `json:"labels,omitempty"`
	// Name is the name of the metric
	Name string `json:"name"`
	// When is a conditional statement that decides when to emit the metric
	When *string `json:"when,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1Prometheus instantiates a new IoArgoprojWorkflowV1alpha1Prometheus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Prometheus(help string, name string) *IoArgoprojWorkflowV1alpha1Prometheus {
	this := IoArgoprojWorkflowV1alpha1Prometheus{}
	this.Help = help
	this.Name = name
	return &this
}

// NewIoArgoprojWorkflowV1alpha1PrometheusWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Prometheus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1PrometheusWithDefaults() *IoArgoprojWorkflowV1alpha1Prometheus {
	this := IoArgoprojWorkflowV1alpha1Prometheus{}
	return &this
}

// GetCounter returns the Counter field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetCounter() IoArgoprojWorkflowV1alpha1Counter {
	if o == nil || o.Counter == nil {
		var ret IoArgoprojWorkflowV1alpha1Counter
		return ret
	}
	return *o.Counter
}

// GetCounterOk returns a tuple with the Counter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetCounterOk() (*IoArgoprojWorkflowV1alpha1Counter, bool) {
	if o == nil || o.Counter == nil {
		return nil, false
	}
	return o.Counter, true
}

// HasCounter returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) HasCounter() bool {
	if o != nil && o.Counter != nil {
		return true
	}

	return false
}

// SetCounter gets a reference to the given IoArgoprojWorkflowV1alpha1Counter and assigns it to the Counter field.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetCounter(v IoArgoprojWorkflowV1alpha1Counter) {
	o.Counter = &v
}

// GetGauge returns the Gauge field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetGauge() IoArgoprojWorkflowV1alpha1Gauge {
	if o == nil || o.Gauge == nil {
		var ret IoArgoprojWorkflowV1alpha1Gauge
		return ret
	}
	return *o.Gauge
}

// GetGaugeOk returns a tuple with the Gauge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetGaugeOk() (*IoArgoprojWorkflowV1alpha1Gauge, bool) {
	if o == nil || o.Gauge == nil {
		return nil, false
	}
	return o.Gauge, true
}

// HasGauge returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) HasGauge() bool {
	if o != nil && o.Gauge != nil {
		return true
	}

	return false
}

// SetGauge gets a reference to the given IoArgoprojWorkflowV1alpha1Gauge and assigns it to the Gauge field.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetGauge(v IoArgoprojWorkflowV1alpha1Gauge) {
	o.Gauge = &v
}

// GetHelp returns the Help field value
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetHelp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Help
}

// GetHelpOk returns a tuple with the Help field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetHelpOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Help, true
}

// SetHelp sets field value
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetHelp(v string) {
	o.Help = v
}

// GetHistogram returns the Histogram field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetHistogram() IoArgoprojWorkflowV1alpha1Histogram {
	if o == nil || o.Histogram == nil {
		var ret IoArgoprojWorkflowV1alpha1Histogram
		return ret
	}
	return *o.Histogram
}

// GetHistogramOk returns a tuple with the Histogram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetHistogramOk() (*IoArgoprojWorkflowV1alpha1Histogram, bool) {
	if o == nil || o.Histogram == nil {
		return nil, false
	}
	return o.Histogram, true
}

// HasHistogram returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) HasHistogram() bool {
	if o != nil && o.Histogram != nil {
		return true
	}

	return false
}

// SetHistogram gets a reference to the given IoArgoprojWorkflowV1alpha1Histogram and assigns it to the Histogram field.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetHistogram(v IoArgoprojWorkflowV1alpha1Histogram) {
	o.Histogram = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetLabels() []IoArgoprojWorkflowV1alpha1MetricLabel {
	if o == nil || o.Labels == nil {
		var ret []IoArgoprojWorkflowV1alpha1MetricLabel
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetLabelsOk() (*[]IoArgoprojWorkflowV1alpha1MetricLabel, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []IoArgoprojWorkflowV1alpha1MetricLabel and assigns it to the Labels field.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetLabels(v []IoArgoprojWorkflowV1alpha1MetricLabel) {
	o.Labels = &v
}

// GetName returns the Name field value
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetName(v string) {
	o.Name = v
}

// GetWhen returns the When field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetWhen() string {
	if o == nil || o.When == nil {
		var ret string
		return ret
	}
	return *o.When
}

// GetWhenOk returns a tuple with the When field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) GetWhenOk() (*string, bool) {
	if o == nil || o.When == nil {
		return nil, false
	}
	return o.When, true
}

// HasWhen returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) HasWhen() bool {
	if o != nil && o.When != nil {
		return true
	}

	return false
}

// SetWhen gets a reference to the given string and assigns it to the When field.
func (o *IoArgoprojWorkflowV1alpha1Prometheus) SetWhen(v string) {
	o.When = &v
}

func (o IoArgoprojWorkflowV1alpha1Prometheus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Counter != nil {
		toSerialize["counter"] = o.Counter
	}
	if o.Gauge != nil {
		toSerialize["gauge"] = o.Gauge
	}
	if true {
		toSerialize["help"] = o.Help
	}
	if o.Histogram != nil {
		toSerialize["histogram"] = o.Histogram
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.When != nil {
		toSerialize["when"] = o.When
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Prometheus struct {
	value *IoArgoprojWorkflowV1alpha1Prometheus
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Prometheus) Get() *IoArgoprojWorkflowV1alpha1Prometheus {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Prometheus) Set(val *IoArgoprojWorkflowV1alpha1Prometheus) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Prometheus) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Prometheus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Prometheus(val *IoArgoprojWorkflowV1alpha1Prometheus) *NullableIoArgoprojWorkflowV1alpha1Prometheus {
	return &NullableIoArgoprojWorkflowV1alpha1Prometheus{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Prometheus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Prometheus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


