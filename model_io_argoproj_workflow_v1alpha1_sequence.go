/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Sequence Sequence expands a workflow step into numeric range
type IoArgoprojWorkflowV1alpha1Sequence struct {
	Count *string `json:"count,omitempty"`
	End *string `json:"end,omitempty"`
	// Format is a printf format string to format the value in the sequence
	Format *string `json:"format,omitempty"`
	Start *string `json:"start,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1Sequence instantiates a new IoArgoprojWorkflowV1alpha1Sequence object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Sequence() *IoArgoprojWorkflowV1alpha1Sequence {
	this := IoArgoprojWorkflowV1alpha1Sequence{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1SequenceWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Sequence object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1SequenceWithDefaults() *IoArgoprojWorkflowV1alpha1Sequence {
	this := IoArgoprojWorkflowV1alpha1Sequence{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetCount() string {
	if o == nil || o.Count == nil {
		var ret string
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetCountOk() (*string, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given string and assigns it to the Count field.
func (o *IoArgoprojWorkflowV1alpha1Sequence) SetCount(v string) {
	o.Count = &v
}

// GetEnd returns the End field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetEnd() string {
	if o == nil || o.End == nil {
		var ret string
		return ret
	}
	return *o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetEndOk() (*string, bool) {
	if o == nil || o.End == nil {
		return nil, false
	}
	return o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) HasEnd() bool {
	if o != nil && o.End != nil {
		return true
	}

	return false
}

// SetEnd gets a reference to the given string and assigns it to the End field.
func (o *IoArgoprojWorkflowV1alpha1Sequence) SetEnd(v string) {
	o.End = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *IoArgoprojWorkflowV1alpha1Sequence) SetFormat(v string) {
	o.Format = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetStart() string {
	if o == nil || o.Start == nil {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) GetStartOk() (*string, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Sequence) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *IoArgoprojWorkflowV1alpha1Sequence) SetStart(v string) {
	o.Start = &v
}

func (o IoArgoprojWorkflowV1alpha1Sequence) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Sequence struct {
	value *IoArgoprojWorkflowV1alpha1Sequence
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Sequence) Get() *IoArgoprojWorkflowV1alpha1Sequence {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Sequence) Set(val *IoArgoprojWorkflowV1alpha1Sequence) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Sequence) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Sequence) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Sequence(val *IoArgoprojWorkflowV1alpha1Sequence) *NullableIoArgoprojWorkflowV1alpha1Sequence {
	return &NullableIoArgoprojWorkflowV1alpha1Sequence{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Sequence) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Sequence) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


