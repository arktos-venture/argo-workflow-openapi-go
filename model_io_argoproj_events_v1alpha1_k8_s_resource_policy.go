/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1K8SResourcePolicy struct for IoArgoprojEventsV1alpha1K8SResourcePolicy
type IoArgoprojEventsV1alpha1K8SResourcePolicy struct {
	Backoff *IoArgoprojEventsV1alpha1Backoff `json:"backoff,omitempty"`
	ErrorOnBackoffTimeout *bool `json:"errorOnBackoffTimeout,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
}

// NewIoArgoprojEventsV1alpha1K8SResourcePolicy instantiates a new IoArgoprojEventsV1alpha1K8SResourcePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1K8SResourcePolicy() *IoArgoprojEventsV1alpha1K8SResourcePolicy {
	this := IoArgoprojEventsV1alpha1K8SResourcePolicy{}
	return &this
}

// NewIoArgoprojEventsV1alpha1K8SResourcePolicyWithDefaults instantiates a new IoArgoprojEventsV1alpha1K8SResourcePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1K8SResourcePolicyWithDefaults() *IoArgoprojEventsV1alpha1K8SResourcePolicy {
	this := IoArgoprojEventsV1alpha1K8SResourcePolicy{}
	return &this
}

// GetBackoff returns the Backoff field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) GetBackoff() IoArgoprojEventsV1alpha1Backoff {
	if o == nil || o.Backoff == nil {
		var ret IoArgoprojEventsV1alpha1Backoff
		return ret
	}
	return *o.Backoff
}

// GetBackoffOk returns a tuple with the Backoff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) GetBackoffOk() (*IoArgoprojEventsV1alpha1Backoff, bool) {
	if o == nil || o.Backoff == nil {
		return nil, false
	}
	return o.Backoff, true
}

// HasBackoff returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) HasBackoff() bool {
	if o != nil && o.Backoff != nil {
		return true
	}

	return false
}

// SetBackoff gets a reference to the given IoArgoprojEventsV1alpha1Backoff and assigns it to the Backoff field.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) SetBackoff(v IoArgoprojEventsV1alpha1Backoff) {
	o.Backoff = &v
}

// GetErrorOnBackoffTimeout returns the ErrorOnBackoffTimeout field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) GetErrorOnBackoffTimeout() bool {
	if o == nil || o.ErrorOnBackoffTimeout == nil {
		var ret bool
		return ret
	}
	return *o.ErrorOnBackoffTimeout
}

// GetErrorOnBackoffTimeoutOk returns a tuple with the ErrorOnBackoffTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) GetErrorOnBackoffTimeoutOk() (*bool, bool) {
	if o == nil || o.ErrorOnBackoffTimeout == nil {
		return nil, false
	}
	return o.ErrorOnBackoffTimeout, true
}

// HasErrorOnBackoffTimeout returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) HasErrorOnBackoffTimeout() bool {
	if o != nil && o.ErrorOnBackoffTimeout != nil {
		return true
	}

	return false
}

// SetErrorOnBackoffTimeout gets a reference to the given bool and assigns it to the ErrorOnBackoffTimeout field.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) SetErrorOnBackoffTimeout(v bool) {
	o.ErrorOnBackoffTimeout = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) GetLabels() map[string]string {
	if o == nil || o.Labels == nil {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *IoArgoprojEventsV1alpha1K8SResourcePolicy) SetLabels(v map[string]string) {
	o.Labels = &v
}

func (o IoArgoprojEventsV1alpha1K8SResourcePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Backoff != nil {
		toSerialize["backoff"] = o.Backoff
	}
	if o.ErrorOnBackoffTimeout != nil {
		toSerialize["errorOnBackoffTimeout"] = o.ErrorOnBackoffTimeout
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1K8SResourcePolicy struct {
	value *IoArgoprojEventsV1alpha1K8SResourcePolicy
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1K8SResourcePolicy) Get() *IoArgoprojEventsV1alpha1K8SResourcePolicy {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1K8SResourcePolicy) Set(val *IoArgoprojEventsV1alpha1K8SResourcePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1K8SResourcePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1K8SResourcePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1K8SResourcePolicy(val *IoArgoprojEventsV1alpha1K8SResourcePolicy) *NullableIoArgoprojEventsV1alpha1K8SResourcePolicy {
	return &NullableIoArgoprojEventsV1alpha1K8SResourcePolicy{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1K8SResourcePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1K8SResourcePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


