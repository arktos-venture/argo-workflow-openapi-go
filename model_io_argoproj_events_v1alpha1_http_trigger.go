/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1HTTPTrigger struct for IoArgoprojEventsV1alpha1HTTPTrigger
type IoArgoprojEventsV1alpha1HTTPTrigger struct {
	BasicAuth *IoArgoprojEventsV1alpha1BasicAuth `json:"basicAuth,omitempty"`
	Headers *map[string]string `json:"headers,omitempty"`
	Method *string `json:"method,omitempty"`
	// Parameters is the list of key-value extracted from event's payload that are applied to the HTTP trigger resource.
	Parameters *[]IoArgoprojEventsV1alpha1TriggerParameter `json:"parameters,omitempty"`
	Payload *[]IoArgoprojEventsV1alpha1TriggerParameter `json:"payload,omitempty"`
	SecureHeaders *[]IoArgoprojEventsV1alpha1SecureHeader `json:"secureHeaders,omitempty"`
	Timeout *string `json:"timeout,omitempty"`
	Tls *IoArgoprojEventsV1alpha1TLSConfig `json:"tls,omitempty"`
	// URL refers to the URL to send HTTP request to.
	Url *string `json:"url,omitempty"`
}

// NewIoArgoprojEventsV1alpha1HTTPTrigger instantiates a new IoArgoprojEventsV1alpha1HTTPTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1HTTPTrigger() *IoArgoprojEventsV1alpha1HTTPTrigger {
	this := IoArgoprojEventsV1alpha1HTTPTrigger{}
	return &this
}

// NewIoArgoprojEventsV1alpha1HTTPTriggerWithDefaults instantiates a new IoArgoprojEventsV1alpha1HTTPTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1HTTPTriggerWithDefaults() *IoArgoprojEventsV1alpha1HTTPTrigger {
	this := IoArgoprojEventsV1alpha1HTTPTrigger{}
	return &this
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetBasicAuth() IoArgoprojEventsV1alpha1BasicAuth {
	if o == nil || o.BasicAuth == nil {
		var ret IoArgoprojEventsV1alpha1BasicAuth
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetBasicAuthOk() (*IoArgoprojEventsV1alpha1BasicAuth, bool) {
	if o == nil || o.BasicAuth == nil {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasBasicAuth() bool {
	if o != nil && o.BasicAuth != nil {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given IoArgoprojEventsV1alpha1BasicAuth and assigns it to the BasicAuth field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetBasicAuth(v IoArgoprojEventsV1alpha1BasicAuth) {
	o.BasicAuth = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetHeaders() map[string]string {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetMethod(v string) {
	o.Method = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetParameters() []IoArgoprojEventsV1alpha1TriggerParameter {
	if o == nil || o.Parameters == nil {
		var ret []IoArgoprojEventsV1alpha1TriggerParameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetParametersOk() (*[]IoArgoprojEventsV1alpha1TriggerParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []IoArgoprojEventsV1alpha1TriggerParameter and assigns it to the Parameters field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetParameters(v []IoArgoprojEventsV1alpha1TriggerParameter) {
	o.Parameters = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetPayload() []IoArgoprojEventsV1alpha1TriggerParameter {
	if o == nil || o.Payload == nil {
		var ret []IoArgoprojEventsV1alpha1TriggerParameter
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetPayloadOk() (*[]IoArgoprojEventsV1alpha1TriggerParameter, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given []IoArgoprojEventsV1alpha1TriggerParameter and assigns it to the Payload field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetPayload(v []IoArgoprojEventsV1alpha1TriggerParameter) {
	o.Payload = &v
}

// GetSecureHeaders returns the SecureHeaders field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetSecureHeaders() []IoArgoprojEventsV1alpha1SecureHeader {
	if o == nil || o.SecureHeaders == nil {
		var ret []IoArgoprojEventsV1alpha1SecureHeader
		return ret
	}
	return *o.SecureHeaders
}

// GetSecureHeadersOk returns a tuple with the SecureHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetSecureHeadersOk() (*[]IoArgoprojEventsV1alpha1SecureHeader, bool) {
	if o == nil || o.SecureHeaders == nil {
		return nil, false
	}
	return o.SecureHeaders, true
}

// HasSecureHeaders returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasSecureHeaders() bool {
	if o != nil && o.SecureHeaders != nil {
		return true
	}

	return false
}

// SetSecureHeaders gets a reference to the given []IoArgoprojEventsV1alpha1SecureHeader and assigns it to the SecureHeaders field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetSecureHeaders(v []IoArgoprojEventsV1alpha1SecureHeader) {
	o.SecureHeaders = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetTimeout() string {
	if o == nil || o.Timeout == nil {
		var ret string
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetTimeoutOk() (*string, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given string and assigns it to the Timeout field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetTimeout(v string) {
	o.Timeout = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetTls() IoArgoprojEventsV1alpha1TLSConfig {
	if o == nil || o.Tls == nil {
		var ret IoArgoprojEventsV1alpha1TLSConfig
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetTlsOk() (*IoArgoprojEventsV1alpha1TLSConfig, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given IoArgoprojEventsV1alpha1TLSConfig and assigns it to the Tls field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetTls(v IoArgoprojEventsV1alpha1TLSConfig) {
	o.Tls = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IoArgoprojEventsV1alpha1HTTPTrigger) SetUrl(v string) {
	o.Url = &v
}

func (o IoArgoprojEventsV1alpha1HTTPTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BasicAuth != nil {
		toSerialize["basicAuth"] = o.BasicAuth
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.SecureHeaders != nil {
		toSerialize["secureHeaders"] = o.SecureHeaders
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1HTTPTrigger struct {
	value *IoArgoprojEventsV1alpha1HTTPTrigger
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1HTTPTrigger) Get() *IoArgoprojEventsV1alpha1HTTPTrigger {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1HTTPTrigger) Set(val *IoArgoprojEventsV1alpha1HTTPTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1HTTPTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1HTTPTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1HTTPTrigger(val *IoArgoprojEventsV1alpha1HTTPTrigger) *NullableIoArgoprojEventsV1alpha1HTTPTrigger {
	return &NullableIoArgoprojEventsV1alpha1HTTPTrigger{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1HTTPTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1HTTPTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


