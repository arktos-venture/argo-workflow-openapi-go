/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1TimeFilter TimeFilter describes a window in time. It filters out events that occur outside the time limits. In other words, only events that occur after Start and before Stop will pass this filter.
type IoArgoprojEventsV1alpha1TimeFilter struct {
	// Start is the beginning of a time window in UTC. Before this time, events for this dependency are ignored. Format is hh:mm:ss.
	Start *string `json:"start,omitempty"`
	// Stop is the end of a time window in UTC. After or equal to this time, events for this dependency are ignored and Format is hh:mm:ss. If it is smaller than Start, it is treated as next day of Start (e.g.: 22:00:00-01:00:00 means 22:00:00-25:00:00).
	Stop *string `json:"stop,omitempty"`
}

// NewIoArgoprojEventsV1alpha1TimeFilter instantiates a new IoArgoprojEventsV1alpha1TimeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1TimeFilter() *IoArgoprojEventsV1alpha1TimeFilter {
	this := IoArgoprojEventsV1alpha1TimeFilter{}
	return &this
}

// NewIoArgoprojEventsV1alpha1TimeFilterWithDefaults instantiates a new IoArgoprojEventsV1alpha1TimeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1TimeFilterWithDefaults() *IoArgoprojEventsV1alpha1TimeFilter {
	this := IoArgoprojEventsV1alpha1TimeFilter{}
	return &this
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TimeFilter) GetStart() string {
	if o == nil || o.Start == nil {
		var ret string
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TimeFilter) GetStartOk() (*string, bool) {
	if o == nil || o.Start == nil {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TimeFilter) HasStart() bool {
	if o != nil && o.Start != nil {
		return true
	}

	return false
}

// SetStart gets a reference to the given string and assigns it to the Start field.
func (o *IoArgoprojEventsV1alpha1TimeFilter) SetStart(v string) {
	o.Start = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TimeFilter) GetStop() string {
	if o == nil || o.Stop == nil {
		var ret string
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TimeFilter) GetStopOk() (*string, bool) {
	if o == nil || o.Stop == nil {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TimeFilter) HasStop() bool {
	if o != nil && o.Stop != nil {
		return true
	}

	return false
}

// SetStop gets a reference to the given string and assigns it to the Stop field.
func (o *IoArgoprojEventsV1alpha1TimeFilter) SetStop(v string) {
	o.Stop = &v
}

func (o IoArgoprojEventsV1alpha1TimeFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Start != nil {
		toSerialize["start"] = o.Start
	}
	if o.Stop != nil {
		toSerialize["stop"] = o.Stop
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1TimeFilter struct {
	value *IoArgoprojEventsV1alpha1TimeFilter
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1TimeFilter) Get() *IoArgoprojEventsV1alpha1TimeFilter {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1TimeFilter) Set(val *IoArgoprojEventsV1alpha1TimeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1TimeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1TimeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1TimeFilter(val *IoArgoprojEventsV1alpha1TimeFilter) *NullableIoArgoprojEventsV1alpha1TimeFilter {
	return &NullableIoArgoprojEventsV1alpha1TimeFilter{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1TimeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1TimeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


