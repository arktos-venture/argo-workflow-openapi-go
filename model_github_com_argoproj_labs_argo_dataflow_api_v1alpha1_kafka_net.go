/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET
type GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET struct {
	Sasl *GithubComArgoprojLabsArgoDataflowApiV1alpha1SASL `json:"sasl,omitempty"`
	Tls *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS `json:"tls,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET() *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNETWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNETWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET{}
	return &this
}

// GetSasl returns the Sasl field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) GetSasl() GithubComArgoprojLabsArgoDataflowApiV1alpha1SASL {
	if o == nil || o.Sasl == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1SASL
		return ret
	}
	return *o.Sasl
}

// GetSaslOk returns a tuple with the Sasl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) GetSaslOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1SASL, bool) {
	if o == nil || o.Sasl == nil {
		return nil, false
	}
	return o.Sasl, true
}

// HasSasl returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) HasSasl() bool {
	if o != nil && o.Sasl != nil {
		return true
	}

	return false
}

// SetSasl gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1SASL and assigns it to the Sasl field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) SetSasl(v GithubComArgoprojLabsArgoDataflowApiV1alpha1SASL) {
	o.Sasl = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) GetTls() GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS {
	if o == nil || o.Tls == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) GetTlsOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS and assigns it to the Tls field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) SetTls(v GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) {
	o.Tls = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sasl != nil {
		toSerialize["sasl"] = o.Sasl
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


