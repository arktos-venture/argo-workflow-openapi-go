/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1TriggerParameterSource struct for IoArgoprojEventsV1alpha1TriggerParameterSource
type IoArgoprojEventsV1alpha1TriggerParameterSource struct {
	// ContextKey is the JSONPath of the event's (JSON decoded) context key ContextKey is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'. To access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'. See https://github.com/tidwall/gjson#path-syntax for more information on how to use this.
	ContextKey *string `json:"contextKey,omitempty"`
	ContextTemplate *string `json:"contextTemplate,omitempty"`
	// DataKey is the JSONPath of the event's (JSON decoded) data key DataKey is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'. To access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'. See https://github.com/tidwall/gjson#path-syntax for more information on how to use this.
	DataKey *string `json:"dataKey,omitempty"`
	DataTemplate *string `json:"dataTemplate,omitempty"`
	// DependencyName refers to the name of the dependency. The event which is stored for this dependency is used as payload for the parameterization. Make sure to refer to one of the dependencies you have defined under Dependencies list.
	DependencyName *string `json:"dependencyName,omitempty"`
	// Value is the default literal value to use for this parameter source This is only used if the DataKey is invalid. If the DataKey is invalid and this is not defined, this param source will produce an error.
	Value *string `json:"value,omitempty"`
}

// NewIoArgoprojEventsV1alpha1TriggerParameterSource instantiates a new IoArgoprojEventsV1alpha1TriggerParameterSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1TriggerParameterSource() *IoArgoprojEventsV1alpha1TriggerParameterSource {
	this := IoArgoprojEventsV1alpha1TriggerParameterSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1TriggerParameterSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1TriggerParameterSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1TriggerParameterSourceWithDefaults() *IoArgoprojEventsV1alpha1TriggerParameterSource {
	this := IoArgoprojEventsV1alpha1TriggerParameterSource{}
	return &this
}

// GetContextKey returns the ContextKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetContextKey() string {
	if o == nil || o.ContextKey == nil {
		var ret string
		return ret
	}
	return *o.ContextKey
}

// GetContextKeyOk returns a tuple with the ContextKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetContextKeyOk() (*string, bool) {
	if o == nil || o.ContextKey == nil {
		return nil, false
	}
	return o.ContextKey, true
}

// HasContextKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) HasContextKey() bool {
	if o != nil && o.ContextKey != nil {
		return true
	}

	return false
}

// SetContextKey gets a reference to the given string and assigns it to the ContextKey field.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) SetContextKey(v string) {
	o.ContextKey = &v
}

// GetContextTemplate returns the ContextTemplate field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetContextTemplate() string {
	if o == nil || o.ContextTemplate == nil {
		var ret string
		return ret
	}
	return *o.ContextTemplate
}

// GetContextTemplateOk returns a tuple with the ContextTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetContextTemplateOk() (*string, bool) {
	if o == nil || o.ContextTemplate == nil {
		return nil, false
	}
	return o.ContextTemplate, true
}

// HasContextTemplate returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) HasContextTemplate() bool {
	if o != nil && o.ContextTemplate != nil {
		return true
	}

	return false
}

// SetContextTemplate gets a reference to the given string and assigns it to the ContextTemplate field.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) SetContextTemplate(v string) {
	o.ContextTemplate = &v
}

// GetDataKey returns the DataKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetDataKey() string {
	if o == nil || o.DataKey == nil {
		var ret string
		return ret
	}
	return *o.DataKey
}

// GetDataKeyOk returns a tuple with the DataKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetDataKeyOk() (*string, bool) {
	if o == nil || o.DataKey == nil {
		return nil, false
	}
	return o.DataKey, true
}

// HasDataKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) HasDataKey() bool {
	if o != nil && o.DataKey != nil {
		return true
	}

	return false
}

// SetDataKey gets a reference to the given string and assigns it to the DataKey field.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) SetDataKey(v string) {
	o.DataKey = &v
}

// GetDataTemplate returns the DataTemplate field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetDataTemplate() string {
	if o == nil || o.DataTemplate == nil {
		var ret string
		return ret
	}
	return *o.DataTemplate
}

// GetDataTemplateOk returns a tuple with the DataTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetDataTemplateOk() (*string, bool) {
	if o == nil || o.DataTemplate == nil {
		return nil, false
	}
	return o.DataTemplate, true
}

// HasDataTemplate returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) HasDataTemplate() bool {
	if o != nil && o.DataTemplate != nil {
		return true
	}

	return false
}

// SetDataTemplate gets a reference to the given string and assigns it to the DataTemplate field.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) SetDataTemplate(v string) {
	o.DataTemplate = &v
}

// GetDependencyName returns the DependencyName field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetDependencyName() string {
	if o == nil || o.DependencyName == nil {
		var ret string
		return ret
	}
	return *o.DependencyName
}

// GetDependencyNameOk returns a tuple with the DependencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetDependencyNameOk() (*string, bool) {
	if o == nil || o.DependencyName == nil {
		return nil, false
	}
	return o.DependencyName, true
}

// HasDependencyName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) HasDependencyName() bool {
	if o != nil && o.DependencyName != nil {
		return true
	}

	return false
}

// SetDependencyName gets a reference to the given string and assigns it to the DependencyName field.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) SetDependencyName(v string) {
	o.DependencyName = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *IoArgoprojEventsV1alpha1TriggerParameterSource) SetValue(v string) {
	o.Value = &v
}

func (o IoArgoprojEventsV1alpha1TriggerParameterSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContextKey != nil {
		toSerialize["contextKey"] = o.ContextKey
	}
	if o.ContextTemplate != nil {
		toSerialize["contextTemplate"] = o.ContextTemplate
	}
	if o.DataKey != nil {
		toSerialize["dataKey"] = o.DataKey
	}
	if o.DataTemplate != nil {
		toSerialize["dataTemplate"] = o.DataTemplate
	}
	if o.DependencyName != nil {
		toSerialize["dependencyName"] = o.DependencyName
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1TriggerParameterSource struct {
	value *IoArgoprojEventsV1alpha1TriggerParameterSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1TriggerParameterSource) Get() *IoArgoprojEventsV1alpha1TriggerParameterSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1TriggerParameterSource) Set(val *IoArgoprojEventsV1alpha1TriggerParameterSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1TriggerParameterSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1TriggerParameterSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1TriggerParameterSource(val *IoArgoprojEventsV1alpha1TriggerParameterSource) *NullableIoArgoprojEventsV1alpha1TriggerParameterSource {
	return &NullableIoArgoprojEventsV1alpha1TriggerParameterSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1TriggerParameterSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1TriggerParameterSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


