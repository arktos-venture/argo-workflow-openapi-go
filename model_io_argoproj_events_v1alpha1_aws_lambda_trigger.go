/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1AWSLambdaTrigger struct for IoArgoprojEventsV1alpha1AWSLambdaTrigger
type IoArgoprojEventsV1alpha1AWSLambdaTrigger struct {
	AccessKey *IoK8sApiCoreV1SecretKeySelector `json:"accessKey,omitempty"`
	// FunctionName refers to the name of the function to invoke.
	FunctionName *string `json:"functionName,omitempty"`
	// Choose from the following options.     * RequestResponse (default) - Invoke the function synchronously. Keep    the connection open until the function returns a response or times out.    The API response includes the function response and additional data.     * Event - Invoke the function asynchronously. Send events that fail multiple    times to the function's dead-letter queue (if it's configured). The API    response only includes a status code.     * DryRun - Validate parameter values and verify that the user or role    has permission to invoke the function. +optional
	InvocationType *string `json:"invocationType,omitempty"`
	Parameters *[]IoArgoprojEventsV1alpha1TriggerParameter `json:"parameters,omitempty"`
	// Payload is the list of key-value extracted from an event payload to construct the request payload.
	Payload *[]IoArgoprojEventsV1alpha1TriggerParameter `json:"payload,omitempty"`
	Region *string `json:"region,omitempty"`
	SecretKey *IoK8sApiCoreV1SecretKeySelector `json:"secretKey,omitempty"`
}

// NewIoArgoprojEventsV1alpha1AWSLambdaTrigger instantiates a new IoArgoprojEventsV1alpha1AWSLambdaTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1AWSLambdaTrigger() *IoArgoprojEventsV1alpha1AWSLambdaTrigger {
	this := IoArgoprojEventsV1alpha1AWSLambdaTrigger{}
	return &this
}

// NewIoArgoprojEventsV1alpha1AWSLambdaTriggerWithDefaults instantiates a new IoArgoprojEventsV1alpha1AWSLambdaTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1AWSLambdaTriggerWithDefaults() *IoArgoprojEventsV1alpha1AWSLambdaTrigger {
	this := IoArgoprojEventsV1alpha1AWSLambdaTrigger{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetAccessKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.AccessKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetAccessKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the AccessKey field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetAccessKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.AccessKey = &v
}

// GetFunctionName returns the FunctionName field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetFunctionName() string {
	if o == nil || o.FunctionName == nil {
		var ret string
		return ret
	}
	return *o.FunctionName
}

// GetFunctionNameOk returns a tuple with the FunctionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetFunctionNameOk() (*string, bool) {
	if o == nil || o.FunctionName == nil {
		return nil, false
	}
	return o.FunctionName, true
}

// HasFunctionName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasFunctionName() bool {
	if o != nil && o.FunctionName != nil {
		return true
	}

	return false
}

// SetFunctionName gets a reference to the given string and assigns it to the FunctionName field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetFunctionName(v string) {
	o.FunctionName = &v
}

// GetInvocationType returns the InvocationType field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetInvocationType() string {
	if o == nil || o.InvocationType == nil {
		var ret string
		return ret
	}
	return *o.InvocationType
}

// GetInvocationTypeOk returns a tuple with the InvocationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetInvocationTypeOk() (*string, bool) {
	if o == nil || o.InvocationType == nil {
		return nil, false
	}
	return o.InvocationType, true
}

// HasInvocationType returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasInvocationType() bool {
	if o != nil && o.InvocationType != nil {
		return true
	}

	return false
}

// SetInvocationType gets a reference to the given string and assigns it to the InvocationType field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetInvocationType(v string) {
	o.InvocationType = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetParameters() []IoArgoprojEventsV1alpha1TriggerParameter {
	if o == nil || o.Parameters == nil {
		var ret []IoArgoprojEventsV1alpha1TriggerParameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetParametersOk() (*[]IoArgoprojEventsV1alpha1TriggerParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []IoArgoprojEventsV1alpha1TriggerParameter and assigns it to the Parameters field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetParameters(v []IoArgoprojEventsV1alpha1TriggerParameter) {
	o.Parameters = &v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetPayload() []IoArgoprojEventsV1alpha1TriggerParameter {
	if o == nil || o.Payload == nil {
		var ret []IoArgoprojEventsV1alpha1TriggerParameter
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetPayloadOk() (*[]IoArgoprojEventsV1alpha1TriggerParameter, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given []IoArgoprojEventsV1alpha1TriggerParameter and assigns it to the Payload field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetPayload(v []IoArgoprojEventsV1alpha1TriggerParameter) {
	o.Payload = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetRegion(v string) {
	o.Region = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetSecretKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SecretKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) GetSecretKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SecretKey field.
func (o *IoArgoprojEventsV1alpha1AWSLambdaTrigger) SetSecretKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.SecretKey = &v
}

func (o IoArgoprojEventsV1alpha1AWSLambdaTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.FunctionName != nil {
		toSerialize["functionName"] = o.FunctionName
	}
	if o.InvocationType != nil {
		toSerialize["invocationType"] = o.InvocationType
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger struct {
	value *IoArgoprojEventsV1alpha1AWSLambdaTrigger
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger) Get() *IoArgoprojEventsV1alpha1AWSLambdaTrigger {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger) Set(val *IoArgoprojEventsV1alpha1AWSLambdaTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1AWSLambdaTrigger(val *IoArgoprojEventsV1alpha1AWSLambdaTrigger) *NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger {
	return &NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1AWSLambdaTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


