/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1ContinueOn ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.
type IoArgoprojWorkflowV1alpha1ContinueOn struct {
	Error *bool `json:"error,omitempty"`
	Failed *bool `json:"failed,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1ContinueOn instantiates a new IoArgoprojWorkflowV1alpha1ContinueOn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1ContinueOn() *IoArgoprojWorkflowV1alpha1ContinueOn {
	this := IoArgoprojWorkflowV1alpha1ContinueOn{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ContinueOnWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1ContinueOn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ContinueOnWithDefaults() *IoArgoprojWorkflowV1alpha1ContinueOn {
	this := IoArgoprojWorkflowV1alpha1ContinueOn{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) GetError() bool {
	if o == nil || o.Error == nil {
		var ret bool
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) GetErrorOk() (*bool, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given bool and assigns it to the Error field.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) SetError(v bool) {
	o.Error = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) GetFailed() bool {
	if o == nil || o.Failed == nil {
		var ret bool
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) GetFailedOk() (*bool, bool) {
	if o == nil || o.Failed == nil {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) HasFailed() bool {
	if o != nil && o.Failed != nil {
		return true
	}

	return false
}

// SetFailed gets a reference to the given bool and assigns it to the Failed field.
func (o *IoArgoprojWorkflowV1alpha1ContinueOn) SetFailed(v bool) {
	o.Failed = &v
}

func (o IoArgoprojWorkflowV1alpha1ContinueOn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Failed != nil {
		toSerialize["failed"] = o.Failed
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1ContinueOn struct {
	value *IoArgoprojWorkflowV1alpha1ContinueOn
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1ContinueOn) Get() *IoArgoprojWorkflowV1alpha1ContinueOn {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1ContinueOn) Set(val *IoArgoprojWorkflowV1alpha1ContinueOn) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1ContinueOn) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1ContinueOn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1ContinueOn(val *IoArgoprojWorkflowV1alpha1ContinueOn) *NullableIoArgoprojWorkflowV1alpha1ContinueOn {
	return &NullableIoArgoprojWorkflowV1alpha1ContinueOn{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1ContinueOn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1ContinueOn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


