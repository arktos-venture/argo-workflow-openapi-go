/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1GlusterfsVolumeSource Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.
type IoK8sApiCoreV1GlusterfsVolumeSource struct {
	// EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints string `json:"endpoints"`
	// Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path string `json:"path"`
	// ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly *bool `json:"readOnly,omitempty"`
}

// NewIoK8sApiCoreV1GlusterfsVolumeSource instantiates a new IoK8sApiCoreV1GlusterfsVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1GlusterfsVolumeSource(endpoints string, path string) *IoK8sApiCoreV1GlusterfsVolumeSource {
	this := IoK8sApiCoreV1GlusterfsVolumeSource{}
	this.Endpoints = endpoints
	this.Path = path
	return &this
}

// NewIoK8sApiCoreV1GlusterfsVolumeSourceWithDefaults instantiates a new IoK8sApiCoreV1GlusterfsVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1GlusterfsVolumeSourceWithDefaults() *IoK8sApiCoreV1GlusterfsVolumeSource {
	this := IoK8sApiCoreV1GlusterfsVolumeSource{}
	return &this
}

// GetEndpoints returns the Endpoints field value
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) GetEndpoints() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) GetEndpointsOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Endpoints, true
}

// SetEndpoints sets field value
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) SetEndpoints(v string) {
	o.Endpoints = v
}

// GetPath returns the Path field value
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) SetPath(v string) {
	o.Path = v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *IoK8sApiCoreV1GlusterfsVolumeSource) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

func (o IoK8sApiCoreV1GlusterfsVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["endpoints"] = o.Endpoints
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1GlusterfsVolumeSource struct {
	value *IoK8sApiCoreV1GlusterfsVolumeSource
	isSet bool
}

func (v NullableIoK8sApiCoreV1GlusterfsVolumeSource) Get() *IoK8sApiCoreV1GlusterfsVolumeSource {
	return v.value
}

func (v *NullableIoK8sApiCoreV1GlusterfsVolumeSource) Set(val *IoK8sApiCoreV1GlusterfsVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1GlusterfsVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1GlusterfsVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1GlusterfsVolumeSource(val *IoK8sApiCoreV1GlusterfsVolumeSource) *NullableIoK8sApiCoreV1GlusterfsVolumeSource {
	return &NullableIoK8sApiCoreV1GlusterfsVolumeSource{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1GlusterfsVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1GlusterfsVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


