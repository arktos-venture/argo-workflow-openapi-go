/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1AzureEventsHubEventSource struct for IoArgoprojEventsV1alpha1AzureEventsHubEventSource
type IoArgoprojEventsV1alpha1AzureEventsHubEventSource struct {
	Fqdn *string `json:"fqdn,omitempty"`
	HubName *string `json:"hubName,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	SharedAccessKey *IoK8sApiCoreV1SecretKeySelector `json:"sharedAccessKey,omitempty"`
	SharedAccessKeyName *IoK8sApiCoreV1SecretKeySelector `json:"sharedAccessKeyName,omitempty"`
}

// NewIoArgoprojEventsV1alpha1AzureEventsHubEventSource instantiates a new IoArgoprojEventsV1alpha1AzureEventsHubEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1AzureEventsHubEventSource() *IoArgoprojEventsV1alpha1AzureEventsHubEventSource {
	this := IoArgoprojEventsV1alpha1AzureEventsHubEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1AzureEventsHubEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1AzureEventsHubEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1AzureEventsHubEventSourceWithDefaults() *IoArgoprojEventsV1alpha1AzureEventsHubEventSource {
	this := IoArgoprojEventsV1alpha1AzureEventsHubEventSource{}
	return &this
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetFqdn() string {
	if o == nil || o.Fqdn == nil {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetFqdnOk() (*string, bool) {
	if o == nil || o.Fqdn == nil {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) HasFqdn() bool {
	if o != nil && o.Fqdn != nil {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) SetFqdn(v string) {
	o.Fqdn = &v
}

// GetHubName returns the HubName field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetHubName() string {
	if o == nil || o.HubName == nil {
		var ret string
		return ret
	}
	return *o.HubName
}

// GetHubNameOk returns a tuple with the HubName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetHubNameOk() (*string, bool) {
	if o == nil || o.HubName == nil {
		return nil, false
	}
	return o.HubName, true
}

// HasHubName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) HasHubName() bool {
	if o != nil && o.HubName != nil {
		return true
	}

	return false
}

// SetHubName gets a reference to the given string and assigns it to the HubName field.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) SetHubName(v string) {
	o.HubName = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetSharedAccessKey returns the SharedAccessKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetSharedAccessKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SharedAccessKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SharedAccessKey
}

// GetSharedAccessKeyOk returns a tuple with the SharedAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetSharedAccessKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SharedAccessKey == nil {
		return nil, false
	}
	return o.SharedAccessKey, true
}

// HasSharedAccessKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) HasSharedAccessKey() bool {
	if o != nil && o.SharedAccessKey != nil {
		return true
	}

	return false
}

// SetSharedAccessKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SharedAccessKey field.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) SetSharedAccessKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.SharedAccessKey = &v
}

// GetSharedAccessKeyName returns the SharedAccessKeyName field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetSharedAccessKeyName() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SharedAccessKeyName == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SharedAccessKeyName
}

// GetSharedAccessKeyNameOk returns a tuple with the SharedAccessKeyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) GetSharedAccessKeyNameOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SharedAccessKeyName == nil {
		return nil, false
	}
	return o.SharedAccessKeyName, true
}

// HasSharedAccessKeyName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) HasSharedAccessKeyName() bool {
	if o != nil && o.SharedAccessKeyName != nil {
		return true
	}

	return false
}

// SetSharedAccessKeyName gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SharedAccessKeyName field.
func (o *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) SetSharedAccessKeyName(v IoK8sApiCoreV1SecretKeySelector) {
	o.SharedAccessKeyName = &v
}

func (o IoArgoprojEventsV1alpha1AzureEventsHubEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Fqdn != nil {
		toSerialize["fqdn"] = o.Fqdn
	}
	if o.HubName != nil {
		toSerialize["hubName"] = o.HubName
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.SharedAccessKey != nil {
		toSerialize["sharedAccessKey"] = o.SharedAccessKey
	}
	if o.SharedAccessKeyName != nil {
		toSerialize["sharedAccessKeyName"] = o.SharedAccessKeyName
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource struct {
	value *IoArgoprojEventsV1alpha1AzureEventsHubEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource) Get() *IoArgoprojEventsV1alpha1AzureEventsHubEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource) Set(val *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource(val *IoArgoprojEventsV1alpha1AzureEventsHubEventSource) *NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource {
	return &NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1AzureEventsHubEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


