/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1ArtifactPaths ArtifactPaths expands a step from a collection of artifacts
type IoArgoprojWorkflowV1alpha1ArtifactPaths struct {
	Archive *IoArgoprojWorkflowV1alpha1ArchiveStrategy `json:"archive,omitempty"`
	// ArchiveLogs indicates if the container logs should be archived
	ArchiveLogs *bool `json:"archiveLogs,omitempty"`
	Artifactory *IoArgoprojWorkflowV1alpha1ArtifactoryArtifact `json:"artifactory,omitempty"`
	// From allows an artifact to reference an artifact from a previous step
	From *string `json:"from,omitempty"`
	// FromExpression, if defined, is evaluated to specify the value for the artifact
	FromExpression *string `json:"fromExpression,omitempty"`
	Gcs *IoArgoprojWorkflowV1alpha1GCSArtifact `json:"gcs,omitempty"`
	Git *IoArgoprojWorkflowV1alpha1GitArtifact `json:"git,omitempty"`
	// GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts
	GlobalName *string `json:"globalName,omitempty"`
	Hdfs *IoArgoprojWorkflowV1alpha1HDFSArtifact `json:"hdfs,omitempty"`
	Http *IoArgoprojWorkflowV1alpha1HTTPArtifact `json:"http,omitempty"`
	// mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.
	Mode *int32 `json:"mode,omitempty"`
	// name of the artifact. must be unique within a template's inputs/outputs.
	Name string `json:"name"`
	// Make Artifacts optional, if Artifacts doesn't generate or exist
	Optional *bool `json:"optional,omitempty"`
	Oss *IoArgoprojWorkflowV1alpha1OSSArtifact `json:"oss,omitempty"`
	// Path is the container path to the artifact
	Path *string `json:"path,omitempty"`
	Raw *IoArgoprojWorkflowV1alpha1RawArtifact `json:"raw,omitempty"`
	// If mode is set, apply the permission recursively into the artifact if it is a folder
	RecurseMode *bool `json:"recurseMode,omitempty"`
	S3 *IoArgoprojWorkflowV1alpha1S3Artifact `json:"s3,omitempty"`
	// SubPath allows an artifact to be sourced from a subpath within the specified source
	SubPath *string `json:"subPath,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1ArtifactPaths instantiates a new IoArgoprojWorkflowV1alpha1ArtifactPaths object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1ArtifactPaths(name string) *IoArgoprojWorkflowV1alpha1ArtifactPaths {
	this := IoArgoprojWorkflowV1alpha1ArtifactPaths{}
	this.Name = name
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ArtifactPathsWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1ArtifactPaths object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ArtifactPathsWithDefaults() *IoArgoprojWorkflowV1alpha1ArtifactPaths {
	this := IoArgoprojWorkflowV1alpha1ArtifactPaths{}
	return &this
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetArchive() IoArgoprojWorkflowV1alpha1ArchiveStrategy {
	if o == nil || o.Archive == nil {
		var ret IoArgoprojWorkflowV1alpha1ArchiveStrategy
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetArchiveOk() (*IoArgoprojWorkflowV1alpha1ArchiveStrategy, bool) {
	if o == nil || o.Archive == nil {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasArchive() bool {
	if o != nil && o.Archive != nil {
		return true
	}

	return false
}

// SetArchive gets a reference to the given IoArgoprojWorkflowV1alpha1ArchiveStrategy and assigns it to the Archive field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetArchive(v IoArgoprojWorkflowV1alpha1ArchiveStrategy) {
	o.Archive = &v
}

// GetArchiveLogs returns the ArchiveLogs field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetArchiveLogs() bool {
	if o == nil || o.ArchiveLogs == nil {
		var ret bool
		return ret
	}
	return *o.ArchiveLogs
}

// GetArchiveLogsOk returns a tuple with the ArchiveLogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetArchiveLogsOk() (*bool, bool) {
	if o == nil || o.ArchiveLogs == nil {
		return nil, false
	}
	return o.ArchiveLogs, true
}

// HasArchiveLogs returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasArchiveLogs() bool {
	if o != nil && o.ArchiveLogs != nil {
		return true
	}

	return false
}

// SetArchiveLogs gets a reference to the given bool and assigns it to the ArchiveLogs field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetArchiveLogs(v bool) {
	o.ArchiveLogs = &v
}

// GetArtifactory returns the Artifactory field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetArtifactory() IoArgoprojWorkflowV1alpha1ArtifactoryArtifact {
	if o == nil || o.Artifactory == nil {
		var ret IoArgoprojWorkflowV1alpha1ArtifactoryArtifact
		return ret
	}
	return *o.Artifactory
}

// GetArtifactoryOk returns a tuple with the Artifactory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetArtifactoryOk() (*IoArgoprojWorkflowV1alpha1ArtifactoryArtifact, bool) {
	if o == nil || o.Artifactory == nil {
		return nil, false
	}
	return o.Artifactory, true
}

// HasArtifactory returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasArtifactory() bool {
	if o != nil && o.Artifactory != nil {
		return true
	}

	return false
}

// SetArtifactory gets a reference to the given IoArgoprojWorkflowV1alpha1ArtifactoryArtifact and assigns it to the Artifactory field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetArtifactory(v IoArgoprojWorkflowV1alpha1ArtifactoryArtifact) {
	o.Artifactory = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetFrom() string {
	if o == nil || o.From == nil {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetFromOk() (*string, bool) {
	if o == nil || o.From == nil {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasFrom() bool {
	if o != nil && o.From != nil {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetFrom(v string) {
	o.From = &v
}

// GetFromExpression returns the FromExpression field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetFromExpression() string {
	if o == nil || o.FromExpression == nil {
		var ret string
		return ret
	}
	return *o.FromExpression
}

// GetFromExpressionOk returns a tuple with the FromExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetFromExpressionOk() (*string, bool) {
	if o == nil || o.FromExpression == nil {
		return nil, false
	}
	return o.FromExpression, true
}

// HasFromExpression returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasFromExpression() bool {
	if o != nil && o.FromExpression != nil {
		return true
	}

	return false
}

// SetFromExpression gets a reference to the given string and assigns it to the FromExpression field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetFromExpression(v string) {
	o.FromExpression = &v
}

// GetGcs returns the Gcs field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetGcs() IoArgoprojWorkflowV1alpha1GCSArtifact {
	if o == nil || o.Gcs == nil {
		var ret IoArgoprojWorkflowV1alpha1GCSArtifact
		return ret
	}
	return *o.Gcs
}

// GetGcsOk returns a tuple with the Gcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetGcsOk() (*IoArgoprojWorkflowV1alpha1GCSArtifact, bool) {
	if o == nil || o.Gcs == nil {
		return nil, false
	}
	return o.Gcs, true
}

// HasGcs returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasGcs() bool {
	if o != nil && o.Gcs != nil {
		return true
	}

	return false
}

// SetGcs gets a reference to the given IoArgoprojWorkflowV1alpha1GCSArtifact and assigns it to the Gcs field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetGcs(v IoArgoprojWorkflowV1alpha1GCSArtifact) {
	o.Gcs = &v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetGit() IoArgoprojWorkflowV1alpha1GitArtifact {
	if o == nil || o.Git == nil {
		var ret IoArgoprojWorkflowV1alpha1GitArtifact
		return ret
	}
	return *o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetGitOk() (*IoArgoprojWorkflowV1alpha1GitArtifact, bool) {
	if o == nil || o.Git == nil {
		return nil, false
	}
	return o.Git, true
}

// HasGit returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasGit() bool {
	if o != nil && o.Git != nil {
		return true
	}

	return false
}

// SetGit gets a reference to the given IoArgoprojWorkflowV1alpha1GitArtifact and assigns it to the Git field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetGit(v IoArgoprojWorkflowV1alpha1GitArtifact) {
	o.Git = &v
}

// GetGlobalName returns the GlobalName field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetGlobalName() string {
	if o == nil || o.GlobalName == nil {
		var ret string
		return ret
	}
	return *o.GlobalName
}

// GetGlobalNameOk returns a tuple with the GlobalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetGlobalNameOk() (*string, bool) {
	if o == nil || o.GlobalName == nil {
		return nil, false
	}
	return o.GlobalName, true
}

// HasGlobalName returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasGlobalName() bool {
	if o != nil && o.GlobalName != nil {
		return true
	}

	return false
}

// SetGlobalName gets a reference to the given string and assigns it to the GlobalName field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetGlobalName(v string) {
	o.GlobalName = &v
}

// GetHdfs returns the Hdfs field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetHdfs() IoArgoprojWorkflowV1alpha1HDFSArtifact {
	if o == nil || o.Hdfs == nil {
		var ret IoArgoprojWorkflowV1alpha1HDFSArtifact
		return ret
	}
	return *o.Hdfs
}

// GetHdfsOk returns a tuple with the Hdfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetHdfsOk() (*IoArgoprojWorkflowV1alpha1HDFSArtifact, bool) {
	if o == nil || o.Hdfs == nil {
		return nil, false
	}
	return o.Hdfs, true
}

// HasHdfs returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasHdfs() bool {
	if o != nil && o.Hdfs != nil {
		return true
	}

	return false
}

// SetHdfs gets a reference to the given IoArgoprojWorkflowV1alpha1HDFSArtifact and assigns it to the Hdfs field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetHdfs(v IoArgoprojWorkflowV1alpha1HDFSArtifact) {
	o.Hdfs = &v
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetHttp() IoArgoprojWorkflowV1alpha1HTTPArtifact {
	if o == nil || o.Http == nil {
		var ret IoArgoprojWorkflowV1alpha1HTTPArtifact
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetHttpOk() (*IoArgoprojWorkflowV1alpha1HTTPArtifact, bool) {
	if o == nil || o.Http == nil {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasHttp() bool {
	if o != nil && o.Http != nil {
		return true
	}

	return false
}

// SetHttp gets a reference to the given IoArgoprojWorkflowV1alpha1HTTPArtifact and assigns it to the Http field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetHttp(v IoArgoprojWorkflowV1alpha1HTTPArtifact) {
	o.Http = &v
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetMode() int32 {
	if o == nil || o.Mode == nil {
		var ret int32
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetModeOk() (*int32, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given int32 and assigns it to the Mode field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetMode(v int32) {
	o.Mode = &v
}

// GetName returns the Name field value
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetName(v string) {
	o.Name = v
}

// GetOptional returns the Optional field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetOptional() bool {
	if o == nil || o.Optional == nil {
		var ret bool
		return ret
	}
	return *o.Optional
}

// GetOptionalOk returns a tuple with the Optional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetOptionalOk() (*bool, bool) {
	if o == nil || o.Optional == nil {
		return nil, false
	}
	return o.Optional, true
}

// HasOptional returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasOptional() bool {
	if o != nil && o.Optional != nil {
		return true
	}

	return false
}

// SetOptional gets a reference to the given bool and assigns it to the Optional field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetOptional(v bool) {
	o.Optional = &v
}

// GetOss returns the Oss field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetOss() IoArgoprojWorkflowV1alpha1OSSArtifact {
	if o == nil || o.Oss == nil {
		var ret IoArgoprojWorkflowV1alpha1OSSArtifact
		return ret
	}
	return *o.Oss
}

// GetOssOk returns a tuple with the Oss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetOssOk() (*IoArgoprojWorkflowV1alpha1OSSArtifact, bool) {
	if o == nil || o.Oss == nil {
		return nil, false
	}
	return o.Oss, true
}

// HasOss returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasOss() bool {
	if o != nil && o.Oss != nil {
		return true
	}

	return false
}

// SetOss gets a reference to the given IoArgoprojWorkflowV1alpha1OSSArtifact and assigns it to the Oss field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetOss(v IoArgoprojWorkflowV1alpha1OSSArtifact) {
	o.Oss = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetPath(v string) {
	o.Path = &v
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetRaw() IoArgoprojWorkflowV1alpha1RawArtifact {
	if o == nil || o.Raw == nil {
		var ret IoArgoprojWorkflowV1alpha1RawArtifact
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetRawOk() (*IoArgoprojWorkflowV1alpha1RawArtifact, bool) {
	if o == nil || o.Raw == nil {
		return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasRaw() bool {
	if o != nil && o.Raw != nil {
		return true
	}

	return false
}

// SetRaw gets a reference to the given IoArgoprojWorkflowV1alpha1RawArtifact and assigns it to the Raw field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetRaw(v IoArgoprojWorkflowV1alpha1RawArtifact) {
	o.Raw = &v
}

// GetRecurseMode returns the RecurseMode field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetRecurseMode() bool {
	if o == nil || o.RecurseMode == nil {
		var ret bool
		return ret
	}
	return *o.RecurseMode
}

// GetRecurseModeOk returns a tuple with the RecurseMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetRecurseModeOk() (*bool, bool) {
	if o == nil || o.RecurseMode == nil {
		return nil, false
	}
	return o.RecurseMode, true
}

// HasRecurseMode returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasRecurseMode() bool {
	if o != nil && o.RecurseMode != nil {
		return true
	}

	return false
}

// SetRecurseMode gets a reference to the given bool and assigns it to the RecurseMode field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetRecurseMode(v bool) {
	o.RecurseMode = &v
}

// GetS3 returns the S3 field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetS3() IoArgoprojWorkflowV1alpha1S3Artifact {
	if o == nil || o.S3 == nil {
		var ret IoArgoprojWorkflowV1alpha1S3Artifact
		return ret
	}
	return *o.S3
}

// GetS3Ok returns a tuple with the S3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetS3Ok() (*IoArgoprojWorkflowV1alpha1S3Artifact, bool) {
	if o == nil || o.S3 == nil {
		return nil, false
	}
	return o.S3, true
}

// HasS3 returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasS3() bool {
	if o != nil && o.S3 != nil {
		return true
	}

	return false
}

// SetS3 gets a reference to the given IoArgoprojWorkflowV1alpha1S3Artifact and assigns it to the S3 field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetS3(v IoArgoprojWorkflowV1alpha1S3Artifact) {
	o.S3 = &v
}

// GetSubPath returns the SubPath field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetSubPath() string {
	if o == nil || o.SubPath == nil {
		var ret string
		return ret
	}
	return *o.SubPath
}

// GetSubPathOk returns a tuple with the SubPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) GetSubPathOk() (*string, bool) {
	if o == nil || o.SubPath == nil {
		return nil, false
	}
	return o.SubPath, true
}

// HasSubPath returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) HasSubPath() bool {
	if o != nil && o.SubPath != nil {
		return true
	}

	return false
}

// SetSubPath gets a reference to the given string and assigns it to the SubPath field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactPaths) SetSubPath(v string) {
	o.SubPath = &v
}

func (o IoArgoprojWorkflowV1alpha1ArtifactPaths) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Archive != nil {
		toSerialize["archive"] = o.Archive
	}
	if o.ArchiveLogs != nil {
		toSerialize["archiveLogs"] = o.ArchiveLogs
	}
	if o.Artifactory != nil {
		toSerialize["artifactory"] = o.Artifactory
	}
	if o.From != nil {
		toSerialize["from"] = o.From
	}
	if o.FromExpression != nil {
		toSerialize["fromExpression"] = o.FromExpression
	}
	if o.Gcs != nil {
		toSerialize["gcs"] = o.Gcs
	}
	if o.Git != nil {
		toSerialize["git"] = o.Git
	}
	if o.GlobalName != nil {
		toSerialize["globalName"] = o.GlobalName
	}
	if o.Hdfs != nil {
		toSerialize["hdfs"] = o.Hdfs
	}
	if o.Http != nil {
		toSerialize["http"] = o.Http
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Optional != nil {
		toSerialize["optional"] = o.Optional
	}
	if o.Oss != nil {
		toSerialize["oss"] = o.Oss
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Raw != nil {
		toSerialize["raw"] = o.Raw
	}
	if o.RecurseMode != nil {
		toSerialize["recurseMode"] = o.RecurseMode
	}
	if o.S3 != nil {
		toSerialize["s3"] = o.S3
	}
	if o.SubPath != nil {
		toSerialize["subPath"] = o.SubPath
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1ArtifactPaths struct {
	value *IoArgoprojWorkflowV1alpha1ArtifactPaths
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactPaths) Get() *IoArgoprojWorkflowV1alpha1ArtifactPaths {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactPaths) Set(val *IoArgoprojWorkflowV1alpha1ArtifactPaths) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactPaths) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactPaths) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1ArtifactPaths(val *IoArgoprojWorkflowV1alpha1ArtifactPaths) *NullableIoArgoprojWorkflowV1alpha1ArtifactPaths {
	return &NullableIoArgoprojWorkflowV1alpha1ArtifactPaths{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactPaths) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactPaths) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


