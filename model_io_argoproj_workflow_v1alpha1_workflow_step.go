/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1WorkflowStep WorkflowStep is a reference to a template to execute in a series of step
type IoArgoprojWorkflowV1alpha1WorkflowStep struct {
	Arguments *IoArgoprojWorkflowV1alpha1Arguments `json:"arguments,omitempty"`
	ContinueOn *IoArgoprojWorkflowV1alpha1ContinueOn `json:"continueOn,omitempty"`
	// Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step
	Hooks *map[string]IoArgoprojWorkflowV1alpha1LifecycleHook `json:"hooks,omitempty"`
	Inline *IoArgoprojWorkflowV1alpha1Template `json:"inline,omitempty"`
	// Name of the step
	Name *string `json:"name,omitempty"`
	// OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.
	OnExit *string `json:"onExit,omitempty"`
	// Template is the name of the template to execute as the step
	Template *string `json:"template,omitempty"`
	TemplateRef *IoArgoprojWorkflowV1alpha1TemplateRef `json:"templateRef,omitempty"`
	// When is an expression in which the step should conditionally execute
	When *string `json:"when,omitempty"`
	// WithItems expands a step into multiple parallel steps from the items in the list
	WithItems *[]map[string]interface{} `json:"withItems,omitempty"`
	// WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
	WithParam *string `json:"withParam,omitempty"`
	WithSequence *IoArgoprojWorkflowV1alpha1Sequence `json:"withSequence,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1WorkflowStep instantiates a new IoArgoprojWorkflowV1alpha1WorkflowStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1WorkflowStep() *IoArgoprojWorkflowV1alpha1WorkflowStep {
	this := IoArgoprojWorkflowV1alpha1WorkflowStep{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1WorkflowStepWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1WorkflowStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1WorkflowStepWithDefaults() *IoArgoprojWorkflowV1alpha1WorkflowStep {
	this := IoArgoprojWorkflowV1alpha1WorkflowStep{}
	return &this
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetArguments() IoArgoprojWorkflowV1alpha1Arguments {
	if o == nil || o.Arguments == nil {
		var ret IoArgoprojWorkflowV1alpha1Arguments
		return ret
	}
	return *o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetArgumentsOk() (*IoArgoprojWorkflowV1alpha1Arguments, bool) {
	if o == nil || o.Arguments == nil {
		return nil, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasArguments() bool {
	if o != nil && o.Arguments != nil {
		return true
	}

	return false
}

// SetArguments gets a reference to the given IoArgoprojWorkflowV1alpha1Arguments and assigns it to the Arguments field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetArguments(v IoArgoprojWorkflowV1alpha1Arguments) {
	o.Arguments = &v
}

// GetContinueOn returns the ContinueOn field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetContinueOn() IoArgoprojWorkflowV1alpha1ContinueOn {
	if o == nil || o.ContinueOn == nil {
		var ret IoArgoprojWorkflowV1alpha1ContinueOn
		return ret
	}
	return *o.ContinueOn
}

// GetContinueOnOk returns a tuple with the ContinueOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetContinueOnOk() (*IoArgoprojWorkflowV1alpha1ContinueOn, bool) {
	if o == nil || o.ContinueOn == nil {
		return nil, false
	}
	return o.ContinueOn, true
}

// HasContinueOn returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasContinueOn() bool {
	if o != nil && o.ContinueOn != nil {
		return true
	}

	return false
}

// SetContinueOn gets a reference to the given IoArgoprojWorkflowV1alpha1ContinueOn and assigns it to the ContinueOn field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetContinueOn(v IoArgoprojWorkflowV1alpha1ContinueOn) {
	o.ContinueOn = &v
}

// GetHooks returns the Hooks field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetHooks() map[string]IoArgoprojWorkflowV1alpha1LifecycleHook {
	if o == nil || o.Hooks == nil {
		var ret map[string]IoArgoprojWorkflowV1alpha1LifecycleHook
		return ret
	}
	return *o.Hooks
}

// GetHooksOk returns a tuple with the Hooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetHooksOk() (*map[string]IoArgoprojWorkflowV1alpha1LifecycleHook, bool) {
	if o == nil || o.Hooks == nil {
		return nil, false
	}
	return o.Hooks, true
}

// HasHooks returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasHooks() bool {
	if o != nil && o.Hooks != nil {
		return true
	}

	return false
}

// SetHooks gets a reference to the given map[string]IoArgoprojWorkflowV1alpha1LifecycleHook and assigns it to the Hooks field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetHooks(v map[string]IoArgoprojWorkflowV1alpha1LifecycleHook) {
	o.Hooks = &v
}

// GetInline returns the Inline field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetInline() IoArgoprojWorkflowV1alpha1Template {
	if o == nil || o.Inline == nil {
		var ret IoArgoprojWorkflowV1alpha1Template
		return ret
	}
	return *o.Inline
}

// GetInlineOk returns a tuple with the Inline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetInlineOk() (*IoArgoprojWorkflowV1alpha1Template, bool) {
	if o == nil || o.Inline == nil {
		return nil, false
	}
	return o.Inline, true
}

// HasInline returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasInline() bool {
	if o != nil && o.Inline != nil {
		return true
	}

	return false
}

// SetInline gets a reference to the given IoArgoprojWorkflowV1alpha1Template and assigns it to the Inline field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetInline(v IoArgoprojWorkflowV1alpha1Template) {
	o.Inline = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetName(v string) {
	o.Name = &v
}

// GetOnExit returns the OnExit field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetOnExit() string {
	if o == nil || o.OnExit == nil {
		var ret string
		return ret
	}
	return *o.OnExit
}

// GetOnExitOk returns a tuple with the OnExit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetOnExitOk() (*string, bool) {
	if o == nil || o.OnExit == nil {
		return nil, false
	}
	return o.OnExit, true
}

// HasOnExit returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasOnExit() bool {
	if o != nil && o.OnExit != nil {
		return true
	}

	return false
}

// SetOnExit gets a reference to the given string and assigns it to the OnExit field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetOnExit(v string) {
	o.OnExit = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetTemplate(v string) {
	o.Template = &v
}

// GetTemplateRef returns the TemplateRef field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetTemplateRef() IoArgoprojWorkflowV1alpha1TemplateRef {
	if o == nil || o.TemplateRef == nil {
		var ret IoArgoprojWorkflowV1alpha1TemplateRef
		return ret
	}
	return *o.TemplateRef
}

// GetTemplateRefOk returns a tuple with the TemplateRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetTemplateRefOk() (*IoArgoprojWorkflowV1alpha1TemplateRef, bool) {
	if o == nil || o.TemplateRef == nil {
		return nil, false
	}
	return o.TemplateRef, true
}

// HasTemplateRef returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasTemplateRef() bool {
	if o != nil && o.TemplateRef != nil {
		return true
	}

	return false
}

// SetTemplateRef gets a reference to the given IoArgoprojWorkflowV1alpha1TemplateRef and assigns it to the TemplateRef field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetTemplateRef(v IoArgoprojWorkflowV1alpha1TemplateRef) {
	o.TemplateRef = &v
}

// GetWhen returns the When field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWhen() string {
	if o == nil || o.When == nil {
		var ret string
		return ret
	}
	return *o.When
}

// GetWhenOk returns a tuple with the When field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWhenOk() (*string, bool) {
	if o == nil || o.When == nil {
		return nil, false
	}
	return o.When, true
}

// HasWhen returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasWhen() bool {
	if o != nil && o.When != nil {
		return true
	}

	return false
}

// SetWhen gets a reference to the given string and assigns it to the When field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetWhen(v string) {
	o.When = &v
}

// GetWithItems returns the WithItems field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWithItems() []map[string]interface{} {
	if o == nil || o.WithItems == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.WithItems
}

// GetWithItemsOk returns a tuple with the WithItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWithItemsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.WithItems == nil {
		return nil, false
	}
	return o.WithItems, true
}

// HasWithItems returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasWithItems() bool {
	if o != nil && o.WithItems != nil {
		return true
	}

	return false
}

// SetWithItems gets a reference to the given []map[string]interface{} and assigns it to the WithItems field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetWithItems(v []map[string]interface{}) {
	o.WithItems = &v
}

// GetWithParam returns the WithParam field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWithParam() string {
	if o == nil || o.WithParam == nil {
		var ret string
		return ret
	}
	return *o.WithParam
}

// GetWithParamOk returns a tuple with the WithParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWithParamOk() (*string, bool) {
	if o == nil || o.WithParam == nil {
		return nil, false
	}
	return o.WithParam, true
}

// HasWithParam returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasWithParam() bool {
	if o != nil && o.WithParam != nil {
		return true
	}

	return false
}

// SetWithParam gets a reference to the given string and assigns it to the WithParam field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetWithParam(v string) {
	o.WithParam = &v
}

// GetWithSequence returns the WithSequence field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWithSequence() IoArgoprojWorkflowV1alpha1Sequence {
	if o == nil || o.WithSequence == nil {
		var ret IoArgoprojWorkflowV1alpha1Sequence
		return ret
	}
	return *o.WithSequence
}

// GetWithSequenceOk returns a tuple with the WithSequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) GetWithSequenceOk() (*IoArgoprojWorkflowV1alpha1Sequence, bool) {
	if o == nil || o.WithSequence == nil {
		return nil, false
	}
	return o.WithSequence, true
}

// HasWithSequence returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) HasWithSequence() bool {
	if o != nil && o.WithSequence != nil {
		return true
	}

	return false
}

// SetWithSequence gets a reference to the given IoArgoprojWorkflowV1alpha1Sequence and assigns it to the WithSequence field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStep) SetWithSequence(v IoArgoprojWorkflowV1alpha1Sequence) {
	o.WithSequence = &v
}

func (o IoArgoprojWorkflowV1alpha1WorkflowStep) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Arguments != nil {
		toSerialize["arguments"] = o.Arguments
	}
	if o.ContinueOn != nil {
		toSerialize["continueOn"] = o.ContinueOn
	}
	if o.Hooks != nil {
		toSerialize["hooks"] = o.Hooks
	}
	if o.Inline != nil {
		toSerialize["inline"] = o.Inline
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OnExit != nil {
		toSerialize["onExit"] = o.OnExit
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.TemplateRef != nil {
		toSerialize["templateRef"] = o.TemplateRef
	}
	if o.When != nil {
		toSerialize["when"] = o.When
	}
	if o.WithItems != nil {
		toSerialize["withItems"] = o.WithItems
	}
	if o.WithParam != nil {
		toSerialize["withParam"] = o.WithParam
	}
	if o.WithSequence != nil {
		toSerialize["withSequence"] = o.WithSequence
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1WorkflowStep struct {
	value *IoArgoprojWorkflowV1alpha1WorkflowStep
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowStep) Get() *IoArgoprojWorkflowV1alpha1WorkflowStep {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowStep) Set(val *IoArgoprojWorkflowV1alpha1WorkflowStep) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowStep) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1WorkflowStep(val *IoArgoprojWorkflowV1alpha1WorkflowStep) *NullableIoArgoprojWorkflowV1alpha1WorkflowStep {
	return &NullableIoArgoprojWorkflowV1alpha1WorkflowStep{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


