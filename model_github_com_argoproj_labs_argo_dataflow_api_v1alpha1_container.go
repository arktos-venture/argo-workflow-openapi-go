/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1Container struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1Container
type GithubComArgoprojLabsArgoDataflowApiV1alpha1Container struct {
	Args *[]string `json:"args,omitempty"`
	Command *[]string `json:"command,omitempty"`
	Env *[]IoK8sApiCoreV1EnvVar `json:"env,omitempty"`
	Image *string `json:"image,omitempty"`
	In *GithubComArgoprojLabsArgoDataflowApiV1alpha1Interface `json:"in,omitempty"`
	Resources *IoK8sApiCoreV1ResourceRequirements `json:"resources,omitempty"`
	VolumeMounts *[]IoK8sApiCoreV1VolumeMount `json:"volumeMounts,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Container instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Container object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Container() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Container{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1ContainerWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Container object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1ContainerWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Container{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetArgs() []string {
	if o == nil || o.Args == nil {
		var ret []string
		return ret
	}
	return *o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetArgsOk() (*[]string, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []string and assigns it to the Args field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetArgs(v []string) {
	o.Args = &v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetCommand() []string {
	if o == nil || o.Command == nil {
		var ret []string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetCommandOk() (*[]string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given []string and assigns it to the Command field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetCommand(v []string) {
	o.Command = &v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetEnv() []IoK8sApiCoreV1EnvVar {
	if o == nil || o.Env == nil {
		var ret []IoK8sApiCoreV1EnvVar
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetEnvOk() (*[]IoK8sApiCoreV1EnvVar, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []IoK8sApiCoreV1EnvVar and assigns it to the Env field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetEnv(v []IoK8sApiCoreV1EnvVar) {
	o.Env = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetImage(v string) {
	o.Image = &v
}

// GetIn returns the In field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetIn() GithubComArgoprojLabsArgoDataflowApiV1alpha1Interface {
	if o == nil || o.In == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Interface
		return ret
	}
	return *o.In
}

// GetInOk returns a tuple with the In field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetInOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Interface, bool) {
	if o == nil || o.In == nil {
		return nil, false
	}
	return o.In, true
}

// HasIn returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasIn() bool {
	if o != nil && o.In != nil {
		return true
	}

	return false
}

// SetIn gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Interface and assigns it to the In field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetIn(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Interface) {
	o.In = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetResources() IoK8sApiCoreV1ResourceRequirements {
	if o == nil || o.Resources == nil {
		var ret IoK8sApiCoreV1ResourceRequirements
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetResourcesOk() (*IoK8sApiCoreV1ResourceRequirements, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given IoK8sApiCoreV1ResourceRequirements and assigns it to the Resources field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetResources(v IoK8sApiCoreV1ResourceRequirements) {
	o.Resources = &v
}

// GetVolumeMounts returns the VolumeMounts field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetVolumeMounts() []IoK8sApiCoreV1VolumeMount {
	if o == nil || o.VolumeMounts == nil {
		var ret []IoK8sApiCoreV1VolumeMount
		return ret
	}
	return *o.VolumeMounts
}

// GetVolumeMountsOk returns a tuple with the VolumeMounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) GetVolumeMountsOk() (*[]IoK8sApiCoreV1VolumeMount, bool) {
	if o == nil || o.VolumeMounts == nil {
		return nil, false
	}
	return o.VolumeMounts, true
}

// HasVolumeMounts returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) HasVolumeMounts() bool {
	if o != nil && o.VolumeMounts != nil {
		return true
	}

	return false
}

// SetVolumeMounts gets a reference to the given []IoK8sApiCoreV1VolumeMount and assigns it to the VolumeMounts field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) SetVolumeMounts(v []IoK8sApiCoreV1VolumeMount) {
	o.VolumeMounts = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.In != nil {
		toSerialize["in"] = o.In
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.VolumeMounts != nil {
		toSerialize["volumeMounts"] = o.VolumeMounts
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Container) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


