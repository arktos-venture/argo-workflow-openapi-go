/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1ObjectFieldSelector ObjectFieldSelector selects an APIVersioned field of an object.
type IoK8sApiCoreV1ObjectFieldSelector struct {
	// Version of the schema the FieldPath is written in terms of, defaults to \"v1\".
	ApiVersion *string `json:"apiVersion,omitempty"`
	// Path of the field to select in the specified API version.
	FieldPath string `json:"fieldPath"`
}

// NewIoK8sApiCoreV1ObjectFieldSelector instantiates a new IoK8sApiCoreV1ObjectFieldSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1ObjectFieldSelector(fieldPath string) *IoK8sApiCoreV1ObjectFieldSelector {
	this := IoK8sApiCoreV1ObjectFieldSelector{}
	this.FieldPath = fieldPath
	return &this
}

// NewIoK8sApiCoreV1ObjectFieldSelectorWithDefaults instantiates a new IoK8sApiCoreV1ObjectFieldSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1ObjectFieldSelectorWithDefaults() *IoK8sApiCoreV1ObjectFieldSelector {
	this := IoK8sApiCoreV1ObjectFieldSelector{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ObjectFieldSelector) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ObjectFieldSelector) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ObjectFieldSelector) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *IoK8sApiCoreV1ObjectFieldSelector) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetFieldPath returns the FieldPath field value
func (o *IoK8sApiCoreV1ObjectFieldSelector) GetFieldPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FieldPath
}

// GetFieldPathOk returns a tuple with the FieldPath field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ObjectFieldSelector) GetFieldPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FieldPath, true
}

// SetFieldPath sets field value
func (o *IoK8sApiCoreV1ObjectFieldSelector) SetFieldPath(v string) {
	o.FieldPath = v
}

func (o IoK8sApiCoreV1ObjectFieldSelector) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if true {
		toSerialize["fieldPath"] = o.FieldPath
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1ObjectFieldSelector struct {
	value *IoK8sApiCoreV1ObjectFieldSelector
	isSet bool
}

func (v NullableIoK8sApiCoreV1ObjectFieldSelector) Get() *IoK8sApiCoreV1ObjectFieldSelector {
	return v.value
}

func (v *NullableIoK8sApiCoreV1ObjectFieldSelector) Set(val *IoK8sApiCoreV1ObjectFieldSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1ObjectFieldSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1ObjectFieldSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1ObjectFieldSelector(val *IoK8sApiCoreV1ObjectFieldSelector) *NullableIoK8sApiCoreV1ObjectFieldSelector {
	return &NullableIoK8sApiCoreV1ObjectFieldSelector{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1ObjectFieldSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1ObjectFieldSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


