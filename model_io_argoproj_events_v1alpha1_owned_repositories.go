/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1OwnedRepositories struct for IoArgoprojEventsV1alpha1OwnedRepositories
type IoArgoprojEventsV1alpha1OwnedRepositories struct {
	Names *[]string `json:"names,omitempty"`
	Owner *string `json:"owner,omitempty"`
}

// NewIoArgoprojEventsV1alpha1OwnedRepositories instantiates a new IoArgoprojEventsV1alpha1OwnedRepositories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1OwnedRepositories() *IoArgoprojEventsV1alpha1OwnedRepositories {
	this := IoArgoprojEventsV1alpha1OwnedRepositories{}
	return &this
}

// NewIoArgoprojEventsV1alpha1OwnedRepositoriesWithDefaults instantiates a new IoArgoprojEventsV1alpha1OwnedRepositories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1OwnedRepositoriesWithDefaults() *IoArgoprojEventsV1alpha1OwnedRepositories {
	this := IoArgoprojEventsV1alpha1OwnedRepositories{}
	return &this
}

// GetNames returns the Names field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) GetNames() []string {
	if o == nil || o.Names == nil {
		var ret []string
		return ret
	}
	return *o.Names
}

// GetNamesOk returns a tuple with the Names field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) GetNamesOk() (*[]string, bool) {
	if o == nil || o.Names == nil {
		return nil, false
	}
	return o.Names, true
}

// HasNames returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) HasNames() bool {
	if o != nil && o.Names != nil {
		return true
	}

	return false
}

// SetNames gets a reference to the given []string and assigns it to the Names field.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) SetNames(v []string) {
	o.Names = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *IoArgoprojEventsV1alpha1OwnedRepositories) SetOwner(v string) {
	o.Owner = &v
}

func (o IoArgoprojEventsV1alpha1OwnedRepositories) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Names != nil {
		toSerialize["names"] = o.Names
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1OwnedRepositories struct {
	value *IoArgoprojEventsV1alpha1OwnedRepositories
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1OwnedRepositories) Get() *IoArgoprojEventsV1alpha1OwnedRepositories {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1OwnedRepositories) Set(val *IoArgoprojEventsV1alpha1OwnedRepositories) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1OwnedRepositories) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1OwnedRepositories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1OwnedRepositories(val *IoArgoprojEventsV1alpha1OwnedRepositories) *NullableIoArgoprojEventsV1alpha1OwnedRepositories {
	return &NullableIoArgoprojEventsV1alpha1OwnedRepositories{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1OwnedRepositories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1OwnedRepositories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


