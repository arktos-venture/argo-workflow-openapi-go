/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1DependencyGroup struct for IoArgoprojEventsV1alpha1DependencyGroup
type IoArgoprojEventsV1alpha1DependencyGroup struct {
	Dependencies *[]string `json:"dependencies,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewIoArgoprojEventsV1alpha1DependencyGroup instantiates a new IoArgoprojEventsV1alpha1DependencyGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1DependencyGroup() *IoArgoprojEventsV1alpha1DependencyGroup {
	this := IoArgoprojEventsV1alpha1DependencyGroup{}
	return &this
}

// NewIoArgoprojEventsV1alpha1DependencyGroupWithDefaults instantiates a new IoArgoprojEventsV1alpha1DependencyGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1DependencyGroupWithDefaults() *IoArgoprojEventsV1alpha1DependencyGroup {
	this := IoArgoprojEventsV1alpha1DependencyGroup{}
	return &this
}

// GetDependencies returns the Dependencies field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) GetDependencies() []string {
	if o == nil || o.Dependencies == nil {
		var ret []string
		return ret
	}
	return *o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) GetDependenciesOk() (*[]string, bool) {
	if o == nil || o.Dependencies == nil {
		return nil, false
	}
	return o.Dependencies, true
}

// HasDependencies returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) HasDependencies() bool {
	if o != nil && o.Dependencies != nil {
		return true
	}

	return false
}

// SetDependencies gets a reference to the given []string and assigns it to the Dependencies field.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) SetDependencies(v []string) {
	o.Dependencies = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IoArgoprojEventsV1alpha1DependencyGroup) SetName(v string) {
	o.Name = &v
}

func (o IoArgoprojEventsV1alpha1DependencyGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dependencies != nil {
		toSerialize["dependencies"] = o.Dependencies
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1DependencyGroup struct {
	value *IoArgoprojEventsV1alpha1DependencyGroup
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1DependencyGroup) Get() *IoArgoprojEventsV1alpha1DependencyGroup {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1DependencyGroup) Set(val *IoArgoprojEventsV1alpha1DependencyGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1DependencyGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1DependencyGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1DependencyGroup(val *IoArgoprojEventsV1alpha1DependencyGroup) *NullableIoArgoprojEventsV1alpha1DependencyGroup {
	return &NullableIoArgoprojEventsV1alpha1DependencyGroup{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1DependencyGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1DependencyGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


