/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Data Data is a data template
type IoArgoprojWorkflowV1alpha1Data struct {
	Source IoArgoprojWorkflowV1alpha1DataSource `json:"source"`
	// Transformation applies a set of transformations
	Transformation []IoArgoprojWorkflowV1alpha1TransformationStep `json:"transformation"`
}

// NewIoArgoprojWorkflowV1alpha1Data instantiates a new IoArgoprojWorkflowV1alpha1Data object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Data(source IoArgoprojWorkflowV1alpha1DataSource, transformation []IoArgoprojWorkflowV1alpha1TransformationStep) *IoArgoprojWorkflowV1alpha1Data {
	this := IoArgoprojWorkflowV1alpha1Data{}
	this.Source = source
	this.Transformation = transformation
	return &this
}

// NewIoArgoprojWorkflowV1alpha1DataWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Data object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1DataWithDefaults() *IoArgoprojWorkflowV1alpha1Data {
	this := IoArgoprojWorkflowV1alpha1Data{}
	return &this
}

// GetSource returns the Source field value
func (o *IoArgoprojWorkflowV1alpha1Data) GetSource() IoArgoprojWorkflowV1alpha1DataSource {
	if o == nil {
		var ret IoArgoprojWorkflowV1alpha1DataSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Data) GetSourceOk() (*IoArgoprojWorkflowV1alpha1DataSource, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *IoArgoprojWorkflowV1alpha1Data) SetSource(v IoArgoprojWorkflowV1alpha1DataSource) {
	o.Source = v
}

// GetTransformation returns the Transformation field value
func (o *IoArgoprojWorkflowV1alpha1Data) GetTransformation() []IoArgoprojWorkflowV1alpha1TransformationStep {
	if o == nil {
		var ret []IoArgoprojWorkflowV1alpha1TransformationStep
		return ret
	}

	return o.Transformation
}

// GetTransformationOk returns a tuple with the Transformation field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Data) GetTransformationOk() (*[]IoArgoprojWorkflowV1alpha1TransformationStep, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Transformation, true
}

// SetTransformation sets field value
func (o *IoArgoprojWorkflowV1alpha1Data) SetTransformation(v []IoArgoprojWorkflowV1alpha1TransformationStep) {
	o.Transformation = v
}

func (o IoArgoprojWorkflowV1alpha1Data) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["transformation"] = o.Transformation
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Data struct {
	value *IoArgoprojWorkflowV1alpha1Data
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Data) Get() *IoArgoprojWorkflowV1alpha1Data {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Data) Set(val *IoArgoprojWorkflowV1alpha1Data) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Data) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Data) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Data(val *IoArgoprojWorkflowV1alpha1Data) *NullableIoArgoprojWorkflowV1alpha1Data {
	return &NullableIoArgoprojWorkflowV1alpha1Data{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Data) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Data) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


