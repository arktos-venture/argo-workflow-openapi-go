/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec
type GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec struct {
	Affinity *IoK8sApiCoreV1Affinity `json:"affinity,omitempty"`
	Cat *GithubComArgoprojLabsArgoDataflowApiV1alpha1Cat `json:"cat,omitempty"`
	Code *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code `json:"code,omitempty"`
	Container *GithubComArgoprojLabsArgoDataflowApiV1alpha1Container `json:"container,omitempty"`
	Dedupe *GithubComArgoprojLabsArgoDataflowApiV1alpha1Dedupe `json:"dedupe,omitempty"`
	Expand *GithubComArgoprojLabsArgoDataflowApiV1alpha1Expand `json:"expand,omitempty"`
	Filter *GithubComArgoprojLabsArgoDataflowApiV1alpha1Filter `json:"filter,omitempty"`
	Flatten *GithubComArgoprojLabsArgoDataflowApiV1alpha1Flatten `json:"flatten,omitempty"`
	Git *GithubComArgoprojLabsArgoDataflowApiV1alpha1Git `json:"git,omitempty"`
	Group *GithubComArgoprojLabsArgoDataflowApiV1alpha1Group `json:"group,omitempty"`
	ImagePullSecrets *[]IoK8sApiCoreV1LocalObjectReference `json:"imagePullSecrets,omitempty"`
	Map *GithubComArgoprojLabsArgoDataflowApiV1alpha1Map `json:"map,omitempty"`
	Metadata *GithubComArgoprojLabsArgoDataflowApiV1alpha1Metadata `json:"metadata,omitempty"`
	Name *string `json:"name,omitempty"`
	NodeSelector *map[string]string `json:"nodeSelector,omitempty"`
	Replicas *int32 `json:"replicas,omitempty"`
	RestartPolicy *string `json:"restartPolicy,omitempty"`
	Scale *GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale `json:"scale,omitempty"`
	ServiceAccountName *string `json:"serviceAccountName,omitempty"`
	Sidecar *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sidecar `json:"sidecar,omitempty"`
	Sinks *[]GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink `json:"sinks,omitempty"`
	Sources *[]GithubComArgoprojLabsArgoDataflowApiV1alpha1Source `json:"sources,omitempty"`
	Terminator *bool `json:"terminator,omitempty"`
	Tolerations *[]IoK8sApiCoreV1Toleration `json:"tolerations,omitempty"`
	Volumes *[]IoK8sApiCoreV1Volume `json:"volumes,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec() *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpecWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpecWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec{}
	return &this
}

// GetAffinity returns the Affinity field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetAffinity() IoK8sApiCoreV1Affinity {
	if o == nil || o.Affinity == nil {
		var ret IoK8sApiCoreV1Affinity
		return ret
	}
	return *o.Affinity
}

// GetAffinityOk returns a tuple with the Affinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetAffinityOk() (*IoK8sApiCoreV1Affinity, bool) {
	if o == nil || o.Affinity == nil {
		return nil, false
	}
	return o.Affinity, true
}

// HasAffinity returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasAffinity() bool {
	if o != nil && o.Affinity != nil {
		return true
	}

	return false
}

// SetAffinity gets a reference to the given IoK8sApiCoreV1Affinity and assigns it to the Affinity field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetAffinity(v IoK8sApiCoreV1Affinity) {
	o.Affinity = &v
}

// GetCat returns the Cat field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetCat() GithubComArgoprojLabsArgoDataflowApiV1alpha1Cat {
	if o == nil || o.Cat == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Cat
		return ret
	}
	return *o.Cat
}

// GetCatOk returns a tuple with the Cat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetCatOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Cat, bool) {
	if o == nil || o.Cat == nil {
		return nil, false
	}
	return o.Cat, true
}

// HasCat returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasCat() bool {
	if o != nil && o.Cat != nil {
		return true
	}

	return false
}

// SetCat gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Cat and assigns it to the Cat field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetCat(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Cat) {
	o.Cat = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetCode() GithubComArgoprojLabsArgoDataflowApiV1alpha1Code {
	if o == nil || o.Code == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Code
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetCodeOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Code, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Code and assigns it to the Code field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetCode(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) {
	o.Code = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetContainer() GithubComArgoprojLabsArgoDataflowApiV1alpha1Container {
	if o == nil || o.Container == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Container
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetContainerOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Container, bool) {
	if o == nil || o.Container == nil {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasContainer() bool {
	if o != nil && o.Container != nil {
		return true
	}

	return false
}

// SetContainer gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Container and assigns it to the Container field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetContainer(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Container) {
	o.Container = &v
}

// GetDedupe returns the Dedupe field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetDedupe() GithubComArgoprojLabsArgoDataflowApiV1alpha1Dedupe {
	if o == nil || o.Dedupe == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Dedupe
		return ret
	}
	return *o.Dedupe
}

// GetDedupeOk returns a tuple with the Dedupe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetDedupeOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Dedupe, bool) {
	if o == nil || o.Dedupe == nil {
		return nil, false
	}
	return o.Dedupe, true
}

// HasDedupe returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasDedupe() bool {
	if o != nil && o.Dedupe != nil {
		return true
	}

	return false
}

// SetDedupe gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Dedupe and assigns it to the Dedupe field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetDedupe(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Dedupe) {
	o.Dedupe = &v
}

// GetExpand returns the Expand field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetExpand() GithubComArgoprojLabsArgoDataflowApiV1alpha1Expand {
	if o == nil || o.Expand == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Expand
		return ret
	}
	return *o.Expand
}

// GetExpandOk returns a tuple with the Expand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetExpandOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Expand, bool) {
	if o == nil || o.Expand == nil {
		return nil, false
	}
	return o.Expand, true
}

// HasExpand returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasExpand() bool {
	if o != nil && o.Expand != nil {
		return true
	}

	return false
}

// SetExpand gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Expand and assigns it to the Expand field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetExpand(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Expand) {
	o.Expand = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetFilter() GithubComArgoprojLabsArgoDataflowApiV1alpha1Filter {
	if o == nil || o.Filter == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Filter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetFilterOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Filter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Filter and assigns it to the Filter field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetFilter(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Filter) {
	o.Filter = &v
}

// GetFlatten returns the Flatten field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetFlatten() GithubComArgoprojLabsArgoDataflowApiV1alpha1Flatten {
	if o == nil || o.Flatten == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Flatten
		return ret
	}
	return *o.Flatten
}

// GetFlattenOk returns a tuple with the Flatten field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetFlattenOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Flatten, bool) {
	if o == nil || o.Flatten == nil {
		return nil, false
	}
	return o.Flatten, true
}

// HasFlatten returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasFlatten() bool {
	if o != nil && o.Flatten != nil {
		return true
	}

	return false
}

// SetFlatten gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Flatten and assigns it to the Flatten field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetFlatten(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Flatten) {
	o.Flatten = &v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetGit() GithubComArgoprojLabsArgoDataflowApiV1alpha1Git {
	if o == nil || o.Git == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Git
		return ret
	}
	return *o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetGitOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Git, bool) {
	if o == nil || o.Git == nil {
		return nil, false
	}
	return o.Git, true
}

// HasGit returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasGit() bool {
	if o != nil && o.Git != nil {
		return true
	}

	return false
}

// SetGit gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Git and assigns it to the Git field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetGit(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Git) {
	o.Git = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetGroup() GithubComArgoprojLabsArgoDataflowApiV1alpha1Group {
	if o == nil || o.Group == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Group
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetGroupOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Group, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Group and assigns it to the Group field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetGroup(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Group) {
	o.Group = &v
}

// GetImagePullSecrets returns the ImagePullSecrets field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetImagePullSecrets() []IoK8sApiCoreV1LocalObjectReference {
	if o == nil || o.ImagePullSecrets == nil {
		var ret []IoK8sApiCoreV1LocalObjectReference
		return ret
	}
	return *o.ImagePullSecrets
}

// GetImagePullSecretsOk returns a tuple with the ImagePullSecrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetImagePullSecretsOk() (*[]IoK8sApiCoreV1LocalObjectReference, bool) {
	if o == nil || o.ImagePullSecrets == nil {
		return nil, false
	}
	return o.ImagePullSecrets, true
}

// HasImagePullSecrets returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasImagePullSecrets() bool {
	if o != nil && o.ImagePullSecrets != nil {
		return true
	}

	return false
}

// SetImagePullSecrets gets a reference to the given []IoK8sApiCoreV1LocalObjectReference and assigns it to the ImagePullSecrets field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetImagePullSecrets(v []IoK8sApiCoreV1LocalObjectReference) {
	o.ImagePullSecrets = &v
}

// GetMap returns the Map field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetMap() GithubComArgoprojLabsArgoDataflowApiV1alpha1Map {
	if o == nil || o.Map == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Map
		return ret
	}
	return *o.Map
}

// GetMapOk returns a tuple with the Map field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetMapOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Map, bool) {
	if o == nil || o.Map == nil {
		return nil, false
	}
	return o.Map, true
}

// HasMap returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasMap() bool {
	if o != nil && o.Map != nil {
		return true
	}

	return false
}

// SetMap gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Map and assigns it to the Map field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetMap(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Map) {
	o.Map = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetMetadata() GithubComArgoprojLabsArgoDataflowApiV1alpha1Metadata {
	if o == nil || o.Metadata == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Metadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetMetadataOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Metadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Metadata and assigns it to the Metadata field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetMetadata(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Metadata) {
	o.Metadata = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetName(v string) {
	o.Name = &v
}

// GetNodeSelector returns the NodeSelector field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetNodeSelector() map[string]string {
	if o == nil || o.NodeSelector == nil {
		var ret map[string]string
		return ret
	}
	return *o.NodeSelector
}

// GetNodeSelectorOk returns a tuple with the NodeSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetNodeSelectorOk() (*map[string]string, bool) {
	if o == nil || o.NodeSelector == nil {
		return nil, false
	}
	return o.NodeSelector, true
}

// HasNodeSelector returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasNodeSelector() bool {
	if o != nil && o.NodeSelector != nil {
		return true
	}

	return false
}

// SetNodeSelector gets a reference to the given map[string]string and assigns it to the NodeSelector field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetNodeSelector(v map[string]string) {
	o.NodeSelector = &v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetReplicas() int32 {
	if o == nil || o.Replicas == nil {
		var ret int32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetReplicasOk() (*int32, bool) {
	if o == nil || o.Replicas == nil {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasReplicas() bool {
	if o != nil && o.Replicas != nil {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given int32 and assigns it to the Replicas field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetReplicas(v int32) {
	o.Replicas = &v
}

// GetRestartPolicy returns the RestartPolicy field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetRestartPolicy() string {
	if o == nil || o.RestartPolicy == nil {
		var ret string
		return ret
	}
	return *o.RestartPolicy
}

// GetRestartPolicyOk returns a tuple with the RestartPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetRestartPolicyOk() (*string, bool) {
	if o == nil || o.RestartPolicy == nil {
		return nil, false
	}
	return o.RestartPolicy, true
}

// HasRestartPolicy returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasRestartPolicy() bool {
	if o != nil && o.RestartPolicy != nil {
		return true
	}

	return false
}

// SetRestartPolicy gets a reference to the given string and assigns it to the RestartPolicy field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetRestartPolicy(v string) {
	o.RestartPolicy = &v
}

// GetScale returns the Scale field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetScale() GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale {
	if o == nil || o.Scale == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale
		return ret
	}
	return *o.Scale
}

// GetScaleOk returns a tuple with the Scale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetScaleOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale, bool) {
	if o == nil || o.Scale == nil {
		return nil, false
	}
	return o.Scale, true
}

// HasScale returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasScale() bool {
	if o != nil && o.Scale != nil {
		return true
	}

	return false
}

// SetScale gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale and assigns it to the Scale field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetScale(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Scale) {
	o.Scale = &v
}

// GetServiceAccountName returns the ServiceAccountName field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetServiceAccountName() string {
	if o == nil || o.ServiceAccountName == nil {
		var ret string
		return ret
	}
	return *o.ServiceAccountName
}

// GetServiceAccountNameOk returns a tuple with the ServiceAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetServiceAccountNameOk() (*string, bool) {
	if o == nil || o.ServiceAccountName == nil {
		return nil, false
	}
	return o.ServiceAccountName, true
}

// HasServiceAccountName returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasServiceAccountName() bool {
	if o != nil && o.ServiceAccountName != nil {
		return true
	}

	return false
}

// SetServiceAccountName gets a reference to the given string and assigns it to the ServiceAccountName field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetServiceAccountName(v string) {
	o.ServiceAccountName = &v
}

// GetSidecar returns the Sidecar field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetSidecar() GithubComArgoprojLabsArgoDataflowApiV1alpha1Sidecar {
	if o == nil || o.Sidecar == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Sidecar
		return ret
	}
	return *o.Sidecar
}

// GetSidecarOk returns a tuple with the Sidecar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetSidecarOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Sidecar, bool) {
	if o == nil || o.Sidecar == nil {
		return nil, false
	}
	return o.Sidecar, true
}

// HasSidecar returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasSidecar() bool {
	if o != nil && o.Sidecar != nil {
		return true
	}

	return false
}

// SetSidecar gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Sidecar and assigns it to the Sidecar field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetSidecar(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Sidecar) {
	o.Sidecar = &v
}

// GetSinks returns the Sinks field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetSinks() []GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {
	if o == nil || o.Sinks == nil {
		var ret []GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink
		return ret
	}
	return *o.Sinks
}

// GetSinksOk returns a tuple with the Sinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetSinksOk() (*[]GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink, bool) {
	if o == nil || o.Sinks == nil {
		return nil, false
	}
	return o.Sinks, true
}

// HasSinks returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasSinks() bool {
	if o != nil && o.Sinks != nil {
		return true
	}

	return false
}

// SetSinks gets a reference to the given []GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink and assigns it to the Sinks field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetSinks(v []GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) {
	o.Sinks = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetSources() []GithubComArgoprojLabsArgoDataflowApiV1alpha1Source {
	if o == nil || o.Sources == nil {
		var ret []GithubComArgoprojLabsArgoDataflowApiV1alpha1Source
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetSourcesOk() (*[]GithubComArgoprojLabsArgoDataflowApiV1alpha1Source, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []GithubComArgoprojLabsArgoDataflowApiV1alpha1Source and assigns it to the Sources field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetSources(v []GithubComArgoprojLabsArgoDataflowApiV1alpha1Source) {
	o.Sources = &v
}

// GetTerminator returns the Terminator field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetTerminator() bool {
	if o == nil || o.Terminator == nil {
		var ret bool
		return ret
	}
	return *o.Terminator
}

// GetTerminatorOk returns a tuple with the Terminator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetTerminatorOk() (*bool, bool) {
	if o == nil || o.Terminator == nil {
		return nil, false
	}
	return o.Terminator, true
}

// HasTerminator returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasTerminator() bool {
	if o != nil && o.Terminator != nil {
		return true
	}

	return false
}

// SetTerminator gets a reference to the given bool and assigns it to the Terminator field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetTerminator(v bool) {
	o.Terminator = &v
}

// GetTolerations returns the Tolerations field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetTolerations() []IoK8sApiCoreV1Toleration {
	if o == nil || o.Tolerations == nil {
		var ret []IoK8sApiCoreV1Toleration
		return ret
	}
	return *o.Tolerations
}

// GetTolerationsOk returns a tuple with the Tolerations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetTolerationsOk() (*[]IoK8sApiCoreV1Toleration, bool) {
	if o == nil || o.Tolerations == nil {
		return nil, false
	}
	return o.Tolerations, true
}

// HasTolerations returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasTolerations() bool {
	if o != nil && o.Tolerations != nil {
		return true
	}

	return false
}

// SetTolerations gets a reference to the given []IoK8sApiCoreV1Toleration and assigns it to the Tolerations field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetTolerations(v []IoK8sApiCoreV1Toleration) {
	o.Tolerations = &v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetVolumes() []IoK8sApiCoreV1Volume {
	if o == nil || o.Volumes == nil {
		var ret []IoK8sApiCoreV1Volume
		return ret
	}
	return *o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) GetVolumesOk() (*[]IoK8sApiCoreV1Volume, bool) {
	if o == nil || o.Volumes == nil {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) HasVolumes() bool {
	if o != nil && o.Volumes != nil {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []IoK8sApiCoreV1Volume and assigns it to the Volumes field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) SetVolumes(v []IoK8sApiCoreV1Volume) {
	o.Volumes = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Affinity != nil {
		toSerialize["affinity"] = o.Affinity
	}
	if o.Cat != nil {
		toSerialize["cat"] = o.Cat
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Container != nil {
		toSerialize["container"] = o.Container
	}
	if o.Dedupe != nil {
		toSerialize["dedupe"] = o.Dedupe
	}
	if o.Expand != nil {
		toSerialize["expand"] = o.Expand
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.Flatten != nil {
		toSerialize["flatten"] = o.Flatten
	}
	if o.Git != nil {
		toSerialize["git"] = o.Git
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.ImagePullSecrets != nil {
		toSerialize["imagePullSecrets"] = o.ImagePullSecrets
	}
	if o.Map != nil {
		toSerialize["map"] = o.Map
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NodeSelector != nil {
		toSerialize["nodeSelector"] = o.NodeSelector
	}
	if o.Replicas != nil {
		toSerialize["replicas"] = o.Replicas
	}
	if o.RestartPolicy != nil {
		toSerialize["restartPolicy"] = o.RestartPolicy
	}
	if o.Scale != nil {
		toSerialize["scale"] = o.Scale
	}
	if o.ServiceAccountName != nil {
		toSerialize["serviceAccountName"] = o.ServiceAccountName
	}
	if o.Sidecar != nil {
		toSerialize["sidecar"] = o.Sidecar
	}
	if o.Sinks != nil {
		toSerialize["sinks"] = o.Sinks
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.Terminator != nil {
		toSerialize["terminator"] = o.Terminator
	}
	if o.Tolerations != nil {
		toSerialize["tolerations"] = o.Tolerations
	}
	if o.Volumes != nil {
		toSerialize["volumes"] = o.Volumes
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1StepSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


