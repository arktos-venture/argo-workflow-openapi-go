/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1HTTPHeaderSource struct for IoArgoprojWorkflowV1alpha1HTTPHeaderSource
type IoArgoprojWorkflowV1alpha1HTTPHeaderSource struct {
	SecretKeyRef *IoK8sApiCoreV1SecretKeySelector `json:"secretKeyRef,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1HTTPHeaderSource instantiates a new IoArgoprojWorkflowV1alpha1HTTPHeaderSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1HTTPHeaderSource() *IoArgoprojWorkflowV1alpha1HTTPHeaderSource {
	this := IoArgoprojWorkflowV1alpha1HTTPHeaderSource{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1HTTPHeaderSourceWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1HTTPHeaderSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1HTTPHeaderSourceWithDefaults() *IoArgoprojWorkflowV1alpha1HTTPHeaderSource {
	this := IoArgoprojWorkflowV1alpha1HTTPHeaderSource{}
	return &this
}

// GetSecretKeyRef returns the SecretKeyRef field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeaderSource) GetSecretKeyRef() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SecretKeyRef == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SecretKeyRef
}

// GetSecretKeyRefOk returns a tuple with the SecretKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeaderSource) GetSecretKeyRefOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SecretKeyRef == nil {
		return nil, false
	}
	return o.SecretKeyRef, true
}

// HasSecretKeyRef returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeaderSource) HasSecretKeyRef() bool {
	if o != nil && o.SecretKeyRef != nil {
		return true
	}

	return false
}

// SetSecretKeyRef gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SecretKeyRef field.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeaderSource) SetSecretKeyRef(v IoK8sApiCoreV1SecretKeySelector) {
	o.SecretKeyRef = &v
}

func (o IoArgoprojWorkflowV1alpha1HTTPHeaderSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretKeyRef != nil {
		toSerialize["secretKeyRef"] = o.SecretKeyRef
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource struct {
	value *IoArgoprojWorkflowV1alpha1HTTPHeaderSource
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource) Get() *IoArgoprojWorkflowV1alpha1HTTPHeaderSource {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource) Set(val *IoArgoprojWorkflowV1alpha1HTTPHeaderSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource(val *IoArgoprojWorkflowV1alpha1HTTPHeaderSource) *NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource {
	return &NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPHeaderSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


