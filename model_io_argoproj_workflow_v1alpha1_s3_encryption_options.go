/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1S3EncryptionOptions S3EncryptionOptions used to determine encryption options during s3 operations
type IoArgoprojWorkflowV1alpha1S3EncryptionOptions struct {
	// EnableEncryption tells the driver to encrypt objects if set to true. If kmsKeyId and serverSideCustomerKeySecret are not set, SSE-S3 will be used
	EnableEncryption *bool `json:"enableEncryption,omitempty"`
	// KmsEncryptionContext is a json blob that contains an encryption context. See https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context for more information
	KmsEncryptionContext *string `json:"kmsEncryptionContext,omitempty"`
	// KMSKeyId tells the driver to encrypt the object using the specified KMS Key.
	KmsKeyId *string `json:"kmsKeyId,omitempty"`
	ServerSideCustomerKeySecret *IoK8sApiCoreV1SecretKeySelector `json:"serverSideCustomerKeySecret,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1S3EncryptionOptions instantiates a new IoArgoprojWorkflowV1alpha1S3EncryptionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1S3EncryptionOptions() *IoArgoprojWorkflowV1alpha1S3EncryptionOptions {
	this := IoArgoprojWorkflowV1alpha1S3EncryptionOptions{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1S3EncryptionOptionsWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1S3EncryptionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1S3EncryptionOptionsWithDefaults() *IoArgoprojWorkflowV1alpha1S3EncryptionOptions {
	this := IoArgoprojWorkflowV1alpha1S3EncryptionOptions{}
	return &this
}

// GetEnableEncryption returns the EnableEncryption field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetEnableEncryption() bool {
	if o == nil || o.EnableEncryption == nil {
		var ret bool
		return ret
	}
	return *o.EnableEncryption
}

// GetEnableEncryptionOk returns a tuple with the EnableEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetEnableEncryptionOk() (*bool, bool) {
	if o == nil || o.EnableEncryption == nil {
		return nil, false
	}
	return o.EnableEncryption, true
}

// HasEnableEncryption returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) HasEnableEncryption() bool {
	if o != nil && o.EnableEncryption != nil {
		return true
	}

	return false
}

// SetEnableEncryption gets a reference to the given bool and assigns it to the EnableEncryption field.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) SetEnableEncryption(v bool) {
	o.EnableEncryption = &v
}

// GetKmsEncryptionContext returns the KmsEncryptionContext field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetKmsEncryptionContext() string {
	if o == nil || o.KmsEncryptionContext == nil {
		var ret string
		return ret
	}
	return *o.KmsEncryptionContext
}

// GetKmsEncryptionContextOk returns a tuple with the KmsEncryptionContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetKmsEncryptionContextOk() (*string, bool) {
	if o == nil || o.KmsEncryptionContext == nil {
		return nil, false
	}
	return o.KmsEncryptionContext, true
}

// HasKmsEncryptionContext returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) HasKmsEncryptionContext() bool {
	if o != nil && o.KmsEncryptionContext != nil {
		return true
	}

	return false
}

// SetKmsEncryptionContext gets a reference to the given string and assigns it to the KmsEncryptionContext field.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) SetKmsEncryptionContext(v string) {
	o.KmsEncryptionContext = &v
}

// GetKmsKeyId returns the KmsKeyId field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetKmsKeyId() string {
	if o == nil || o.KmsKeyId == nil {
		var ret string
		return ret
	}
	return *o.KmsKeyId
}

// GetKmsKeyIdOk returns a tuple with the KmsKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetKmsKeyIdOk() (*string, bool) {
	if o == nil || o.KmsKeyId == nil {
		return nil, false
	}
	return o.KmsKeyId, true
}

// HasKmsKeyId returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) HasKmsKeyId() bool {
	if o != nil && o.KmsKeyId != nil {
		return true
	}

	return false
}

// SetKmsKeyId gets a reference to the given string and assigns it to the KmsKeyId field.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) SetKmsKeyId(v string) {
	o.KmsKeyId = &v
}

// GetServerSideCustomerKeySecret returns the ServerSideCustomerKeySecret field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetServerSideCustomerKeySecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.ServerSideCustomerKeySecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.ServerSideCustomerKeySecret
}

// GetServerSideCustomerKeySecretOk returns a tuple with the ServerSideCustomerKeySecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) GetServerSideCustomerKeySecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.ServerSideCustomerKeySecret == nil {
		return nil, false
	}
	return o.ServerSideCustomerKeySecret, true
}

// HasServerSideCustomerKeySecret returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) HasServerSideCustomerKeySecret() bool {
	if o != nil && o.ServerSideCustomerKeySecret != nil {
		return true
	}

	return false
}

// SetServerSideCustomerKeySecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the ServerSideCustomerKeySecret field.
func (o *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) SetServerSideCustomerKeySecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.ServerSideCustomerKeySecret = &v
}

func (o IoArgoprojWorkflowV1alpha1S3EncryptionOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableEncryption != nil {
		toSerialize["enableEncryption"] = o.EnableEncryption
	}
	if o.KmsEncryptionContext != nil {
		toSerialize["kmsEncryptionContext"] = o.KmsEncryptionContext
	}
	if o.KmsKeyId != nil {
		toSerialize["kmsKeyId"] = o.KmsKeyId
	}
	if o.ServerSideCustomerKeySecret != nil {
		toSerialize["serverSideCustomerKeySecret"] = o.ServerSideCustomerKeySecret
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions struct {
	value *IoArgoprojWorkflowV1alpha1S3EncryptionOptions
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions) Get() *IoArgoprojWorkflowV1alpha1S3EncryptionOptions {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions) Set(val *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions(val *IoArgoprojWorkflowV1alpha1S3EncryptionOptions) *NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions {
	return &NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1S3EncryptionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


