/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1InfoResponse struct for IoArgoprojWorkflowV1alpha1InfoResponse
type IoArgoprojWorkflowV1alpha1InfoResponse struct {
	Links *[]IoArgoprojWorkflowV1alpha1Link `json:"links,omitempty"`
	ManagedNamespace *string `json:"managedNamespace,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1InfoResponse instantiates a new IoArgoprojWorkflowV1alpha1InfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1InfoResponse() *IoArgoprojWorkflowV1alpha1InfoResponse {
	this := IoArgoprojWorkflowV1alpha1InfoResponse{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1InfoResponseWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1InfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1InfoResponseWithDefaults() *IoArgoprojWorkflowV1alpha1InfoResponse {
	this := IoArgoprojWorkflowV1alpha1InfoResponse{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) GetLinks() []IoArgoprojWorkflowV1alpha1Link {
	if o == nil || o.Links == nil {
		var ret []IoArgoprojWorkflowV1alpha1Link
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) GetLinksOk() (*[]IoArgoprojWorkflowV1alpha1Link, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []IoArgoprojWorkflowV1alpha1Link and assigns it to the Links field.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) SetLinks(v []IoArgoprojWorkflowV1alpha1Link) {
	o.Links = &v
}

// GetManagedNamespace returns the ManagedNamespace field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) GetManagedNamespace() string {
	if o == nil || o.ManagedNamespace == nil {
		var ret string
		return ret
	}
	return *o.ManagedNamespace
}

// GetManagedNamespaceOk returns a tuple with the ManagedNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) GetManagedNamespaceOk() (*string, bool) {
	if o == nil || o.ManagedNamespace == nil {
		return nil, false
	}
	return o.ManagedNamespace, true
}

// HasManagedNamespace returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) HasManagedNamespace() bool {
	if o != nil && o.ManagedNamespace != nil {
		return true
	}

	return false
}

// SetManagedNamespace gets a reference to the given string and assigns it to the ManagedNamespace field.
func (o *IoArgoprojWorkflowV1alpha1InfoResponse) SetManagedNamespace(v string) {
	o.ManagedNamespace = &v
}

func (o IoArgoprojWorkflowV1alpha1InfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.ManagedNamespace != nil {
		toSerialize["managedNamespace"] = o.ManagedNamespace
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1InfoResponse struct {
	value *IoArgoprojWorkflowV1alpha1InfoResponse
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1InfoResponse) Get() *IoArgoprojWorkflowV1alpha1InfoResponse {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1InfoResponse) Set(val *IoArgoprojWorkflowV1alpha1InfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1InfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1InfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1InfoResponse(val *IoArgoprojWorkflowV1alpha1InfoResponse) *NullableIoArgoprojWorkflowV1alpha1InfoResponse {
	return &NullableIoArgoprojWorkflowV1alpha1InfoResponse{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1InfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1InfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


