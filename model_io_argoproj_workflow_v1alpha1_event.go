/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Event struct for IoArgoprojWorkflowV1alpha1Event
type IoArgoprojWorkflowV1alpha1Event struct {
	// Selector (https://github.com/antonmedv/expr) that we must must match the io.argoproj.workflow.v1alpha1. E.g. `payload.message == \"test\"`
	Selector string `json:"selector"`
}

// NewIoArgoprojWorkflowV1alpha1Event instantiates a new IoArgoprojWorkflowV1alpha1Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Event(selector string) *IoArgoprojWorkflowV1alpha1Event {
	this := IoArgoprojWorkflowV1alpha1Event{}
	this.Selector = selector
	return &this
}

// NewIoArgoprojWorkflowV1alpha1EventWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1EventWithDefaults() *IoArgoprojWorkflowV1alpha1Event {
	this := IoArgoprojWorkflowV1alpha1Event{}
	return &this
}

// GetSelector returns the Selector field value
func (o *IoArgoprojWorkflowV1alpha1Event) GetSelector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Event) GetSelectorOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Selector, true
}

// SetSelector sets field value
func (o *IoArgoprojWorkflowV1alpha1Event) SetSelector(v string) {
	o.Selector = v
}

func (o IoArgoprojWorkflowV1alpha1Event) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["selector"] = o.Selector
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Event struct {
	value *IoArgoprojWorkflowV1alpha1Event
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Event) Get() *IoArgoprojWorkflowV1alpha1Event {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Event) Set(val *IoArgoprojWorkflowV1alpha1Event) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Event) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Event) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Event(val *IoArgoprojWorkflowV1alpha1Event) *NullableIoArgoprojWorkflowV1alpha1Event {
	return &NullableIoArgoprojWorkflowV1alpha1Event{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Event) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Event) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


