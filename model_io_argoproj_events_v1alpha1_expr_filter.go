/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1ExprFilter struct for IoArgoprojEventsV1alpha1ExprFilter
type IoArgoprojEventsV1alpha1ExprFilter struct {
	// Expr refers to the expression that determines the outcome of the filter.
	Expr *string `json:"expr,omitempty"`
	// Fields refers to set of keys that refer to the paths within event payload.
	Fields *[]IoArgoprojEventsV1alpha1PayloadField `json:"fields,omitempty"`
}

// NewIoArgoprojEventsV1alpha1ExprFilter instantiates a new IoArgoprojEventsV1alpha1ExprFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1ExprFilter() *IoArgoprojEventsV1alpha1ExprFilter {
	this := IoArgoprojEventsV1alpha1ExprFilter{}
	return &this
}

// NewIoArgoprojEventsV1alpha1ExprFilterWithDefaults instantiates a new IoArgoprojEventsV1alpha1ExprFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1ExprFilterWithDefaults() *IoArgoprojEventsV1alpha1ExprFilter {
	this := IoArgoprojEventsV1alpha1ExprFilter{}
	return &this
}

// GetExpr returns the Expr field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ExprFilter) GetExpr() string {
	if o == nil || o.Expr == nil {
		var ret string
		return ret
	}
	return *o.Expr
}

// GetExprOk returns a tuple with the Expr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ExprFilter) GetExprOk() (*string, bool) {
	if o == nil || o.Expr == nil {
		return nil, false
	}
	return o.Expr, true
}

// HasExpr returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ExprFilter) HasExpr() bool {
	if o != nil && o.Expr != nil {
		return true
	}

	return false
}

// SetExpr gets a reference to the given string and assigns it to the Expr field.
func (o *IoArgoprojEventsV1alpha1ExprFilter) SetExpr(v string) {
	o.Expr = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ExprFilter) GetFields() []IoArgoprojEventsV1alpha1PayloadField {
	if o == nil || o.Fields == nil {
		var ret []IoArgoprojEventsV1alpha1PayloadField
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ExprFilter) GetFieldsOk() (*[]IoArgoprojEventsV1alpha1PayloadField, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ExprFilter) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []IoArgoprojEventsV1alpha1PayloadField and assigns it to the Fields field.
func (o *IoArgoprojEventsV1alpha1ExprFilter) SetFields(v []IoArgoprojEventsV1alpha1PayloadField) {
	o.Fields = &v
}

func (o IoArgoprojEventsV1alpha1ExprFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expr != nil {
		toSerialize["expr"] = o.Expr
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1ExprFilter struct {
	value *IoArgoprojEventsV1alpha1ExprFilter
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1ExprFilter) Get() *IoArgoprojEventsV1alpha1ExprFilter {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1ExprFilter) Set(val *IoArgoprojEventsV1alpha1ExprFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1ExprFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1ExprFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1ExprFilter(val *IoArgoprojEventsV1alpha1ExprFilter) *NullableIoArgoprojEventsV1alpha1ExprFilter {
	return &NullableIoArgoprojEventsV1alpha1ExprFilter{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1ExprFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1ExprFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


