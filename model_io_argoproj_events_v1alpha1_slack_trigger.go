/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1SlackTrigger SlackTrigger refers to the specification of the slack notification trigger.
type IoArgoprojEventsV1alpha1SlackTrigger struct {
	Channel *string `json:"channel,omitempty"`
	Message *string `json:"message,omitempty"`
	Parameters *[]IoArgoprojEventsV1alpha1TriggerParameter `json:"parameters,omitempty"`
	SlackToken *IoK8sApiCoreV1SecretKeySelector `json:"slackToken,omitempty"`
}

// NewIoArgoprojEventsV1alpha1SlackTrigger instantiates a new IoArgoprojEventsV1alpha1SlackTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1SlackTrigger() *IoArgoprojEventsV1alpha1SlackTrigger {
	this := IoArgoprojEventsV1alpha1SlackTrigger{}
	return &this
}

// NewIoArgoprojEventsV1alpha1SlackTriggerWithDefaults instantiates a new IoArgoprojEventsV1alpha1SlackTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1SlackTriggerWithDefaults() *IoArgoprojEventsV1alpha1SlackTrigger {
	this := IoArgoprojEventsV1alpha1SlackTrigger{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) SetChannel(v string) {
	o.Channel = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) SetMessage(v string) {
	o.Message = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetParameters() []IoArgoprojEventsV1alpha1TriggerParameter {
	if o == nil || o.Parameters == nil {
		var ret []IoArgoprojEventsV1alpha1TriggerParameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetParametersOk() (*[]IoArgoprojEventsV1alpha1TriggerParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []IoArgoprojEventsV1alpha1TriggerParameter and assigns it to the Parameters field.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) SetParameters(v []IoArgoprojEventsV1alpha1TriggerParameter) {
	o.Parameters = &v
}

// GetSlackToken returns the SlackToken field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetSlackToken() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SlackToken == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SlackToken
}

// GetSlackTokenOk returns a tuple with the SlackToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) GetSlackTokenOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SlackToken == nil {
		return nil, false
	}
	return o.SlackToken, true
}

// HasSlackToken returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) HasSlackToken() bool {
	if o != nil && o.SlackToken != nil {
		return true
	}

	return false
}

// SetSlackToken gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SlackToken field.
func (o *IoArgoprojEventsV1alpha1SlackTrigger) SetSlackToken(v IoK8sApiCoreV1SecretKeySelector) {
	o.SlackToken = &v
}

func (o IoArgoprojEventsV1alpha1SlackTrigger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.SlackToken != nil {
		toSerialize["slackToken"] = o.SlackToken
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1SlackTrigger struct {
	value *IoArgoprojEventsV1alpha1SlackTrigger
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1SlackTrigger) Get() *IoArgoprojEventsV1alpha1SlackTrigger {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1SlackTrigger) Set(val *IoArgoprojEventsV1alpha1SlackTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1SlackTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1SlackTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1SlackTrigger(val *IoArgoprojEventsV1alpha1SlackTrigger) *NullableIoArgoprojEventsV1alpha1SlackTrigger {
	return &NullableIoArgoprojEventsV1alpha1SlackTrigger{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1SlackTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1SlackTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


