/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// IoArgoprojWorkflowV1alpha1WorkflowStatus WorkflowStatus contains overall status information about a workflow
type IoArgoprojWorkflowV1alpha1WorkflowStatus struct {
	ArtifactRepositoryRef *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus `json:"artifactRepositoryRef,omitempty"`
	// Compressed and base64 decoded Nodes map
	CompressedNodes *string `json:"compressedNodes,omitempty"`
	// Conditions is a list of conditions the Workflow may have
	Conditions *[]IoArgoprojWorkflowV1alpha1Condition `json:"conditions,omitempty"`
	// EstimatedDuration in seconds.
	EstimatedDuration *int32 `json:"estimatedDuration,omitempty"`
	// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
	FinishedAt *time.Time `json:"finishedAt,omitempty"`
	// A human readable message indicating details about why the workflow is in this condition.
	Message *string `json:"message,omitempty"`
	// Nodes is a mapping between a node ID and the node's status.
	Nodes *map[string]IoArgoprojWorkflowV1alpha1NodeStatus `json:"nodes,omitempty"`
	// Whether on not node status has been offloaded to a database. If exists, then Nodes and CompressedNodes will be empty. This will actually be populated with a hash of the offloaded data.
	OffloadNodeStatusVersion *string `json:"offloadNodeStatusVersion,omitempty"`
	Outputs *IoArgoprojWorkflowV1alpha1Outputs `json:"outputs,omitempty"`
	// PersistentVolumeClaims tracks all PVCs that were created as part of the io.argoproj.workflow.v1alpha1. The contents of this list are drained at the end of the workflow.
	PersistentVolumeClaims *[]IoK8sApiCoreV1Volume `json:"persistentVolumeClaims,omitempty"`
	// Phase a simple, high-level summary of where the workflow is in its lifecycle.
	Phase *string `json:"phase,omitempty"`
	// Progress to completion
	Progress *string `json:"progress,omitempty"`
	// ResourcesDuration is the total for the workflow
	ResourcesDuration *map[string]int64 `json:"resourcesDuration,omitempty"`
	// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
	StartedAt *time.Time `json:"startedAt,omitempty"`
	// StoredTemplates is a mapping between a template ref and the node's status.
	StoredTemplates *map[string]IoArgoprojWorkflowV1alpha1Template `json:"storedTemplates,omitempty"`
	StoredWorkflowTemplateSpec *IoArgoprojWorkflowV1alpha1WorkflowSpec `json:"storedWorkflowTemplateSpec,omitempty"`
	Synchronization *IoArgoprojWorkflowV1alpha1SynchronizationStatus `json:"synchronization,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1WorkflowStatus instantiates a new IoArgoprojWorkflowV1alpha1WorkflowStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1WorkflowStatus() *IoArgoprojWorkflowV1alpha1WorkflowStatus {
	this := IoArgoprojWorkflowV1alpha1WorkflowStatus{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1WorkflowStatusWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1WorkflowStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1WorkflowStatusWithDefaults() *IoArgoprojWorkflowV1alpha1WorkflowStatus {
	this := IoArgoprojWorkflowV1alpha1WorkflowStatus{}
	return &this
}

// GetArtifactRepositoryRef returns the ArtifactRepositoryRef field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetArtifactRepositoryRef() IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
	if o == nil || o.ArtifactRepositoryRef == nil {
		var ret IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
		return ret
	}
	return *o.ArtifactRepositoryRef
}

// GetArtifactRepositoryRefOk returns a tuple with the ArtifactRepositoryRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetArtifactRepositoryRefOk() (*IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus, bool) {
	if o == nil || o.ArtifactRepositoryRef == nil {
		return nil, false
	}
	return o.ArtifactRepositoryRef, true
}

// HasArtifactRepositoryRef returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasArtifactRepositoryRef() bool {
	if o != nil && o.ArtifactRepositoryRef != nil {
		return true
	}

	return false
}

// SetArtifactRepositoryRef gets a reference to the given IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus and assigns it to the ArtifactRepositoryRef field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetArtifactRepositoryRef(v IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) {
	o.ArtifactRepositoryRef = &v
}

// GetCompressedNodes returns the CompressedNodes field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetCompressedNodes() string {
	if o == nil || o.CompressedNodes == nil {
		var ret string
		return ret
	}
	return *o.CompressedNodes
}

// GetCompressedNodesOk returns a tuple with the CompressedNodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetCompressedNodesOk() (*string, bool) {
	if o == nil || o.CompressedNodes == nil {
		return nil, false
	}
	return o.CompressedNodes, true
}

// HasCompressedNodes returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasCompressedNodes() bool {
	if o != nil && o.CompressedNodes != nil {
		return true
	}

	return false
}

// SetCompressedNodes gets a reference to the given string and assigns it to the CompressedNodes field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetCompressedNodes(v string) {
	o.CompressedNodes = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetConditions() []IoArgoprojWorkflowV1alpha1Condition {
	if o == nil || o.Conditions == nil {
		var ret []IoArgoprojWorkflowV1alpha1Condition
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetConditionsOk() (*[]IoArgoprojWorkflowV1alpha1Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []IoArgoprojWorkflowV1alpha1Condition and assigns it to the Conditions field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetConditions(v []IoArgoprojWorkflowV1alpha1Condition) {
	o.Conditions = &v
}

// GetEstimatedDuration returns the EstimatedDuration field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetEstimatedDuration() int32 {
	if o == nil || o.EstimatedDuration == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedDuration
}

// GetEstimatedDurationOk returns a tuple with the EstimatedDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetEstimatedDurationOk() (*int32, bool) {
	if o == nil || o.EstimatedDuration == nil {
		return nil, false
	}
	return o.EstimatedDuration, true
}

// HasEstimatedDuration returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasEstimatedDuration() bool {
	if o != nil && o.EstimatedDuration != nil {
		return true
	}

	return false
}

// SetEstimatedDuration gets a reference to the given int32 and assigns it to the EstimatedDuration field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetEstimatedDuration(v int32) {
	o.EstimatedDuration = &v
}

// GetFinishedAt returns the FinishedAt field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetFinishedAt() time.Time {
	if o == nil || o.FinishedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.FinishedAt
}

// GetFinishedAtOk returns a tuple with the FinishedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetFinishedAtOk() (*time.Time, bool) {
	if o == nil || o.FinishedAt == nil {
		return nil, false
	}
	return o.FinishedAt, true
}

// HasFinishedAt returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasFinishedAt() bool {
	if o != nil && o.FinishedAt != nil {
		return true
	}

	return false
}

// SetFinishedAt gets a reference to the given time.Time and assigns it to the FinishedAt field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetFinishedAt(v time.Time) {
	o.FinishedAt = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetMessage(v string) {
	o.Message = &v
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetNodes() map[string]IoArgoprojWorkflowV1alpha1NodeStatus {
	if o == nil || o.Nodes == nil {
		var ret map[string]IoArgoprojWorkflowV1alpha1NodeStatus
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetNodesOk() (*map[string]IoArgoprojWorkflowV1alpha1NodeStatus, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given map[string]IoArgoprojWorkflowV1alpha1NodeStatus and assigns it to the Nodes field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetNodes(v map[string]IoArgoprojWorkflowV1alpha1NodeStatus) {
	o.Nodes = &v
}

// GetOffloadNodeStatusVersion returns the OffloadNodeStatusVersion field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetOffloadNodeStatusVersion() string {
	if o == nil || o.OffloadNodeStatusVersion == nil {
		var ret string
		return ret
	}
	return *o.OffloadNodeStatusVersion
}

// GetOffloadNodeStatusVersionOk returns a tuple with the OffloadNodeStatusVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetOffloadNodeStatusVersionOk() (*string, bool) {
	if o == nil || o.OffloadNodeStatusVersion == nil {
		return nil, false
	}
	return o.OffloadNodeStatusVersion, true
}

// HasOffloadNodeStatusVersion returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasOffloadNodeStatusVersion() bool {
	if o != nil && o.OffloadNodeStatusVersion != nil {
		return true
	}

	return false
}

// SetOffloadNodeStatusVersion gets a reference to the given string and assigns it to the OffloadNodeStatusVersion field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetOffloadNodeStatusVersion(v string) {
	o.OffloadNodeStatusVersion = &v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetOutputs() IoArgoprojWorkflowV1alpha1Outputs {
	if o == nil || o.Outputs == nil {
		var ret IoArgoprojWorkflowV1alpha1Outputs
		return ret
	}
	return *o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetOutputsOk() (*IoArgoprojWorkflowV1alpha1Outputs, bool) {
	if o == nil || o.Outputs == nil {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasOutputs() bool {
	if o != nil && o.Outputs != nil {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given IoArgoprojWorkflowV1alpha1Outputs and assigns it to the Outputs field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetOutputs(v IoArgoprojWorkflowV1alpha1Outputs) {
	o.Outputs = &v
}

// GetPersistentVolumeClaims returns the PersistentVolumeClaims field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetPersistentVolumeClaims() []IoK8sApiCoreV1Volume {
	if o == nil || o.PersistentVolumeClaims == nil {
		var ret []IoK8sApiCoreV1Volume
		return ret
	}
	return *o.PersistentVolumeClaims
}

// GetPersistentVolumeClaimsOk returns a tuple with the PersistentVolumeClaims field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetPersistentVolumeClaimsOk() (*[]IoK8sApiCoreV1Volume, bool) {
	if o == nil || o.PersistentVolumeClaims == nil {
		return nil, false
	}
	return o.PersistentVolumeClaims, true
}

// HasPersistentVolumeClaims returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasPersistentVolumeClaims() bool {
	if o != nil && o.PersistentVolumeClaims != nil {
		return true
	}

	return false
}

// SetPersistentVolumeClaims gets a reference to the given []IoK8sApiCoreV1Volume and assigns it to the PersistentVolumeClaims field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetPersistentVolumeClaims(v []IoK8sApiCoreV1Volume) {
	o.PersistentVolumeClaims = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetPhase() string {
	if o == nil || o.Phase == nil {
		var ret string
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetPhaseOk() (*string, bool) {
	if o == nil || o.Phase == nil {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasPhase() bool {
	if o != nil && o.Phase != nil {
		return true
	}

	return false
}

// SetPhase gets a reference to the given string and assigns it to the Phase field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetPhase(v string) {
	o.Phase = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetProgress() string {
	if o == nil || o.Progress == nil {
		var ret string
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetProgressOk() (*string, bool) {
	if o == nil || o.Progress == nil {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasProgress() bool {
	if o != nil && o.Progress != nil {
		return true
	}

	return false
}

// SetProgress gets a reference to the given string and assigns it to the Progress field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetProgress(v string) {
	o.Progress = &v
}

// GetResourcesDuration returns the ResourcesDuration field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetResourcesDuration() map[string]int64 {
	if o == nil || o.ResourcesDuration == nil {
		var ret map[string]int64
		return ret
	}
	return *o.ResourcesDuration
}

// GetResourcesDurationOk returns a tuple with the ResourcesDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetResourcesDurationOk() (*map[string]int64, bool) {
	if o == nil || o.ResourcesDuration == nil {
		return nil, false
	}
	return o.ResourcesDuration, true
}

// HasResourcesDuration returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasResourcesDuration() bool {
	if o != nil && o.ResourcesDuration != nil {
		return true
	}

	return false
}

// SetResourcesDuration gets a reference to the given map[string]int64 and assigns it to the ResourcesDuration field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetResourcesDuration(v map[string]int64) {
	o.ResourcesDuration = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetStartedAt() time.Time {
	if o == nil || o.StartedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || o.StartedAt == nil {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasStartedAt() bool {
	if o != nil && o.StartedAt != nil {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetStoredTemplates returns the StoredTemplates field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetStoredTemplates() map[string]IoArgoprojWorkflowV1alpha1Template {
	if o == nil || o.StoredTemplates == nil {
		var ret map[string]IoArgoprojWorkflowV1alpha1Template
		return ret
	}
	return *o.StoredTemplates
}

// GetStoredTemplatesOk returns a tuple with the StoredTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetStoredTemplatesOk() (*map[string]IoArgoprojWorkflowV1alpha1Template, bool) {
	if o == nil || o.StoredTemplates == nil {
		return nil, false
	}
	return o.StoredTemplates, true
}

// HasStoredTemplates returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasStoredTemplates() bool {
	if o != nil && o.StoredTemplates != nil {
		return true
	}

	return false
}

// SetStoredTemplates gets a reference to the given map[string]IoArgoprojWorkflowV1alpha1Template and assigns it to the StoredTemplates field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetStoredTemplates(v map[string]IoArgoprojWorkflowV1alpha1Template) {
	o.StoredTemplates = &v
}

// GetStoredWorkflowTemplateSpec returns the StoredWorkflowTemplateSpec field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetStoredWorkflowTemplateSpec() IoArgoprojWorkflowV1alpha1WorkflowSpec {
	if o == nil || o.StoredWorkflowTemplateSpec == nil {
		var ret IoArgoprojWorkflowV1alpha1WorkflowSpec
		return ret
	}
	return *o.StoredWorkflowTemplateSpec
}

// GetStoredWorkflowTemplateSpecOk returns a tuple with the StoredWorkflowTemplateSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetStoredWorkflowTemplateSpecOk() (*IoArgoprojWorkflowV1alpha1WorkflowSpec, bool) {
	if o == nil || o.StoredWorkflowTemplateSpec == nil {
		return nil, false
	}
	return o.StoredWorkflowTemplateSpec, true
}

// HasStoredWorkflowTemplateSpec returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasStoredWorkflowTemplateSpec() bool {
	if o != nil && o.StoredWorkflowTemplateSpec != nil {
		return true
	}

	return false
}

// SetStoredWorkflowTemplateSpec gets a reference to the given IoArgoprojWorkflowV1alpha1WorkflowSpec and assigns it to the StoredWorkflowTemplateSpec field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetStoredWorkflowTemplateSpec(v IoArgoprojWorkflowV1alpha1WorkflowSpec) {
	o.StoredWorkflowTemplateSpec = &v
}

// GetSynchronization returns the Synchronization field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetSynchronization() IoArgoprojWorkflowV1alpha1SynchronizationStatus {
	if o == nil || o.Synchronization == nil {
		var ret IoArgoprojWorkflowV1alpha1SynchronizationStatus
		return ret
	}
	return *o.Synchronization
}

// GetSynchronizationOk returns a tuple with the Synchronization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) GetSynchronizationOk() (*IoArgoprojWorkflowV1alpha1SynchronizationStatus, bool) {
	if o == nil || o.Synchronization == nil {
		return nil, false
	}
	return o.Synchronization, true
}

// HasSynchronization returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) HasSynchronization() bool {
	if o != nil && o.Synchronization != nil {
		return true
	}

	return false
}

// SetSynchronization gets a reference to the given IoArgoprojWorkflowV1alpha1SynchronizationStatus and assigns it to the Synchronization field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowStatus) SetSynchronization(v IoArgoprojWorkflowV1alpha1SynchronizationStatus) {
	o.Synchronization = &v
}

func (o IoArgoprojWorkflowV1alpha1WorkflowStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArtifactRepositoryRef != nil {
		toSerialize["artifactRepositoryRef"] = o.ArtifactRepositoryRef
	}
	if o.CompressedNodes != nil {
		toSerialize["compressedNodes"] = o.CompressedNodes
	}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.EstimatedDuration != nil {
		toSerialize["estimatedDuration"] = o.EstimatedDuration
	}
	if o.FinishedAt != nil {
		toSerialize["finishedAt"] = o.FinishedAt
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	if o.OffloadNodeStatusVersion != nil {
		toSerialize["offloadNodeStatusVersion"] = o.OffloadNodeStatusVersion
	}
	if o.Outputs != nil {
		toSerialize["outputs"] = o.Outputs
	}
	if o.PersistentVolumeClaims != nil {
		toSerialize["persistentVolumeClaims"] = o.PersistentVolumeClaims
	}
	if o.Phase != nil {
		toSerialize["phase"] = o.Phase
	}
	if o.Progress != nil {
		toSerialize["progress"] = o.Progress
	}
	if o.ResourcesDuration != nil {
		toSerialize["resourcesDuration"] = o.ResourcesDuration
	}
	if o.StartedAt != nil {
		toSerialize["startedAt"] = o.StartedAt
	}
	if o.StoredTemplates != nil {
		toSerialize["storedTemplates"] = o.StoredTemplates
	}
	if o.StoredWorkflowTemplateSpec != nil {
		toSerialize["storedWorkflowTemplateSpec"] = o.StoredWorkflowTemplateSpec
	}
	if o.Synchronization != nil {
		toSerialize["synchronization"] = o.Synchronization
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1WorkflowStatus struct {
	value *IoArgoprojWorkflowV1alpha1WorkflowStatus
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowStatus) Get() *IoArgoprojWorkflowV1alpha1WorkflowStatus {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowStatus) Set(val *IoArgoprojWorkflowV1alpha1WorkflowStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1WorkflowStatus(val *IoArgoprojWorkflowV1alpha1WorkflowStatus) *NullableIoArgoprojWorkflowV1alpha1WorkflowStatus {
	return &NullableIoArgoprojWorkflowV1alpha1WorkflowStatus{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


