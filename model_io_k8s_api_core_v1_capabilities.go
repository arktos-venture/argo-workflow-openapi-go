/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1Capabilities Adds and removes POSIX capabilities from running containers.
type IoK8sApiCoreV1Capabilities struct {
	// Added capabilities
	Add *[]string `json:"add,omitempty"`
	// Removed capabilities
	Drop *[]string `json:"drop,omitempty"`
}

// NewIoK8sApiCoreV1Capabilities instantiates a new IoK8sApiCoreV1Capabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1Capabilities() *IoK8sApiCoreV1Capabilities {
	this := IoK8sApiCoreV1Capabilities{}
	return &this
}

// NewIoK8sApiCoreV1CapabilitiesWithDefaults instantiates a new IoK8sApiCoreV1Capabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1CapabilitiesWithDefaults() *IoK8sApiCoreV1Capabilities {
	this := IoK8sApiCoreV1Capabilities{}
	return &this
}

// GetAdd returns the Add field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Capabilities) GetAdd() []string {
	if o == nil || o.Add == nil {
		var ret []string
		return ret
	}
	return *o.Add
}

// GetAddOk returns a tuple with the Add field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Capabilities) GetAddOk() (*[]string, bool) {
	if o == nil || o.Add == nil {
		return nil, false
	}
	return o.Add, true
}

// HasAdd returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Capabilities) HasAdd() bool {
	if o != nil && o.Add != nil {
		return true
	}

	return false
}

// SetAdd gets a reference to the given []string and assigns it to the Add field.
func (o *IoK8sApiCoreV1Capabilities) SetAdd(v []string) {
	o.Add = &v
}

// GetDrop returns the Drop field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Capabilities) GetDrop() []string {
	if o == nil || o.Drop == nil {
		var ret []string
		return ret
	}
	return *o.Drop
}

// GetDropOk returns a tuple with the Drop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Capabilities) GetDropOk() (*[]string, bool) {
	if o == nil || o.Drop == nil {
		return nil, false
	}
	return o.Drop, true
}

// HasDrop returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Capabilities) HasDrop() bool {
	if o != nil && o.Drop != nil {
		return true
	}

	return false
}

// SetDrop gets a reference to the given []string and assigns it to the Drop field.
func (o *IoK8sApiCoreV1Capabilities) SetDrop(v []string) {
	o.Drop = &v
}

func (o IoK8sApiCoreV1Capabilities) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Add != nil {
		toSerialize["add"] = o.Add
	}
	if o.Drop != nil {
		toSerialize["drop"] = o.Drop
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1Capabilities struct {
	value *IoK8sApiCoreV1Capabilities
	isSet bool
}

func (v NullableIoK8sApiCoreV1Capabilities) Get() *IoK8sApiCoreV1Capabilities {
	return v.value
}

func (v *NullableIoK8sApiCoreV1Capabilities) Set(val *IoK8sApiCoreV1Capabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1Capabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1Capabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1Capabilities(val *IoK8sApiCoreV1Capabilities) *NullableIoK8sApiCoreV1Capabilities {
	return &NullableIoK8sApiCoreV1Capabilities{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1Capabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1Capabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


