/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1PubSubEventSource PubSubEventSource refers to event-source for GCP PubSub related events.
type IoArgoprojEventsV1alpha1PubSubEventSource struct {
	CredentialSecret *IoK8sApiCoreV1SecretKeySelector `json:"credentialSecret,omitempty"`
	CredentialsFile *string `json:"credentialsFile,omitempty"`
	DeleteSubscriptionOnFinish *bool `json:"deleteSubscriptionOnFinish,omitempty"`
	JsonBody *bool `json:"jsonBody,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	ProjectID *string `json:"projectID,omitempty"`
	SubscriptionID *string `json:"subscriptionID,omitempty"`
	Topic *string `json:"topic,omitempty"`
	TopicProjectID *string `json:"topicProjectID,omitempty"`
}

// NewIoArgoprojEventsV1alpha1PubSubEventSource instantiates a new IoArgoprojEventsV1alpha1PubSubEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1PubSubEventSource() *IoArgoprojEventsV1alpha1PubSubEventSource {
	this := IoArgoprojEventsV1alpha1PubSubEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1PubSubEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1PubSubEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1PubSubEventSourceWithDefaults() *IoArgoprojEventsV1alpha1PubSubEventSource {
	this := IoArgoprojEventsV1alpha1PubSubEventSource{}
	return &this
}

// GetCredentialSecret returns the CredentialSecret field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetCredentialSecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.CredentialSecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.CredentialSecret
}

// GetCredentialSecretOk returns a tuple with the CredentialSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetCredentialSecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.CredentialSecret == nil {
		return nil, false
	}
	return o.CredentialSecret, true
}

// HasCredentialSecret returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasCredentialSecret() bool {
	if o != nil && o.CredentialSecret != nil {
		return true
	}

	return false
}

// SetCredentialSecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the CredentialSecret field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetCredentialSecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.CredentialSecret = &v
}

// GetCredentialsFile returns the CredentialsFile field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetCredentialsFile() string {
	if o == nil || o.CredentialsFile == nil {
		var ret string
		return ret
	}
	return *o.CredentialsFile
}

// GetCredentialsFileOk returns a tuple with the CredentialsFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetCredentialsFileOk() (*string, bool) {
	if o == nil || o.CredentialsFile == nil {
		return nil, false
	}
	return o.CredentialsFile, true
}

// HasCredentialsFile returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasCredentialsFile() bool {
	if o != nil && o.CredentialsFile != nil {
		return true
	}

	return false
}

// SetCredentialsFile gets a reference to the given string and assigns it to the CredentialsFile field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetCredentialsFile(v string) {
	o.CredentialsFile = &v
}

// GetDeleteSubscriptionOnFinish returns the DeleteSubscriptionOnFinish field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetDeleteSubscriptionOnFinish() bool {
	if o == nil || o.DeleteSubscriptionOnFinish == nil {
		var ret bool
		return ret
	}
	return *o.DeleteSubscriptionOnFinish
}

// GetDeleteSubscriptionOnFinishOk returns a tuple with the DeleteSubscriptionOnFinish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetDeleteSubscriptionOnFinishOk() (*bool, bool) {
	if o == nil || o.DeleteSubscriptionOnFinish == nil {
		return nil, false
	}
	return o.DeleteSubscriptionOnFinish, true
}

// HasDeleteSubscriptionOnFinish returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasDeleteSubscriptionOnFinish() bool {
	if o != nil && o.DeleteSubscriptionOnFinish != nil {
		return true
	}

	return false
}

// SetDeleteSubscriptionOnFinish gets a reference to the given bool and assigns it to the DeleteSubscriptionOnFinish field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetDeleteSubscriptionOnFinish(v bool) {
	o.DeleteSubscriptionOnFinish = &v
}

// GetJsonBody returns the JsonBody field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetJsonBody() bool {
	if o == nil || o.JsonBody == nil {
		var ret bool
		return ret
	}
	return *o.JsonBody
}

// GetJsonBodyOk returns a tuple with the JsonBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetJsonBodyOk() (*bool, bool) {
	if o == nil || o.JsonBody == nil {
		return nil, false
	}
	return o.JsonBody, true
}

// HasJsonBody returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasJsonBody() bool {
	if o != nil && o.JsonBody != nil {
		return true
	}

	return false
}

// SetJsonBody gets a reference to the given bool and assigns it to the JsonBody field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetJsonBody(v bool) {
	o.JsonBody = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetProjectID returns the ProjectID field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetProjectID() string {
	if o == nil || o.ProjectID == nil {
		var ret string
		return ret
	}
	return *o.ProjectID
}

// GetProjectIDOk returns a tuple with the ProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetProjectIDOk() (*string, bool) {
	if o == nil || o.ProjectID == nil {
		return nil, false
	}
	return o.ProjectID, true
}

// HasProjectID returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasProjectID() bool {
	if o != nil && o.ProjectID != nil {
		return true
	}

	return false
}

// SetProjectID gets a reference to the given string and assigns it to the ProjectID field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetProjectID(v string) {
	o.ProjectID = &v
}

// GetSubscriptionID returns the SubscriptionID field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetSubscriptionID() string {
	if o == nil || o.SubscriptionID == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionID
}

// GetSubscriptionIDOk returns a tuple with the SubscriptionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetSubscriptionIDOk() (*string, bool) {
	if o == nil || o.SubscriptionID == nil {
		return nil, false
	}
	return o.SubscriptionID, true
}

// HasSubscriptionID returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasSubscriptionID() bool {
	if o != nil && o.SubscriptionID != nil {
		return true
	}

	return false
}

// SetSubscriptionID gets a reference to the given string and assigns it to the SubscriptionID field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetSubscriptionID(v string) {
	o.SubscriptionID = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetTopic() string {
	if o == nil || o.Topic == nil {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetTopicOk() (*string, bool) {
	if o == nil || o.Topic == nil {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasTopic() bool {
	if o != nil && o.Topic != nil {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetTopic(v string) {
	o.Topic = &v
}

// GetTopicProjectID returns the TopicProjectID field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetTopicProjectID() string {
	if o == nil || o.TopicProjectID == nil {
		var ret string
		return ret
	}
	return *o.TopicProjectID
}

// GetTopicProjectIDOk returns a tuple with the TopicProjectID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) GetTopicProjectIDOk() (*string, bool) {
	if o == nil || o.TopicProjectID == nil {
		return nil, false
	}
	return o.TopicProjectID, true
}

// HasTopicProjectID returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) HasTopicProjectID() bool {
	if o != nil && o.TopicProjectID != nil {
		return true
	}

	return false
}

// SetTopicProjectID gets a reference to the given string and assigns it to the TopicProjectID field.
func (o *IoArgoprojEventsV1alpha1PubSubEventSource) SetTopicProjectID(v string) {
	o.TopicProjectID = &v
}

func (o IoArgoprojEventsV1alpha1PubSubEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CredentialSecret != nil {
		toSerialize["credentialSecret"] = o.CredentialSecret
	}
	if o.CredentialsFile != nil {
		toSerialize["credentialsFile"] = o.CredentialsFile
	}
	if o.DeleteSubscriptionOnFinish != nil {
		toSerialize["deleteSubscriptionOnFinish"] = o.DeleteSubscriptionOnFinish
	}
	if o.JsonBody != nil {
		toSerialize["jsonBody"] = o.JsonBody
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.ProjectID != nil {
		toSerialize["projectID"] = o.ProjectID
	}
	if o.SubscriptionID != nil {
		toSerialize["subscriptionID"] = o.SubscriptionID
	}
	if o.Topic != nil {
		toSerialize["topic"] = o.Topic
	}
	if o.TopicProjectID != nil {
		toSerialize["topicProjectID"] = o.TopicProjectID
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1PubSubEventSource struct {
	value *IoArgoprojEventsV1alpha1PubSubEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1PubSubEventSource) Get() *IoArgoprojEventsV1alpha1PubSubEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1PubSubEventSource) Set(val *IoArgoprojEventsV1alpha1PubSubEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1PubSubEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1PubSubEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1PubSubEventSource(val *IoArgoprojEventsV1alpha1PubSubEventSource) *NullableIoArgoprojEventsV1alpha1PubSubEventSource {
	return &NullableIoArgoprojEventsV1alpha1PubSubEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1PubSubEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1PubSubEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


