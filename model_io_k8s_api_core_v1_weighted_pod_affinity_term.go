/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1WeightedPodAffinityTerm The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
type IoK8sApiCoreV1WeightedPodAffinityTerm struct {
	PodAffinityTerm IoK8sApiCoreV1PodAffinityTerm `json:"podAffinityTerm"`
	// weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
	Weight int32 `json:"weight"`
}

// NewIoK8sApiCoreV1WeightedPodAffinityTerm instantiates a new IoK8sApiCoreV1WeightedPodAffinityTerm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1WeightedPodAffinityTerm(podAffinityTerm IoK8sApiCoreV1PodAffinityTerm, weight int32) *IoK8sApiCoreV1WeightedPodAffinityTerm {
	this := IoK8sApiCoreV1WeightedPodAffinityTerm{}
	this.PodAffinityTerm = podAffinityTerm
	this.Weight = weight
	return &this
}

// NewIoK8sApiCoreV1WeightedPodAffinityTermWithDefaults instantiates a new IoK8sApiCoreV1WeightedPodAffinityTerm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1WeightedPodAffinityTermWithDefaults() *IoK8sApiCoreV1WeightedPodAffinityTerm {
	this := IoK8sApiCoreV1WeightedPodAffinityTerm{}
	return &this
}

// GetPodAffinityTerm returns the PodAffinityTerm field value
func (o *IoK8sApiCoreV1WeightedPodAffinityTerm) GetPodAffinityTerm() IoK8sApiCoreV1PodAffinityTerm {
	if o == nil {
		var ret IoK8sApiCoreV1PodAffinityTerm
		return ret
	}

	return o.PodAffinityTerm
}

// GetPodAffinityTermOk returns a tuple with the PodAffinityTerm field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1WeightedPodAffinityTerm) GetPodAffinityTermOk() (*IoK8sApiCoreV1PodAffinityTerm, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PodAffinityTerm, true
}

// SetPodAffinityTerm sets field value
func (o *IoK8sApiCoreV1WeightedPodAffinityTerm) SetPodAffinityTerm(v IoK8sApiCoreV1PodAffinityTerm) {
	o.PodAffinityTerm = v
}

// GetWeight returns the Weight field value
func (o *IoK8sApiCoreV1WeightedPodAffinityTerm) GetWeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1WeightedPodAffinityTerm) GetWeightOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *IoK8sApiCoreV1WeightedPodAffinityTerm) SetWeight(v int32) {
	o.Weight = v
}

func (o IoK8sApiCoreV1WeightedPodAffinityTerm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["podAffinityTerm"] = o.PodAffinityTerm
	}
	if true {
		toSerialize["weight"] = o.Weight
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1WeightedPodAffinityTerm struct {
	value *IoK8sApiCoreV1WeightedPodAffinityTerm
	isSet bool
}

func (v NullableIoK8sApiCoreV1WeightedPodAffinityTerm) Get() *IoK8sApiCoreV1WeightedPodAffinityTerm {
	return v.value
}

func (v *NullableIoK8sApiCoreV1WeightedPodAffinityTerm) Set(val *IoK8sApiCoreV1WeightedPodAffinityTerm) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1WeightedPodAffinityTerm) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1WeightedPodAffinityTerm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1WeightedPodAffinityTerm(val *IoK8sApiCoreV1WeightedPodAffinityTerm) *NullableIoK8sApiCoreV1WeightedPodAffinityTerm {
	return &NullableIoK8sApiCoreV1WeightedPodAffinityTerm{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1WeightedPodAffinityTerm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1WeightedPodAffinityTerm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


