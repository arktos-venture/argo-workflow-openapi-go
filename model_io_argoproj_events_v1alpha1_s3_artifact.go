/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1S3Artifact struct for IoArgoprojEventsV1alpha1S3Artifact
type IoArgoprojEventsV1alpha1S3Artifact struct {
	AccessKey *IoK8sApiCoreV1SecretKeySelector `json:"accessKey,omitempty"`
	Bucket *IoArgoprojEventsV1alpha1S3Bucket `json:"bucket,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	Events *[]string `json:"events,omitempty"`
	Filter *IoArgoprojEventsV1alpha1S3Filter `json:"filter,omitempty"`
	Insecure *bool `json:"insecure,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Region *string `json:"region,omitempty"`
	SecretKey *IoK8sApiCoreV1SecretKeySelector `json:"secretKey,omitempty"`
}

// NewIoArgoprojEventsV1alpha1S3Artifact instantiates a new IoArgoprojEventsV1alpha1S3Artifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1S3Artifact() *IoArgoprojEventsV1alpha1S3Artifact {
	this := IoArgoprojEventsV1alpha1S3Artifact{}
	return &this
}

// NewIoArgoprojEventsV1alpha1S3ArtifactWithDefaults instantiates a new IoArgoprojEventsV1alpha1S3Artifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1S3ArtifactWithDefaults() *IoArgoprojEventsV1alpha1S3Artifact {
	this := IoArgoprojEventsV1alpha1S3Artifact{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetAccessKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.AccessKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetAccessKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the AccessKey field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetAccessKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.AccessKey = &v
}

// GetBucket returns the Bucket field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetBucket() IoArgoprojEventsV1alpha1S3Bucket {
	if o == nil || o.Bucket == nil {
		var ret IoArgoprojEventsV1alpha1S3Bucket
		return ret
	}
	return *o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetBucketOk() (*IoArgoprojEventsV1alpha1S3Bucket, bool) {
	if o == nil || o.Bucket == nil {
		return nil, false
	}
	return o.Bucket, true
}

// HasBucket returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasBucket() bool {
	if o != nil && o.Bucket != nil {
		return true
	}

	return false
}

// SetBucket gets a reference to the given IoArgoprojEventsV1alpha1S3Bucket and assigns it to the Bucket field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetBucket(v IoArgoprojEventsV1alpha1S3Bucket) {
	o.Bucket = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetEvents() []string {
	if o == nil || o.Events == nil {
		var ret []string
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetEventsOk() (*[]string, bool) {
	if o == nil || o.Events == nil {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasEvents() bool {
	if o != nil && o.Events != nil {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []string and assigns it to the Events field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetEvents(v []string) {
	o.Events = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetFilter() IoArgoprojEventsV1alpha1S3Filter {
	if o == nil || o.Filter == nil {
		var ret IoArgoprojEventsV1alpha1S3Filter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetFilterOk() (*IoArgoprojEventsV1alpha1S3Filter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given IoArgoprojEventsV1alpha1S3Filter and assigns it to the Filter field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetFilter(v IoArgoprojEventsV1alpha1S3Filter) {
	o.Filter = &v
}

// GetInsecure returns the Insecure field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetInsecure() bool {
	if o == nil || o.Insecure == nil {
		var ret bool
		return ret
	}
	return *o.Insecure
}

// GetInsecureOk returns a tuple with the Insecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetInsecureOk() (*bool, bool) {
	if o == nil || o.Insecure == nil {
		return nil, false
	}
	return o.Insecure, true
}

// HasInsecure returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasInsecure() bool {
	if o != nil && o.Insecure != nil {
		return true
	}

	return false
}

// SetInsecure gets a reference to the given bool and assigns it to the Insecure field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetInsecure(v bool) {
	o.Insecure = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetRegion(v string) {
	o.Region = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetSecretKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SecretKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) GetSecretKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SecretKey == nil {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Artifact) HasSecretKey() bool {
	if o != nil && o.SecretKey != nil {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SecretKey field.
func (o *IoArgoprojEventsV1alpha1S3Artifact) SetSecretKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.SecretKey = &v
}

func (o IoArgoprojEventsV1alpha1S3Artifact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.Bucket != nil {
		toSerialize["bucket"] = o.Bucket
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.Events != nil {
		toSerialize["events"] = o.Events
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.Insecure != nil {
		toSerialize["insecure"] = o.Insecure
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.SecretKey != nil {
		toSerialize["secretKey"] = o.SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1S3Artifact struct {
	value *IoArgoprojEventsV1alpha1S3Artifact
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1S3Artifact) Get() *IoArgoprojEventsV1alpha1S3Artifact {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1S3Artifact) Set(val *IoArgoprojEventsV1alpha1S3Artifact) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1S3Artifact) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1S3Artifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1S3Artifact(val *IoArgoprojEventsV1alpha1S3Artifact) *NullableIoArgoprojEventsV1alpha1S3Artifact {
	return &NullableIoArgoprojEventsV1alpha1S3Artifact{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1S3Artifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1S3Artifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


