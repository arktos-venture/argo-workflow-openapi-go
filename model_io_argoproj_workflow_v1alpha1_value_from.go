/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1ValueFrom ValueFrom describes a location in which to obtain the value to a parameter
type IoArgoprojWorkflowV1alpha1ValueFrom struct {
	ConfigMapKeyRef *IoK8sApiCoreV1ConfigMapKeySelector `json:"configMapKeyRef,omitempty"`
	// Default specifies a value to be used if retrieving the value from the specified source fails
	Default *string `json:"default,omitempty"`
	// Selector (https://github.com/antonmedv/expr) that is evaluated against the event to get the value of the parameter. E.g. `payload.message`
	Event *string `json:"event,omitempty"`
	// Expression, if defined, is evaluated to specify the value for the parameter
	Expression *string `json:"expression,omitempty"`
	// JQFilter expression against the resource object in resource templates
	JqFilter *string `json:"jqFilter,omitempty"`
	// JSONPath of a resource to retrieve an output parameter value from in resource templates
	JsonPath *string `json:"jsonPath,omitempty"`
	// Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')
	Parameter *string `json:"parameter,omitempty"`
	// Path in the container to retrieve an output parameter value from in container templates
	Path *string `json:"path,omitempty"`
	// SuppliedValueFrom is a placeholder for a value to be filled in directly, either through the CLI, API, etc.
	Supplied *map[string]interface{} `json:"supplied,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1ValueFrom instantiates a new IoArgoprojWorkflowV1alpha1ValueFrom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1ValueFrom() *IoArgoprojWorkflowV1alpha1ValueFrom {
	this := IoArgoprojWorkflowV1alpha1ValueFrom{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ValueFromWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1ValueFrom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ValueFromWithDefaults() *IoArgoprojWorkflowV1alpha1ValueFrom {
	this := IoArgoprojWorkflowV1alpha1ValueFrom{}
	return &this
}

// GetConfigMapKeyRef returns the ConfigMapKeyRef field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetConfigMapKeyRef() IoK8sApiCoreV1ConfigMapKeySelector {
	if o == nil || o.ConfigMapKeyRef == nil {
		var ret IoK8sApiCoreV1ConfigMapKeySelector
		return ret
	}
	return *o.ConfigMapKeyRef
}

// GetConfigMapKeyRefOk returns a tuple with the ConfigMapKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetConfigMapKeyRefOk() (*IoK8sApiCoreV1ConfigMapKeySelector, bool) {
	if o == nil || o.ConfigMapKeyRef == nil {
		return nil, false
	}
	return o.ConfigMapKeyRef, true
}

// HasConfigMapKeyRef returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasConfigMapKeyRef() bool {
	if o != nil && o.ConfigMapKeyRef != nil {
		return true
	}

	return false
}

// SetConfigMapKeyRef gets a reference to the given IoK8sApiCoreV1ConfigMapKeySelector and assigns it to the ConfigMapKeyRef field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetConfigMapKeyRef(v IoK8sApiCoreV1ConfigMapKeySelector) {
	o.ConfigMapKeyRef = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetDefault() string {
	if o == nil || o.Default == nil {
		var ret string
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetDefaultOk() (*string, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given string and assigns it to the Default field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetDefault(v string) {
	o.Default = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetEvent(v string) {
	o.Event = &v
}

// GetExpression returns the Expression field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetExpression() string {
	if o == nil || o.Expression == nil {
		var ret string
		return ret
	}
	return *o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetExpressionOk() (*string, bool) {
	if o == nil || o.Expression == nil {
		return nil, false
	}
	return o.Expression, true
}

// HasExpression returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasExpression() bool {
	if o != nil && o.Expression != nil {
		return true
	}

	return false
}

// SetExpression gets a reference to the given string and assigns it to the Expression field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetExpression(v string) {
	o.Expression = &v
}

// GetJqFilter returns the JqFilter field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetJqFilter() string {
	if o == nil || o.JqFilter == nil {
		var ret string
		return ret
	}
	return *o.JqFilter
}

// GetJqFilterOk returns a tuple with the JqFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetJqFilterOk() (*string, bool) {
	if o == nil || o.JqFilter == nil {
		return nil, false
	}
	return o.JqFilter, true
}

// HasJqFilter returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasJqFilter() bool {
	if o != nil && o.JqFilter != nil {
		return true
	}

	return false
}

// SetJqFilter gets a reference to the given string and assigns it to the JqFilter field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetJqFilter(v string) {
	o.JqFilter = &v
}

// GetJsonPath returns the JsonPath field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetJsonPath() string {
	if o == nil || o.JsonPath == nil {
		var ret string
		return ret
	}
	return *o.JsonPath
}

// GetJsonPathOk returns a tuple with the JsonPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetJsonPathOk() (*string, bool) {
	if o == nil || o.JsonPath == nil {
		return nil, false
	}
	return o.JsonPath, true
}

// HasJsonPath returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasJsonPath() bool {
	if o != nil && o.JsonPath != nil {
		return true
	}

	return false
}

// SetJsonPath gets a reference to the given string and assigns it to the JsonPath field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetJsonPath(v string) {
	o.JsonPath = &v
}

// GetParameter returns the Parameter field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetParameter() string {
	if o == nil || o.Parameter == nil {
		var ret string
		return ret
	}
	return *o.Parameter
}

// GetParameterOk returns a tuple with the Parameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetParameterOk() (*string, bool) {
	if o == nil || o.Parameter == nil {
		return nil, false
	}
	return o.Parameter, true
}

// HasParameter returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasParameter() bool {
	if o != nil && o.Parameter != nil {
		return true
	}

	return false
}

// SetParameter gets a reference to the given string and assigns it to the Parameter field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetParameter(v string) {
	o.Parameter = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetPath(v string) {
	o.Path = &v
}

// GetSupplied returns the Supplied field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetSupplied() map[string]interface{} {
	if o == nil || o.Supplied == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Supplied
}

// GetSuppliedOk returns a tuple with the Supplied field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) GetSuppliedOk() (*map[string]interface{}, bool) {
	if o == nil || o.Supplied == nil {
		return nil, false
	}
	return o.Supplied, true
}

// HasSupplied returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) HasSupplied() bool {
	if o != nil && o.Supplied != nil {
		return true
	}

	return false
}

// SetSupplied gets a reference to the given map[string]interface{} and assigns it to the Supplied field.
func (o *IoArgoprojWorkflowV1alpha1ValueFrom) SetSupplied(v map[string]interface{}) {
	o.Supplied = &v
}

func (o IoArgoprojWorkflowV1alpha1ValueFrom) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigMapKeyRef != nil {
		toSerialize["configMapKeyRef"] = o.ConfigMapKeyRef
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	if o.Expression != nil {
		toSerialize["expression"] = o.Expression
	}
	if o.JqFilter != nil {
		toSerialize["jqFilter"] = o.JqFilter
	}
	if o.JsonPath != nil {
		toSerialize["jsonPath"] = o.JsonPath
	}
	if o.Parameter != nil {
		toSerialize["parameter"] = o.Parameter
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Supplied != nil {
		toSerialize["supplied"] = o.Supplied
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1ValueFrom struct {
	value *IoArgoprojWorkflowV1alpha1ValueFrom
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1ValueFrom) Get() *IoArgoprojWorkflowV1alpha1ValueFrom {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1ValueFrom) Set(val *IoArgoprojWorkflowV1alpha1ValueFrom) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1ValueFrom) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1ValueFrom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1ValueFrom(val *IoArgoprojWorkflowV1alpha1ValueFrom) *NullableIoArgoprojWorkflowV1alpha1ValueFrom {
	return &NullableIoArgoprojWorkflowV1alpha1ValueFrom{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1ValueFrom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1ValueFrom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


