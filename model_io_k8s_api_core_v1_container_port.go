/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1ContainerPort ContainerPort represents a network port in a single container.
type IoK8sApiCoreV1ContainerPort struct {
	// Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
	ContainerPort int32 `json:"containerPort"`
	// What host IP to bind the external port to.
	HostIP *string `json:"hostIP,omitempty"`
	// Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
	HostPort *int32 `json:"hostPort,omitempty"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
	Name *string `json:"name,omitempty"`
	// Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".
	Protocol *string `json:"protocol,omitempty"`
}

// NewIoK8sApiCoreV1ContainerPort instantiates a new IoK8sApiCoreV1ContainerPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1ContainerPort(containerPort int32) *IoK8sApiCoreV1ContainerPort {
	this := IoK8sApiCoreV1ContainerPort{}
	this.ContainerPort = containerPort
	return &this
}

// NewIoK8sApiCoreV1ContainerPortWithDefaults instantiates a new IoK8sApiCoreV1ContainerPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1ContainerPortWithDefaults() *IoK8sApiCoreV1ContainerPort {
	this := IoK8sApiCoreV1ContainerPort{}
	return &this
}

// GetContainerPort returns the ContainerPort field value
func (o *IoK8sApiCoreV1ContainerPort) GetContainerPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContainerPort
}

// GetContainerPortOk returns a tuple with the ContainerPort field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ContainerPort) GetContainerPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContainerPort, true
}

// SetContainerPort sets field value
func (o *IoK8sApiCoreV1ContainerPort) SetContainerPort(v int32) {
	o.ContainerPort = v
}

// GetHostIP returns the HostIP field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ContainerPort) GetHostIP() string {
	if o == nil || o.HostIP == nil {
		var ret string
		return ret
	}
	return *o.HostIP
}

// GetHostIPOk returns a tuple with the HostIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ContainerPort) GetHostIPOk() (*string, bool) {
	if o == nil || o.HostIP == nil {
		return nil, false
	}
	return o.HostIP, true
}

// HasHostIP returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ContainerPort) HasHostIP() bool {
	if o != nil && o.HostIP != nil {
		return true
	}

	return false
}

// SetHostIP gets a reference to the given string and assigns it to the HostIP field.
func (o *IoK8sApiCoreV1ContainerPort) SetHostIP(v string) {
	o.HostIP = &v
}

// GetHostPort returns the HostPort field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ContainerPort) GetHostPort() int32 {
	if o == nil || o.HostPort == nil {
		var ret int32
		return ret
	}
	return *o.HostPort
}

// GetHostPortOk returns a tuple with the HostPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ContainerPort) GetHostPortOk() (*int32, bool) {
	if o == nil || o.HostPort == nil {
		return nil, false
	}
	return o.HostPort, true
}

// HasHostPort returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ContainerPort) HasHostPort() bool {
	if o != nil && o.HostPort != nil {
		return true
	}

	return false
}

// SetHostPort gets a reference to the given int32 and assigns it to the HostPort field.
func (o *IoK8sApiCoreV1ContainerPort) SetHostPort(v int32) {
	o.HostPort = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ContainerPort) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ContainerPort) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ContainerPort) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IoK8sApiCoreV1ContainerPort) SetName(v string) {
	o.Name = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ContainerPort) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ContainerPort) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ContainerPort) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *IoK8sApiCoreV1ContainerPort) SetProtocol(v string) {
	o.Protocol = &v
}

func (o IoK8sApiCoreV1ContainerPort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["containerPort"] = o.ContainerPort
	}
	if o.HostIP != nil {
		toSerialize["hostIP"] = o.HostIP
	}
	if o.HostPort != nil {
		toSerialize["hostPort"] = o.HostPort
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1ContainerPort struct {
	value *IoK8sApiCoreV1ContainerPort
	isSet bool
}

func (v NullableIoK8sApiCoreV1ContainerPort) Get() *IoK8sApiCoreV1ContainerPort {
	return v.value
}

func (v *NullableIoK8sApiCoreV1ContainerPort) Set(val *IoK8sApiCoreV1ContainerPort) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1ContainerPort) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1ContainerPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1ContainerPort(val *IoK8sApiCoreV1ContainerPort) *NullableIoK8sApiCoreV1ContainerPort {
	return &NullableIoK8sApiCoreV1ContainerPort{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1ContainerPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1ContainerPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


