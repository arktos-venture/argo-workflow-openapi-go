/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1HTTPHeader struct for IoArgoprojWorkflowV1alpha1HTTPHeader
type IoArgoprojWorkflowV1alpha1HTTPHeader struct {
	Name string `json:"name"`
	Value *string `json:"value,omitempty"`
	ValueFrom *IoArgoprojWorkflowV1alpha1HTTPHeaderSource `json:"valueFrom,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1HTTPHeader instantiates a new IoArgoprojWorkflowV1alpha1HTTPHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1HTTPHeader(name string) *IoArgoprojWorkflowV1alpha1HTTPHeader {
	this := IoArgoprojWorkflowV1alpha1HTTPHeader{}
	this.Name = name
	return &this
}

// NewIoArgoprojWorkflowV1alpha1HTTPHeaderWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1HTTPHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1HTTPHeaderWithDefaults() *IoArgoprojWorkflowV1alpha1HTTPHeader {
	this := IoArgoprojWorkflowV1alpha1HTTPHeader{}
	return &this
}

// GetName returns the Name field value
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) SetValue(v string) {
	o.Value = &v
}

// GetValueFrom returns the ValueFrom field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) GetValueFrom() IoArgoprojWorkflowV1alpha1HTTPHeaderSource {
	if o == nil || o.ValueFrom == nil {
		var ret IoArgoprojWorkflowV1alpha1HTTPHeaderSource
		return ret
	}
	return *o.ValueFrom
}

// GetValueFromOk returns a tuple with the ValueFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) GetValueFromOk() (*IoArgoprojWorkflowV1alpha1HTTPHeaderSource, bool) {
	if o == nil || o.ValueFrom == nil {
		return nil, false
	}
	return o.ValueFrom, true
}

// HasValueFrom returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) HasValueFrom() bool {
	if o != nil && o.ValueFrom != nil {
		return true
	}

	return false
}

// SetValueFrom gets a reference to the given IoArgoprojWorkflowV1alpha1HTTPHeaderSource and assigns it to the ValueFrom field.
func (o *IoArgoprojWorkflowV1alpha1HTTPHeader) SetValueFrom(v IoArgoprojWorkflowV1alpha1HTTPHeaderSource) {
	o.ValueFrom = &v
}

func (o IoArgoprojWorkflowV1alpha1HTTPHeader) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.ValueFrom != nil {
		toSerialize["valueFrom"] = o.ValueFrom
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1HTTPHeader struct {
	value *IoArgoprojWorkflowV1alpha1HTTPHeader
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPHeader) Get() *IoArgoprojWorkflowV1alpha1HTTPHeader {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPHeader) Set(val *IoArgoprojWorkflowV1alpha1HTTPHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1HTTPHeader(val *IoArgoprojWorkflowV1alpha1HTTPHeader) *NullableIoArgoprojWorkflowV1alpha1HTTPHeader {
	return &NullableIoArgoprojWorkflowV1alpha1HTTPHeader{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


