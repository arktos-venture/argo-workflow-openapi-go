/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig
type GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig struct {
	Brokers *[]string `json:"brokers,omitempty"`
	MaxMessageBytes *int32 `json:"maxMessageBytes,omitempty"`
	Net *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET `json:"net,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig() *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfigWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfigWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig{}
	return &this
}

// GetBrokers returns the Brokers field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetBrokers() []string {
	if o == nil || o.Brokers == nil {
		var ret []string
		return ret
	}
	return *o.Brokers
}

// GetBrokersOk returns a tuple with the Brokers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetBrokersOk() (*[]string, bool) {
	if o == nil || o.Brokers == nil {
		return nil, false
	}
	return o.Brokers, true
}

// HasBrokers returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) HasBrokers() bool {
	if o != nil && o.Brokers != nil {
		return true
	}

	return false
}

// SetBrokers gets a reference to the given []string and assigns it to the Brokers field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) SetBrokers(v []string) {
	o.Brokers = &v
}

// GetMaxMessageBytes returns the MaxMessageBytes field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetMaxMessageBytes() int32 {
	if o == nil || o.MaxMessageBytes == nil {
		var ret int32
		return ret
	}
	return *o.MaxMessageBytes
}

// GetMaxMessageBytesOk returns a tuple with the MaxMessageBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetMaxMessageBytesOk() (*int32, bool) {
	if o == nil || o.MaxMessageBytes == nil {
		return nil, false
	}
	return o.MaxMessageBytes, true
}

// HasMaxMessageBytes returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) HasMaxMessageBytes() bool {
	if o != nil && o.MaxMessageBytes != nil {
		return true
	}

	return false
}

// SetMaxMessageBytes gets a reference to the given int32 and assigns it to the MaxMessageBytes field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) SetMaxMessageBytes(v int32) {
	o.MaxMessageBytes = &v
}

// GetNet returns the Net field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetNet() GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET {
	if o == nil || o.Net == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET
		return ret
	}
	return *o.Net
}

// GetNetOk returns a tuple with the Net field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetNetOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET, bool) {
	if o == nil || o.Net == nil {
		return nil, false
	}
	return o.Net, true
}

// HasNet returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) HasNet() bool {
	if o != nil && o.Net != nil {
		return true
	}

	return false
}

// SetNet gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET and assigns it to the Net field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) SetNet(v GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaNET) {
	o.Net = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) SetVersion(v string) {
	o.Version = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Brokers != nil {
		toSerialize["brokers"] = o.Brokers
	}
	if o.MaxMessageBytes != nil {
		toSerialize["maxMessageBytes"] = o.MaxMessageBytes
	}
	if o.Net != nil {
		toSerialize["net"] = o.Net
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


