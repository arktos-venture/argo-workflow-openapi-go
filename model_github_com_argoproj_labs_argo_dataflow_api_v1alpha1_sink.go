/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink
type GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink struct {
	Db *GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink `json:"db,omitempty"`
	Http *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink `json:"http,omitempty"`
	Kafka *GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink `json:"kafka,omitempty"`
	Log *GithubComArgoprojLabsArgoDataflowApiV1alpha1Log `json:"log,omitempty"`
	Name *string `json:"name,omitempty"`
	S3 *GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink `json:"s3,omitempty"`
	Stan *GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN `json:"stan,omitempty"`
	Volume *GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink `json:"volume,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1SinkWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1SinkWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink{}
	return &this
}

// GetDb returns the Db field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetDb() GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink {
	if o == nil || o.Db == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink
		return ret
	}
	return *o.Db
}

// GetDbOk returns a tuple with the Db field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetDbOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink, bool) {
	if o == nil || o.Db == nil {
		return nil, false
	}
	return o.Db, true
}

// HasDb returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasDb() bool {
	if o != nil && o.Db != nil {
		return true
	}

	return false
}

// SetDb gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink and assigns it to the Db field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetDb(v GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink) {
	o.Db = &v
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetHttp() GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink {
	if o == nil || o.Http == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetHttpOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink, bool) {
	if o == nil || o.Http == nil {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasHttp() bool {
	if o != nil && o.Http != nil {
		return true
	}

	return false
}

// SetHttp gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink and assigns it to the Http field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetHttp(v GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) {
	o.Http = &v
}

// GetKafka returns the Kafka field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetKafka() GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink {
	if o == nil || o.Kafka == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink
		return ret
	}
	return *o.Kafka
}

// GetKafkaOk returns a tuple with the Kafka field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetKafkaOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink, bool) {
	if o == nil || o.Kafka == nil {
		return nil, false
	}
	return o.Kafka, true
}

// HasKafka returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasKafka() bool {
	if o != nil && o.Kafka != nil {
		return true
	}

	return false
}

// SetKafka gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink and assigns it to the Kafka field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetKafka(v GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink) {
	o.Kafka = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetLog() GithubComArgoprojLabsArgoDataflowApiV1alpha1Log {
	if o == nil || o.Log == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1Log
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetLogOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1Log, bool) {
	if o == nil || o.Log == nil {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasLog() bool {
	if o != nil && o.Log != nil {
		return true
	}

	return false
}

// SetLog gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1Log and assigns it to the Log field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetLog(v GithubComArgoprojLabsArgoDataflowApiV1alpha1Log) {
	o.Log = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetName(v string) {
	o.Name = &v
}

// GetS3 returns the S3 field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetS3() GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink {
	if o == nil || o.S3 == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink
		return ret
	}
	return *o.S3
}

// GetS3Ok returns a tuple with the S3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetS3Ok() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink, bool) {
	if o == nil || o.S3 == nil {
		return nil, false
	}
	return o.S3, true
}

// HasS3 returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasS3() bool {
	if o != nil && o.S3 != nil {
		return true
	}

	return false
}

// SetS3 gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink and assigns it to the S3 field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetS3(v GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink) {
	o.S3 = &v
}

// GetStan returns the Stan field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetStan() GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN {
	if o == nil || o.Stan == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN
		return ret
	}
	return *o.Stan
}

// GetStanOk returns a tuple with the Stan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetStanOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN, bool) {
	if o == nil || o.Stan == nil {
		return nil, false
	}
	return o.Stan, true
}

// HasStan returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasStan() bool {
	if o != nil && o.Stan != nil {
		return true
	}

	return false
}

// SetStan gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN and assigns it to the Stan field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetStan(v GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN) {
	o.Stan = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetVolume() GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink {
	if o == nil || o.Volume == nil {
		var ret GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) GetVolumeOk() (*GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink, bool) {
	if o == nil || o.Volume == nil {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) HasVolume() bool {
	if o != nil && o.Volume != nil {
		return true
	}

	return false
}

// SetVolume gets a reference to the given GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink and assigns it to the Volume field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) SetVolume(v GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink) {
	o.Volume = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Db != nil {
		toSerialize["db"] = o.Db
	}
	if o.Http != nil {
		toSerialize["http"] = o.Http
	}
	if o.Kafka != nil {
		toSerialize["kafka"] = o.Kafka
	}
	if o.Log != nil {
		toSerialize["log"] = o.Log
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.S3 != nil {
		toSerialize["s3"] = o.S3
	}
	if o.Stan != nil {
		toSerialize["stan"] = o.Stan
	}
	if o.Volume != nil {
		toSerialize["volume"] = o.Volume
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


