/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1SemaphoreHolding struct for IoArgoprojWorkflowV1alpha1SemaphoreHolding
type IoArgoprojWorkflowV1alpha1SemaphoreHolding struct {
	// Holders stores the list of current holder names in the io.argoproj.workflow.v1alpha1.
	Holders *[]string `json:"holders,omitempty"`
	// Semaphore stores the semaphore name.
	Semaphore *string `json:"semaphore,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1SemaphoreHolding instantiates a new IoArgoprojWorkflowV1alpha1SemaphoreHolding object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1SemaphoreHolding() *IoArgoprojWorkflowV1alpha1SemaphoreHolding {
	this := IoArgoprojWorkflowV1alpha1SemaphoreHolding{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1SemaphoreHoldingWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1SemaphoreHolding object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1SemaphoreHoldingWithDefaults() *IoArgoprojWorkflowV1alpha1SemaphoreHolding {
	this := IoArgoprojWorkflowV1alpha1SemaphoreHolding{}
	return &this
}

// GetHolders returns the Holders field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) GetHolders() []string {
	if o == nil || o.Holders == nil {
		var ret []string
		return ret
	}
	return *o.Holders
}

// GetHoldersOk returns a tuple with the Holders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) GetHoldersOk() (*[]string, bool) {
	if o == nil || o.Holders == nil {
		return nil, false
	}
	return o.Holders, true
}

// HasHolders returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) HasHolders() bool {
	if o != nil && o.Holders != nil {
		return true
	}

	return false
}

// SetHolders gets a reference to the given []string and assigns it to the Holders field.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) SetHolders(v []string) {
	o.Holders = &v
}

// GetSemaphore returns the Semaphore field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) GetSemaphore() string {
	if o == nil || o.Semaphore == nil {
		var ret string
		return ret
	}
	return *o.Semaphore
}

// GetSemaphoreOk returns a tuple with the Semaphore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) GetSemaphoreOk() (*string, bool) {
	if o == nil || o.Semaphore == nil {
		return nil, false
	}
	return o.Semaphore, true
}

// HasSemaphore returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) HasSemaphore() bool {
	if o != nil && o.Semaphore != nil {
		return true
	}

	return false
}

// SetSemaphore gets a reference to the given string and assigns it to the Semaphore field.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreHolding) SetSemaphore(v string) {
	o.Semaphore = &v
}

func (o IoArgoprojWorkflowV1alpha1SemaphoreHolding) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Holders != nil {
		toSerialize["holders"] = o.Holders
	}
	if o.Semaphore != nil {
		toSerialize["semaphore"] = o.Semaphore
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding struct {
	value *IoArgoprojWorkflowV1alpha1SemaphoreHolding
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding) Get() *IoArgoprojWorkflowV1alpha1SemaphoreHolding {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding) Set(val *IoArgoprojWorkflowV1alpha1SemaphoreHolding) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1SemaphoreHolding(val *IoArgoprojWorkflowV1alpha1SemaphoreHolding) *NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding {
	return &NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1SemaphoreHolding) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


