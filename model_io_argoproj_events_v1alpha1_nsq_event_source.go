/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1NSQEventSource struct for IoArgoprojEventsV1alpha1NSQEventSource
type IoArgoprojEventsV1alpha1NSQEventSource struct {
	Channel *string `json:"channel,omitempty"`
	ConnectionBackoff *IoArgoprojEventsV1alpha1Backoff `json:"connectionBackoff,omitempty"`
	HostAddress *string `json:"hostAddress,omitempty"`
	JsonBody *bool `json:"jsonBody,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Tls *IoArgoprojEventsV1alpha1TLSConfig `json:"tls,omitempty"`
	// Topic to subscribe to.
	Topic *string `json:"topic,omitempty"`
}

// NewIoArgoprojEventsV1alpha1NSQEventSource instantiates a new IoArgoprojEventsV1alpha1NSQEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1NSQEventSource() *IoArgoprojEventsV1alpha1NSQEventSource {
	this := IoArgoprojEventsV1alpha1NSQEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1NSQEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1NSQEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1NSQEventSourceWithDefaults() *IoArgoprojEventsV1alpha1NSQEventSource {
	this := IoArgoprojEventsV1alpha1NSQEventSource{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetChannel() string {
	if o == nil || o.Channel == nil {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetChannelOk() (*string, bool) {
	if o == nil || o.Channel == nil {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasChannel() bool {
	if o != nil && o.Channel != nil {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetChannel(v string) {
	o.Channel = &v
}

// GetConnectionBackoff returns the ConnectionBackoff field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetConnectionBackoff() IoArgoprojEventsV1alpha1Backoff {
	if o == nil || o.ConnectionBackoff == nil {
		var ret IoArgoprojEventsV1alpha1Backoff
		return ret
	}
	return *o.ConnectionBackoff
}

// GetConnectionBackoffOk returns a tuple with the ConnectionBackoff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetConnectionBackoffOk() (*IoArgoprojEventsV1alpha1Backoff, bool) {
	if o == nil || o.ConnectionBackoff == nil {
		return nil, false
	}
	return o.ConnectionBackoff, true
}

// HasConnectionBackoff returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasConnectionBackoff() bool {
	if o != nil && o.ConnectionBackoff != nil {
		return true
	}

	return false
}

// SetConnectionBackoff gets a reference to the given IoArgoprojEventsV1alpha1Backoff and assigns it to the ConnectionBackoff field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetConnectionBackoff(v IoArgoprojEventsV1alpha1Backoff) {
	o.ConnectionBackoff = &v
}

// GetHostAddress returns the HostAddress field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetHostAddress() string {
	if o == nil || o.HostAddress == nil {
		var ret string
		return ret
	}
	return *o.HostAddress
}

// GetHostAddressOk returns a tuple with the HostAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetHostAddressOk() (*string, bool) {
	if o == nil || o.HostAddress == nil {
		return nil, false
	}
	return o.HostAddress, true
}

// HasHostAddress returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasHostAddress() bool {
	if o != nil && o.HostAddress != nil {
		return true
	}

	return false
}

// SetHostAddress gets a reference to the given string and assigns it to the HostAddress field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetHostAddress(v string) {
	o.HostAddress = &v
}

// GetJsonBody returns the JsonBody field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetJsonBody() bool {
	if o == nil || o.JsonBody == nil {
		var ret bool
		return ret
	}
	return *o.JsonBody
}

// GetJsonBodyOk returns a tuple with the JsonBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetJsonBodyOk() (*bool, bool) {
	if o == nil || o.JsonBody == nil {
		return nil, false
	}
	return o.JsonBody, true
}

// HasJsonBody returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasJsonBody() bool {
	if o != nil && o.JsonBody != nil {
		return true
	}

	return false
}

// SetJsonBody gets a reference to the given bool and assigns it to the JsonBody field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetJsonBody(v bool) {
	o.JsonBody = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetTls() IoArgoprojEventsV1alpha1TLSConfig {
	if o == nil || o.Tls == nil {
		var ret IoArgoprojEventsV1alpha1TLSConfig
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetTlsOk() (*IoArgoprojEventsV1alpha1TLSConfig, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given IoArgoprojEventsV1alpha1TLSConfig and assigns it to the Tls field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetTls(v IoArgoprojEventsV1alpha1TLSConfig) {
	o.Tls = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetTopic() string {
	if o == nil || o.Topic == nil {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) GetTopicOk() (*string, bool) {
	if o == nil || o.Topic == nil {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) HasTopic() bool {
	if o != nil && o.Topic != nil {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *IoArgoprojEventsV1alpha1NSQEventSource) SetTopic(v string) {
	o.Topic = &v
}

func (o IoArgoprojEventsV1alpha1NSQEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Channel != nil {
		toSerialize["channel"] = o.Channel
	}
	if o.ConnectionBackoff != nil {
		toSerialize["connectionBackoff"] = o.ConnectionBackoff
	}
	if o.HostAddress != nil {
		toSerialize["hostAddress"] = o.HostAddress
	}
	if o.JsonBody != nil {
		toSerialize["jsonBody"] = o.JsonBody
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	if o.Topic != nil {
		toSerialize["topic"] = o.Topic
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1NSQEventSource struct {
	value *IoArgoprojEventsV1alpha1NSQEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1NSQEventSource) Get() *IoArgoprojEventsV1alpha1NSQEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1NSQEventSource) Set(val *IoArgoprojEventsV1alpha1NSQEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1NSQEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1NSQEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1NSQEventSource(val *IoArgoprojEventsV1alpha1NSQEventSource) *NullableIoArgoprojEventsV1alpha1NSQEventSource {
	return &NullableIoArgoprojEventsV1alpha1NSQEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1NSQEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1NSQEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


