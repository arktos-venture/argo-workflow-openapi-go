/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1Affinity Affinity is a group of affinity scheduling rules.
type IoK8sApiCoreV1Affinity struct {
	NodeAffinity *IoK8sApiCoreV1NodeAffinity `json:"nodeAffinity,omitempty"`
	PodAffinity *IoK8sApiCoreV1PodAffinity `json:"podAffinity,omitempty"`
	PodAntiAffinity *IoK8sApiCoreV1PodAntiAffinity `json:"podAntiAffinity,omitempty"`
}

// NewIoK8sApiCoreV1Affinity instantiates a new IoK8sApiCoreV1Affinity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1Affinity() *IoK8sApiCoreV1Affinity {
	this := IoK8sApiCoreV1Affinity{}
	return &this
}

// NewIoK8sApiCoreV1AffinityWithDefaults instantiates a new IoK8sApiCoreV1Affinity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1AffinityWithDefaults() *IoK8sApiCoreV1Affinity {
	this := IoK8sApiCoreV1Affinity{}
	return &this
}

// GetNodeAffinity returns the NodeAffinity field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Affinity) GetNodeAffinity() IoK8sApiCoreV1NodeAffinity {
	if o == nil || o.NodeAffinity == nil {
		var ret IoK8sApiCoreV1NodeAffinity
		return ret
	}
	return *o.NodeAffinity
}

// GetNodeAffinityOk returns a tuple with the NodeAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Affinity) GetNodeAffinityOk() (*IoK8sApiCoreV1NodeAffinity, bool) {
	if o == nil || o.NodeAffinity == nil {
		return nil, false
	}
	return o.NodeAffinity, true
}

// HasNodeAffinity returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Affinity) HasNodeAffinity() bool {
	if o != nil && o.NodeAffinity != nil {
		return true
	}

	return false
}

// SetNodeAffinity gets a reference to the given IoK8sApiCoreV1NodeAffinity and assigns it to the NodeAffinity field.
func (o *IoK8sApiCoreV1Affinity) SetNodeAffinity(v IoK8sApiCoreV1NodeAffinity) {
	o.NodeAffinity = &v
}

// GetPodAffinity returns the PodAffinity field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Affinity) GetPodAffinity() IoK8sApiCoreV1PodAffinity {
	if o == nil || o.PodAffinity == nil {
		var ret IoK8sApiCoreV1PodAffinity
		return ret
	}
	return *o.PodAffinity
}

// GetPodAffinityOk returns a tuple with the PodAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Affinity) GetPodAffinityOk() (*IoK8sApiCoreV1PodAffinity, bool) {
	if o == nil || o.PodAffinity == nil {
		return nil, false
	}
	return o.PodAffinity, true
}

// HasPodAffinity returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Affinity) HasPodAffinity() bool {
	if o != nil && o.PodAffinity != nil {
		return true
	}

	return false
}

// SetPodAffinity gets a reference to the given IoK8sApiCoreV1PodAffinity and assigns it to the PodAffinity field.
func (o *IoK8sApiCoreV1Affinity) SetPodAffinity(v IoK8sApiCoreV1PodAffinity) {
	o.PodAffinity = &v
}

// GetPodAntiAffinity returns the PodAntiAffinity field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Affinity) GetPodAntiAffinity() IoK8sApiCoreV1PodAntiAffinity {
	if o == nil || o.PodAntiAffinity == nil {
		var ret IoK8sApiCoreV1PodAntiAffinity
		return ret
	}
	return *o.PodAntiAffinity
}

// GetPodAntiAffinityOk returns a tuple with the PodAntiAffinity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Affinity) GetPodAntiAffinityOk() (*IoK8sApiCoreV1PodAntiAffinity, bool) {
	if o == nil || o.PodAntiAffinity == nil {
		return nil, false
	}
	return o.PodAntiAffinity, true
}

// HasPodAntiAffinity returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Affinity) HasPodAntiAffinity() bool {
	if o != nil && o.PodAntiAffinity != nil {
		return true
	}

	return false
}

// SetPodAntiAffinity gets a reference to the given IoK8sApiCoreV1PodAntiAffinity and assigns it to the PodAntiAffinity field.
func (o *IoK8sApiCoreV1Affinity) SetPodAntiAffinity(v IoK8sApiCoreV1PodAntiAffinity) {
	o.PodAntiAffinity = &v
}

func (o IoK8sApiCoreV1Affinity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NodeAffinity != nil {
		toSerialize["nodeAffinity"] = o.NodeAffinity
	}
	if o.PodAffinity != nil {
		toSerialize["podAffinity"] = o.PodAffinity
	}
	if o.PodAntiAffinity != nil {
		toSerialize["podAntiAffinity"] = o.PodAntiAffinity
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1Affinity struct {
	value *IoK8sApiCoreV1Affinity
	isSet bool
}

func (v NullableIoK8sApiCoreV1Affinity) Get() *IoK8sApiCoreV1Affinity {
	return v.value
}

func (v *NullableIoK8sApiCoreV1Affinity) Set(val *IoK8sApiCoreV1Affinity) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1Affinity) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1Affinity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1Affinity(val *IoK8sApiCoreV1Affinity) *NullableIoK8sApiCoreV1Affinity {
	return &NullableIoK8sApiCoreV1Affinity{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1Affinity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1Affinity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


