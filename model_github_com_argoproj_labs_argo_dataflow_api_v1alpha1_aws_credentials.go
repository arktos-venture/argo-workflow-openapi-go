/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials
type GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials struct {
	AccessKeyId *IoK8sApiCoreV1SecretKeySelector `json:"accessKeyId,omitempty"`
	SecretAccessKey *IoK8sApiCoreV1SecretKeySelector `json:"secretAccessKey,omitempty"`
	SessionToken *IoK8sApiCoreV1SecretKeySelector `json:"sessionToken,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials() *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentialsWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentialsWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) GetAccessKeyId() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.AccessKeyId == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) GetAccessKeyIdOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.AccessKeyId == nil {
		return nil, false
	}
	return o.AccessKeyId, true
}

// HasAccessKeyId returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) HasAccessKeyId() bool {
	if o != nil && o.AccessKeyId != nil {
		return true
	}

	return false
}

// SetAccessKeyId gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the AccessKeyId field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) SetAccessKeyId(v IoK8sApiCoreV1SecretKeySelector) {
	o.AccessKeyId = &v
}

// GetSecretAccessKey returns the SecretAccessKey field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) GetSecretAccessKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SecretAccessKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) GetSecretAccessKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SecretAccessKey == nil {
		return nil, false
	}
	return o.SecretAccessKey, true
}

// HasSecretAccessKey returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) HasSecretAccessKey() bool {
	if o != nil && o.SecretAccessKey != nil {
		return true
	}

	return false
}

// SetSecretAccessKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SecretAccessKey field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) SetSecretAccessKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.SecretAccessKey = &v
}

// GetSessionToken returns the SessionToken field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) GetSessionToken() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SessionToken == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SessionToken
}

// GetSessionTokenOk returns a tuple with the SessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) GetSessionTokenOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SessionToken == nil {
		return nil, false
	}
	return o.SessionToken, true
}

// HasSessionToken returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) HasSessionToken() bool {
	if o != nil && o.SessionToken != nil {
		return true
	}

	return false
}

// SetSessionToken gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SessionToken field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) SetSessionToken(v IoK8sApiCoreV1SecretKeySelector) {
	o.SessionToken = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKeyId != nil {
		toSerialize["accessKeyId"] = o.AccessKeyId
	}
	if o.SecretAccessKey != nil {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	if o.SessionToken != nil {
		toSerialize["sessionToken"] = o.SessionToken
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1AWSCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


