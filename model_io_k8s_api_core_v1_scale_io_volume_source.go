/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1ScaleIOVolumeSource ScaleIOVolumeSource represents a persistent ScaleIO volume
type IoK8sApiCoreV1ScaleIOVolumeSource struct {
	// Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".
	FsType *string `json:"fsType,omitempty"`
	// The host address of the ScaleIO API Gateway.
	Gateway string `json:"gateway"`
	// The name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `json:"protectionDomain,omitempty"`
	// Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `json:"readOnly,omitempty"`
	SecretRef IoK8sApiCoreV1LocalObjectReference `json:"secretRef"`
	// Flag to enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `json:"sslEnabled,omitempty"`
	// Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
	StorageMode *string `json:"storageMode,omitempty"`
	// The ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `json:"storagePool,omitempty"`
	// The name of the storage system as configured in ScaleIO.
	System string `json:"system"`
	// The name of a volume already created in the ScaleIO system that is associated with this volume source.
	VolumeName *string `json:"volumeName,omitempty"`
}

// NewIoK8sApiCoreV1ScaleIOVolumeSource instantiates a new IoK8sApiCoreV1ScaleIOVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1ScaleIOVolumeSource(gateway string, secretRef IoK8sApiCoreV1LocalObjectReference, system string) *IoK8sApiCoreV1ScaleIOVolumeSource {
	this := IoK8sApiCoreV1ScaleIOVolumeSource{}
	this.Gateway = gateway
	this.SecretRef = secretRef
	this.System = system
	return &this
}

// NewIoK8sApiCoreV1ScaleIOVolumeSourceWithDefaults instantiates a new IoK8sApiCoreV1ScaleIOVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1ScaleIOVolumeSourceWithDefaults() *IoK8sApiCoreV1ScaleIOVolumeSource {
	this := IoK8sApiCoreV1ScaleIOVolumeSource{}
	return &this
}

// GetFsType returns the FsType field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetFsType() string {
	if o == nil || o.FsType == nil {
		var ret string
		return ret
	}
	return *o.FsType
}

// GetFsTypeOk returns a tuple with the FsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetFsTypeOk() (*string, bool) {
	if o == nil || o.FsType == nil {
		return nil, false
	}
	return o.FsType, true
}

// HasFsType returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasFsType() bool {
	if o != nil && o.FsType != nil {
		return true
	}

	return false
}

// SetFsType gets a reference to the given string and assigns it to the FsType field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetFsType(v string) {
	o.FsType = &v
}

// GetGateway returns the Gateway field value
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetGateway() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetGatewayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Gateway, true
}

// SetGateway sets field value
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetGateway(v string) {
	o.Gateway = v
}

// GetProtectionDomain returns the ProtectionDomain field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetProtectionDomain() string {
	if o == nil || o.ProtectionDomain == nil {
		var ret string
		return ret
	}
	return *o.ProtectionDomain
}

// GetProtectionDomainOk returns a tuple with the ProtectionDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetProtectionDomainOk() (*string, bool) {
	if o == nil || o.ProtectionDomain == nil {
		return nil, false
	}
	return o.ProtectionDomain, true
}

// HasProtectionDomain returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasProtectionDomain() bool {
	if o != nil && o.ProtectionDomain != nil {
		return true
	}

	return false
}

// SetProtectionDomain gets a reference to the given string and assigns it to the ProtectionDomain field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetProtectionDomain(v string) {
	o.ProtectionDomain = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetSecretRef returns the SecretRef field value
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetSecretRef() IoK8sApiCoreV1LocalObjectReference {
	if o == nil {
		var ret IoK8sApiCoreV1LocalObjectReference
		return ret
	}

	return o.SecretRef
}

// GetSecretRefOk returns a tuple with the SecretRef field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetSecretRefOk() (*IoK8sApiCoreV1LocalObjectReference, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SecretRef, true
}

// SetSecretRef sets field value
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetSecretRef(v IoK8sApiCoreV1LocalObjectReference) {
	o.SecretRef = v
}

// GetSslEnabled returns the SslEnabled field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetSslEnabled() bool {
	if o == nil || o.SslEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SslEnabled
}

// GetSslEnabledOk returns a tuple with the SslEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetSslEnabledOk() (*bool, bool) {
	if o == nil || o.SslEnabled == nil {
		return nil, false
	}
	return o.SslEnabled, true
}

// HasSslEnabled returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasSslEnabled() bool {
	if o != nil && o.SslEnabled != nil {
		return true
	}

	return false
}

// SetSslEnabled gets a reference to the given bool and assigns it to the SslEnabled field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetSslEnabled(v bool) {
	o.SslEnabled = &v
}

// GetStorageMode returns the StorageMode field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetStorageMode() string {
	if o == nil || o.StorageMode == nil {
		var ret string
		return ret
	}
	return *o.StorageMode
}

// GetStorageModeOk returns a tuple with the StorageMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetStorageModeOk() (*string, bool) {
	if o == nil || o.StorageMode == nil {
		return nil, false
	}
	return o.StorageMode, true
}

// HasStorageMode returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasStorageMode() bool {
	if o != nil && o.StorageMode != nil {
		return true
	}

	return false
}

// SetStorageMode gets a reference to the given string and assigns it to the StorageMode field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetStorageMode(v string) {
	o.StorageMode = &v
}

// GetStoragePool returns the StoragePool field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetStoragePool() string {
	if o == nil || o.StoragePool == nil {
		var ret string
		return ret
	}
	return *o.StoragePool
}

// GetStoragePoolOk returns a tuple with the StoragePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetStoragePoolOk() (*string, bool) {
	if o == nil || o.StoragePool == nil {
		return nil, false
	}
	return o.StoragePool, true
}

// HasStoragePool returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasStoragePool() bool {
	if o != nil && o.StoragePool != nil {
		return true
	}

	return false
}

// SetStoragePool gets a reference to the given string and assigns it to the StoragePool field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetStoragePool(v string) {
	o.StoragePool = &v
}

// GetSystem returns the System field value
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetSystem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.System
}

// GetSystemOk returns a tuple with the System field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetSystemOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.System, true
}

// SetSystem sets field value
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetSystem(v string) {
	o.System = v
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetVolumeName() string {
	if o == nil || o.VolumeName == nil {
		var ret string
		return ret
	}
	return *o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) GetVolumeNameOk() (*string, bool) {
	if o == nil || o.VolumeName == nil {
		return nil, false
	}
	return o.VolumeName, true
}

// HasVolumeName returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) HasVolumeName() bool {
	if o != nil && o.VolumeName != nil {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given string and assigns it to the VolumeName field.
func (o *IoK8sApiCoreV1ScaleIOVolumeSource) SetVolumeName(v string) {
	o.VolumeName = &v
}

func (o IoK8sApiCoreV1ScaleIOVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FsType != nil {
		toSerialize["fsType"] = o.FsType
	}
	if true {
		toSerialize["gateway"] = o.Gateway
	}
	if o.ProtectionDomain != nil {
		toSerialize["protectionDomain"] = o.ProtectionDomain
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if true {
		toSerialize["secretRef"] = o.SecretRef
	}
	if o.SslEnabled != nil {
		toSerialize["sslEnabled"] = o.SslEnabled
	}
	if o.StorageMode != nil {
		toSerialize["storageMode"] = o.StorageMode
	}
	if o.StoragePool != nil {
		toSerialize["storagePool"] = o.StoragePool
	}
	if true {
		toSerialize["system"] = o.System
	}
	if o.VolumeName != nil {
		toSerialize["volumeName"] = o.VolumeName
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1ScaleIOVolumeSource struct {
	value *IoK8sApiCoreV1ScaleIOVolumeSource
	isSet bool
}

func (v NullableIoK8sApiCoreV1ScaleIOVolumeSource) Get() *IoK8sApiCoreV1ScaleIOVolumeSource {
	return v.value
}

func (v *NullableIoK8sApiCoreV1ScaleIOVolumeSource) Set(val *IoK8sApiCoreV1ScaleIOVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1ScaleIOVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1ScaleIOVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1ScaleIOVolumeSource(val *IoK8sApiCoreV1ScaleIOVolumeSource) *NullableIoK8sApiCoreV1ScaleIOVolumeSource {
	return &NullableIoK8sApiCoreV1ScaleIOVolumeSource{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1ScaleIOVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1ScaleIOVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


