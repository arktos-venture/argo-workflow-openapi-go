/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1PulsarEventSource struct for IoArgoprojEventsV1alpha1PulsarEventSource
type IoArgoprojEventsV1alpha1PulsarEventSource struct {
	ConnectionBackoff *IoArgoprojEventsV1alpha1Backoff `json:"connectionBackoff,omitempty"`
	JsonBody *bool `json:"jsonBody,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Tls *IoArgoprojEventsV1alpha1TLSConfig `json:"tls,omitempty"`
	TlsAllowInsecureConnection *bool `json:"tlsAllowInsecureConnection,omitempty"`
	TlsTrustCertsSecret *IoK8sApiCoreV1SecretKeySelector `json:"tlsTrustCertsSecret,omitempty"`
	TlsValidateHostname *bool `json:"tlsValidateHostname,omitempty"`
	Topics *[]string `json:"topics,omitempty"`
	Type *string `json:"type,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewIoArgoprojEventsV1alpha1PulsarEventSource instantiates a new IoArgoprojEventsV1alpha1PulsarEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1PulsarEventSource() *IoArgoprojEventsV1alpha1PulsarEventSource {
	this := IoArgoprojEventsV1alpha1PulsarEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1PulsarEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1PulsarEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1PulsarEventSourceWithDefaults() *IoArgoprojEventsV1alpha1PulsarEventSource {
	this := IoArgoprojEventsV1alpha1PulsarEventSource{}
	return &this
}

// GetConnectionBackoff returns the ConnectionBackoff field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetConnectionBackoff() IoArgoprojEventsV1alpha1Backoff {
	if o == nil || o.ConnectionBackoff == nil {
		var ret IoArgoprojEventsV1alpha1Backoff
		return ret
	}
	return *o.ConnectionBackoff
}

// GetConnectionBackoffOk returns a tuple with the ConnectionBackoff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetConnectionBackoffOk() (*IoArgoprojEventsV1alpha1Backoff, bool) {
	if o == nil || o.ConnectionBackoff == nil {
		return nil, false
	}
	return o.ConnectionBackoff, true
}

// HasConnectionBackoff returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasConnectionBackoff() bool {
	if o != nil && o.ConnectionBackoff != nil {
		return true
	}

	return false
}

// SetConnectionBackoff gets a reference to the given IoArgoprojEventsV1alpha1Backoff and assigns it to the ConnectionBackoff field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetConnectionBackoff(v IoArgoprojEventsV1alpha1Backoff) {
	o.ConnectionBackoff = &v
}

// GetJsonBody returns the JsonBody field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetJsonBody() bool {
	if o == nil || o.JsonBody == nil {
		var ret bool
		return ret
	}
	return *o.JsonBody
}

// GetJsonBodyOk returns a tuple with the JsonBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetJsonBodyOk() (*bool, bool) {
	if o == nil || o.JsonBody == nil {
		return nil, false
	}
	return o.JsonBody, true
}

// HasJsonBody returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasJsonBody() bool {
	if o != nil && o.JsonBody != nil {
		return true
	}

	return false
}

// SetJsonBody gets a reference to the given bool and assigns it to the JsonBody field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetJsonBody(v bool) {
	o.JsonBody = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTls() IoArgoprojEventsV1alpha1TLSConfig {
	if o == nil || o.Tls == nil {
		var ret IoArgoprojEventsV1alpha1TLSConfig
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsOk() (*IoArgoprojEventsV1alpha1TLSConfig, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given IoArgoprojEventsV1alpha1TLSConfig and assigns it to the Tls field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetTls(v IoArgoprojEventsV1alpha1TLSConfig) {
	o.Tls = &v
}

// GetTlsAllowInsecureConnection returns the TlsAllowInsecureConnection field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsAllowInsecureConnection() bool {
	if o == nil || o.TlsAllowInsecureConnection == nil {
		var ret bool
		return ret
	}
	return *o.TlsAllowInsecureConnection
}

// GetTlsAllowInsecureConnectionOk returns a tuple with the TlsAllowInsecureConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsAllowInsecureConnectionOk() (*bool, bool) {
	if o == nil || o.TlsAllowInsecureConnection == nil {
		return nil, false
	}
	return o.TlsAllowInsecureConnection, true
}

// HasTlsAllowInsecureConnection returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasTlsAllowInsecureConnection() bool {
	if o != nil && o.TlsAllowInsecureConnection != nil {
		return true
	}

	return false
}

// SetTlsAllowInsecureConnection gets a reference to the given bool and assigns it to the TlsAllowInsecureConnection field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetTlsAllowInsecureConnection(v bool) {
	o.TlsAllowInsecureConnection = &v
}

// GetTlsTrustCertsSecret returns the TlsTrustCertsSecret field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsTrustCertsSecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.TlsTrustCertsSecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.TlsTrustCertsSecret
}

// GetTlsTrustCertsSecretOk returns a tuple with the TlsTrustCertsSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsTrustCertsSecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.TlsTrustCertsSecret == nil {
		return nil, false
	}
	return o.TlsTrustCertsSecret, true
}

// HasTlsTrustCertsSecret returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasTlsTrustCertsSecret() bool {
	if o != nil && o.TlsTrustCertsSecret != nil {
		return true
	}

	return false
}

// SetTlsTrustCertsSecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the TlsTrustCertsSecret field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetTlsTrustCertsSecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.TlsTrustCertsSecret = &v
}

// GetTlsValidateHostname returns the TlsValidateHostname field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsValidateHostname() bool {
	if o == nil || o.TlsValidateHostname == nil {
		var ret bool
		return ret
	}
	return *o.TlsValidateHostname
}

// GetTlsValidateHostnameOk returns a tuple with the TlsValidateHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTlsValidateHostnameOk() (*bool, bool) {
	if o == nil || o.TlsValidateHostname == nil {
		return nil, false
	}
	return o.TlsValidateHostname, true
}

// HasTlsValidateHostname returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasTlsValidateHostname() bool {
	if o != nil && o.TlsValidateHostname != nil {
		return true
	}

	return false
}

// SetTlsValidateHostname gets a reference to the given bool and assigns it to the TlsValidateHostname field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetTlsValidateHostname(v bool) {
	o.TlsValidateHostname = &v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTopics() []string {
	if o == nil || o.Topics == nil {
		var ret []string
		return ret
	}
	return *o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTopicsOk() (*[]string, bool) {
	if o == nil || o.Topics == nil {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasTopics() bool {
	if o != nil && o.Topics != nil {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []string and assigns it to the Topics field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetTopics(v []string) {
	o.Topics = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetType(v string) {
	o.Type = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IoArgoprojEventsV1alpha1PulsarEventSource) SetUrl(v string) {
	o.Url = &v
}

func (o IoArgoprojEventsV1alpha1PulsarEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectionBackoff != nil {
		toSerialize["connectionBackoff"] = o.ConnectionBackoff
	}
	if o.JsonBody != nil {
		toSerialize["jsonBody"] = o.JsonBody
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	if o.TlsAllowInsecureConnection != nil {
		toSerialize["tlsAllowInsecureConnection"] = o.TlsAllowInsecureConnection
	}
	if o.TlsTrustCertsSecret != nil {
		toSerialize["tlsTrustCertsSecret"] = o.TlsTrustCertsSecret
	}
	if o.TlsValidateHostname != nil {
		toSerialize["tlsValidateHostname"] = o.TlsValidateHostname
	}
	if o.Topics != nil {
		toSerialize["topics"] = o.Topics
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1PulsarEventSource struct {
	value *IoArgoprojEventsV1alpha1PulsarEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1PulsarEventSource) Get() *IoArgoprojEventsV1alpha1PulsarEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1PulsarEventSource) Set(val *IoArgoprojEventsV1alpha1PulsarEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1PulsarEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1PulsarEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1PulsarEventSource(val *IoArgoprojEventsV1alpha1PulsarEventSource) *NullableIoArgoprojEventsV1alpha1PulsarEventSource {
	return &NullableIoArgoprojEventsV1alpha1PulsarEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1PulsarEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1PulsarEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


