/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1TriggerTemplate TriggerTemplate is the template that describes trigger specification.
type IoArgoprojEventsV1alpha1TriggerTemplate struct {
	ArgoWorkflow *IoArgoprojEventsV1alpha1ArgoWorkflowTrigger `json:"argoWorkflow,omitempty"`
	AwsLambda *IoArgoprojEventsV1alpha1AWSLambdaTrigger `json:"awsLambda,omitempty"`
	AzureEventHubs *IoArgoprojEventsV1alpha1AzureEventHubsTrigger `json:"azureEventHubs,omitempty"`
	Conditions *string `json:"conditions,omitempty"`
	Custom *IoArgoprojEventsV1alpha1CustomTrigger `json:"custom,omitempty"`
	Http *IoArgoprojEventsV1alpha1HTTPTrigger `json:"http,omitempty"`
	K8s *IoArgoprojEventsV1alpha1StandardK8STrigger `json:"k8s,omitempty"`
	Kafka *IoArgoprojEventsV1alpha1KafkaTrigger `json:"kafka,omitempty"`
	Log *IoArgoprojEventsV1alpha1LogTrigger `json:"log,omitempty"`
	// Name is a unique name of the action to take.
	Name *string `json:"name,omitempty"`
	Nats *IoArgoprojEventsV1alpha1NATSTrigger `json:"nats,omitempty"`
	OpenWhisk *IoArgoprojEventsV1alpha1OpenWhiskTrigger `json:"openWhisk,omitempty"`
	Slack *IoArgoprojEventsV1alpha1SlackTrigger `json:"slack,omitempty"`
	Switch *IoArgoprojEventsV1alpha1TriggerSwitch `json:"switch,omitempty"`
}

// NewIoArgoprojEventsV1alpha1TriggerTemplate instantiates a new IoArgoprojEventsV1alpha1TriggerTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1TriggerTemplate() *IoArgoprojEventsV1alpha1TriggerTemplate {
	this := IoArgoprojEventsV1alpha1TriggerTemplate{}
	return &this
}

// NewIoArgoprojEventsV1alpha1TriggerTemplateWithDefaults instantiates a new IoArgoprojEventsV1alpha1TriggerTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1TriggerTemplateWithDefaults() *IoArgoprojEventsV1alpha1TriggerTemplate {
	this := IoArgoprojEventsV1alpha1TriggerTemplate{}
	return &this
}

// GetArgoWorkflow returns the ArgoWorkflow field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetArgoWorkflow() IoArgoprojEventsV1alpha1ArgoWorkflowTrigger {
	if o == nil || o.ArgoWorkflow == nil {
		var ret IoArgoprojEventsV1alpha1ArgoWorkflowTrigger
		return ret
	}
	return *o.ArgoWorkflow
}

// GetArgoWorkflowOk returns a tuple with the ArgoWorkflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetArgoWorkflowOk() (*IoArgoprojEventsV1alpha1ArgoWorkflowTrigger, bool) {
	if o == nil || o.ArgoWorkflow == nil {
		return nil, false
	}
	return o.ArgoWorkflow, true
}

// HasArgoWorkflow returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasArgoWorkflow() bool {
	if o != nil && o.ArgoWorkflow != nil {
		return true
	}

	return false
}

// SetArgoWorkflow gets a reference to the given IoArgoprojEventsV1alpha1ArgoWorkflowTrigger and assigns it to the ArgoWorkflow field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetArgoWorkflow(v IoArgoprojEventsV1alpha1ArgoWorkflowTrigger) {
	o.ArgoWorkflow = &v
}

// GetAwsLambda returns the AwsLambda field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetAwsLambda() IoArgoprojEventsV1alpha1AWSLambdaTrigger {
	if o == nil || o.AwsLambda == nil {
		var ret IoArgoprojEventsV1alpha1AWSLambdaTrigger
		return ret
	}
	return *o.AwsLambda
}

// GetAwsLambdaOk returns a tuple with the AwsLambda field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetAwsLambdaOk() (*IoArgoprojEventsV1alpha1AWSLambdaTrigger, bool) {
	if o == nil || o.AwsLambda == nil {
		return nil, false
	}
	return o.AwsLambda, true
}

// HasAwsLambda returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasAwsLambda() bool {
	if o != nil && o.AwsLambda != nil {
		return true
	}

	return false
}

// SetAwsLambda gets a reference to the given IoArgoprojEventsV1alpha1AWSLambdaTrigger and assigns it to the AwsLambda field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetAwsLambda(v IoArgoprojEventsV1alpha1AWSLambdaTrigger) {
	o.AwsLambda = &v
}

// GetAzureEventHubs returns the AzureEventHubs field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetAzureEventHubs() IoArgoprojEventsV1alpha1AzureEventHubsTrigger {
	if o == nil || o.AzureEventHubs == nil {
		var ret IoArgoprojEventsV1alpha1AzureEventHubsTrigger
		return ret
	}
	return *o.AzureEventHubs
}

// GetAzureEventHubsOk returns a tuple with the AzureEventHubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetAzureEventHubsOk() (*IoArgoprojEventsV1alpha1AzureEventHubsTrigger, bool) {
	if o == nil || o.AzureEventHubs == nil {
		return nil, false
	}
	return o.AzureEventHubs, true
}

// HasAzureEventHubs returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasAzureEventHubs() bool {
	if o != nil && o.AzureEventHubs != nil {
		return true
	}

	return false
}

// SetAzureEventHubs gets a reference to the given IoArgoprojEventsV1alpha1AzureEventHubsTrigger and assigns it to the AzureEventHubs field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetAzureEventHubs(v IoArgoprojEventsV1alpha1AzureEventHubsTrigger) {
	o.AzureEventHubs = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetConditions() string {
	if o == nil || o.Conditions == nil {
		var ret string
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetConditionsOk() (*string, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given string and assigns it to the Conditions field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetConditions(v string) {
	o.Conditions = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetCustom() IoArgoprojEventsV1alpha1CustomTrigger {
	if o == nil || o.Custom == nil {
		var ret IoArgoprojEventsV1alpha1CustomTrigger
		return ret
	}
	return *o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetCustomOk() (*IoArgoprojEventsV1alpha1CustomTrigger, bool) {
	if o == nil || o.Custom == nil {
		return nil, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasCustom() bool {
	if o != nil && o.Custom != nil {
		return true
	}

	return false
}

// SetCustom gets a reference to the given IoArgoprojEventsV1alpha1CustomTrigger and assigns it to the Custom field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetCustom(v IoArgoprojEventsV1alpha1CustomTrigger) {
	o.Custom = &v
}

// GetHttp returns the Http field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetHttp() IoArgoprojEventsV1alpha1HTTPTrigger {
	if o == nil || o.Http == nil {
		var ret IoArgoprojEventsV1alpha1HTTPTrigger
		return ret
	}
	return *o.Http
}

// GetHttpOk returns a tuple with the Http field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetHttpOk() (*IoArgoprojEventsV1alpha1HTTPTrigger, bool) {
	if o == nil || o.Http == nil {
		return nil, false
	}
	return o.Http, true
}

// HasHttp returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasHttp() bool {
	if o != nil && o.Http != nil {
		return true
	}

	return false
}

// SetHttp gets a reference to the given IoArgoprojEventsV1alpha1HTTPTrigger and assigns it to the Http field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetHttp(v IoArgoprojEventsV1alpha1HTTPTrigger) {
	o.Http = &v
}

// GetK8s returns the K8s field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetK8s() IoArgoprojEventsV1alpha1StandardK8STrigger {
	if o == nil || o.K8s == nil {
		var ret IoArgoprojEventsV1alpha1StandardK8STrigger
		return ret
	}
	return *o.K8s
}

// GetK8sOk returns a tuple with the K8s field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetK8sOk() (*IoArgoprojEventsV1alpha1StandardK8STrigger, bool) {
	if o == nil || o.K8s == nil {
		return nil, false
	}
	return o.K8s, true
}

// HasK8s returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasK8s() bool {
	if o != nil && o.K8s != nil {
		return true
	}

	return false
}

// SetK8s gets a reference to the given IoArgoprojEventsV1alpha1StandardK8STrigger and assigns it to the K8s field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetK8s(v IoArgoprojEventsV1alpha1StandardK8STrigger) {
	o.K8s = &v
}

// GetKafka returns the Kafka field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetKafka() IoArgoprojEventsV1alpha1KafkaTrigger {
	if o == nil || o.Kafka == nil {
		var ret IoArgoprojEventsV1alpha1KafkaTrigger
		return ret
	}
	return *o.Kafka
}

// GetKafkaOk returns a tuple with the Kafka field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetKafkaOk() (*IoArgoprojEventsV1alpha1KafkaTrigger, bool) {
	if o == nil || o.Kafka == nil {
		return nil, false
	}
	return o.Kafka, true
}

// HasKafka returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasKafka() bool {
	if o != nil && o.Kafka != nil {
		return true
	}

	return false
}

// SetKafka gets a reference to the given IoArgoprojEventsV1alpha1KafkaTrigger and assigns it to the Kafka field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetKafka(v IoArgoprojEventsV1alpha1KafkaTrigger) {
	o.Kafka = &v
}

// GetLog returns the Log field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetLog() IoArgoprojEventsV1alpha1LogTrigger {
	if o == nil || o.Log == nil {
		var ret IoArgoprojEventsV1alpha1LogTrigger
		return ret
	}
	return *o.Log
}

// GetLogOk returns a tuple with the Log field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetLogOk() (*IoArgoprojEventsV1alpha1LogTrigger, bool) {
	if o == nil || o.Log == nil {
		return nil, false
	}
	return o.Log, true
}

// HasLog returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasLog() bool {
	if o != nil && o.Log != nil {
		return true
	}

	return false
}

// SetLog gets a reference to the given IoArgoprojEventsV1alpha1LogTrigger and assigns it to the Log field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetLog(v IoArgoprojEventsV1alpha1LogTrigger) {
	o.Log = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetName(v string) {
	o.Name = &v
}

// GetNats returns the Nats field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetNats() IoArgoprojEventsV1alpha1NATSTrigger {
	if o == nil || o.Nats == nil {
		var ret IoArgoprojEventsV1alpha1NATSTrigger
		return ret
	}
	return *o.Nats
}

// GetNatsOk returns a tuple with the Nats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetNatsOk() (*IoArgoprojEventsV1alpha1NATSTrigger, bool) {
	if o == nil || o.Nats == nil {
		return nil, false
	}
	return o.Nats, true
}

// HasNats returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasNats() bool {
	if o != nil && o.Nats != nil {
		return true
	}

	return false
}

// SetNats gets a reference to the given IoArgoprojEventsV1alpha1NATSTrigger and assigns it to the Nats field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetNats(v IoArgoprojEventsV1alpha1NATSTrigger) {
	o.Nats = &v
}

// GetOpenWhisk returns the OpenWhisk field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetOpenWhisk() IoArgoprojEventsV1alpha1OpenWhiskTrigger {
	if o == nil || o.OpenWhisk == nil {
		var ret IoArgoprojEventsV1alpha1OpenWhiskTrigger
		return ret
	}
	return *o.OpenWhisk
}

// GetOpenWhiskOk returns a tuple with the OpenWhisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetOpenWhiskOk() (*IoArgoprojEventsV1alpha1OpenWhiskTrigger, bool) {
	if o == nil || o.OpenWhisk == nil {
		return nil, false
	}
	return o.OpenWhisk, true
}

// HasOpenWhisk returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasOpenWhisk() bool {
	if o != nil && o.OpenWhisk != nil {
		return true
	}

	return false
}

// SetOpenWhisk gets a reference to the given IoArgoprojEventsV1alpha1OpenWhiskTrigger and assigns it to the OpenWhisk field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetOpenWhisk(v IoArgoprojEventsV1alpha1OpenWhiskTrigger) {
	o.OpenWhisk = &v
}

// GetSlack returns the Slack field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetSlack() IoArgoprojEventsV1alpha1SlackTrigger {
	if o == nil || o.Slack == nil {
		var ret IoArgoprojEventsV1alpha1SlackTrigger
		return ret
	}
	return *o.Slack
}

// GetSlackOk returns a tuple with the Slack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetSlackOk() (*IoArgoprojEventsV1alpha1SlackTrigger, bool) {
	if o == nil || o.Slack == nil {
		return nil, false
	}
	return o.Slack, true
}

// HasSlack returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasSlack() bool {
	if o != nil && o.Slack != nil {
		return true
	}

	return false
}

// SetSlack gets a reference to the given IoArgoprojEventsV1alpha1SlackTrigger and assigns it to the Slack field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetSlack(v IoArgoprojEventsV1alpha1SlackTrigger) {
	o.Slack = &v
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetSwitch() IoArgoprojEventsV1alpha1TriggerSwitch {
	if o == nil || o.Switch == nil {
		var ret IoArgoprojEventsV1alpha1TriggerSwitch
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) GetSwitchOk() (*IoArgoprojEventsV1alpha1TriggerSwitch, bool) {
	if o == nil || o.Switch == nil {
		return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) HasSwitch() bool {
	if o != nil && o.Switch != nil {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given IoArgoprojEventsV1alpha1TriggerSwitch and assigns it to the Switch field.
func (o *IoArgoprojEventsV1alpha1TriggerTemplate) SetSwitch(v IoArgoprojEventsV1alpha1TriggerSwitch) {
	o.Switch = &v
}

func (o IoArgoprojEventsV1alpha1TriggerTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArgoWorkflow != nil {
		toSerialize["argoWorkflow"] = o.ArgoWorkflow
	}
	if o.AwsLambda != nil {
		toSerialize["awsLambda"] = o.AwsLambda
	}
	if o.AzureEventHubs != nil {
		toSerialize["azureEventHubs"] = o.AzureEventHubs
	}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Custom != nil {
		toSerialize["custom"] = o.Custom
	}
	if o.Http != nil {
		toSerialize["http"] = o.Http
	}
	if o.K8s != nil {
		toSerialize["k8s"] = o.K8s
	}
	if o.Kafka != nil {
		toSerialize["kafka"] = o.Kafka
	}
	if o.Log != nil {
		toSerialize["log"] = o.Log
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Nats != nil {
		toSerialize["nats"] = o.Nats
	}
	if o.OpenWhisk != nil {
		toSerialize["openWhisk"] = o.OpenWhisk
	}
	if o.Slack != nil {
		toSerialize["slack"] = o.Slack
	}
	if o.Switch != nil {
		toSerialize["switch"] = o.Switch
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1TriggerTemplate struct {
	value *IoArgoprojEventsV1alpha1TriggerTemplate
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1TriggerTemplate) Get() *IoArgoprojEventsV1alpha1TriggerTemplate {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1TriggerTemplate) Set(val *IoArgoprojEventsV1alpha1TriggerTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1TriggerTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1TriggerTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1TriggerTemplate(val *IoArgoprojEventsV1alpha1TriggerTemplate) *NullableIoArgoprojEventsV1alpha1TriggerTemplate {
	return &NullableIoArgoprojEventsV1alpha1TriggerTemplate{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1TriggerTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1TriggerTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


