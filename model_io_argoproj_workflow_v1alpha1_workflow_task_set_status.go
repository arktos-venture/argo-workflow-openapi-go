/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus struct for IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus
type IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus struct {
	Nodes *map[string]IoArgoprojWorkflowV1alpha1NodeResult `json:"nodes,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus instantiates a new IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus() *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus {
	this := IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatusWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatusWithDefaults() *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus {
	this := IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus{}
	return &this
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) GetNodes() map[string]IoArgoprojWorkflowV1alpha1NodeResult {
	if o == nil || o.Nodes == nil {
		var ret map[string]IoArgoprojWorkflowV1alpha1NodeResult
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) GetNodesOk() (*map[string]IoArgoprojWorkflowV1alpha1NodeResult, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given map[string]IoArgoprojWorkflowV1alpha1NodeResult and assigns it to the Nodes field.
func (o *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) SetNodes(v map[string]IoArgoprojWorkflowV1alpha1NodeResult) {
	o.Nodes = &v
}

func (o IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus struct {
	value *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) Get() *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) Set(val *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus(val *IoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) *NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus {
	return &NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1WorkflowTaskSetStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


