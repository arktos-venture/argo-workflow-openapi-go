/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1HTTPArtifact HTTPArtifact allows an file served on HTTP to be placed as an input artifact in a container
type IoArgoprojWorkflowV1alpha1HTTPArtifact struct {
	// Headers are an optional list of headers to send with HTTP requests for artifacts
	Headers *[]IoArgoprojWorkflowV1alpha1Header `json:"headers,omitempty"`
	// URL of the artifact
	Url string `json:"url"`
}

// NewIoArgoprojWorkflowV1alpha1HTTPArtifact instantiates a new IoArgoprojWorkflowV1alpha1HTTPArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1HTTPArtifact(url string) *IoArgoprojWorkflowV1alpha1HTTPArtifact {
	this := IoArgoprojWorkflowV1alpha1HTTPArtifact{}
	this.Url = url
	return &this
}

// NewIoArgoprojWorkflowV1alpha1HTTPArtifactWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1HTTPArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1HTTPArtifactWithDefaults() *IoArgoprojWorkflowV1alpha1HTTPArtifact {
	this := IoArgoprojWorkflowV1alpha1HTTPArtifact{}
	return &this
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) GetHeaders() []IoArgoprojWorkflowV1alpha1Header {
	if o == nil || o.Headers == nil {
		var ret []IoArgoprojWorkflowV1alpha1Header
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) GetHeadersOk() (*[]IoArgoprojWorkflowV1alpha1Header, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []IoArgoprojWorkflowV1alpha1Header and assigns it to the Headers field.
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) SetHeaders(v []IoArgoprojWorkflowV1alpha1Header) {
	o.Headers = &v
}

// GetUrl returns the Url field value
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *IoArgoprojWorkflowV1alpha1HTTPArtifact) SetUrl(v string) {
	o.Url = v
}

func (o IoArgoprojWorkflowV1alpha1HTTPArtifact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1HTTPArtifact struct {
	value *IoArgoprojWorkflowV1alpha1HTTPArtifact
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPArtifact) Get() *IoArgoprojWorkflowV1alpha1HTTPArtifact {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPArtifact) Set(val *IoArgoprojWorkflowV1alpha1HTTPArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1HTTPArtifact(val *IoArgoprojWorkflowV1alpha1HTTPArtifact) *NullableIoArgoprojWorkflowV1alpha1HTTPArtifact {
	return &NullableIoArgoprojWorkflowV1alpha1HTTPArtifact{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTPArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTPArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


