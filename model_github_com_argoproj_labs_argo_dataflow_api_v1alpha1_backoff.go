/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff
type GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff struct {
	FactorPercentage *int32 `json:"FactorPercentage,omitempty"`
	Cap *IoK8sApimachineryPkgApisMetaV1Duration `json:"cap,omitempty"`
	Duration *IoK8sApimachineryPkgApisMetaV1Duration `json:"duration,omitempty"`
	JitterPercentage *int32 `json:"jitterPercentage,omitempty"`
	Steps *string `json:"steps,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1BackoffWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1BackoffWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff{}
	return &this
}

// GetFactorPercentage returns the FactorPercentage field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetFactorPercentage() int32 {
	if o == nil || o.FactorPercentage == nil {
		var ret int32
		return ret
	}
	return *o.FactorPercentage
}

// GetFactorPercentageOk returns a tuple with the FactorPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetFactorPercentageOk() (*int32, bool) {
	if o == nil || o.FactorPercentage == nil {
		return nil, false
	}
	return o.FactorPercentage, true
}

// HasFactorPercentage returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) HasFactorPercentage() bool {
	if o != nil && o.FactorPercentage != nil {
		return true
	}

	return false
}

// SetFactorPercentage gets a reference to the given int32 and assigns it to the FactorPercentage field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) SetFactorPercentage(v int32) {
	o.FactorPercentage = &v
}

// GetCap returns the Cap field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetCap() IoK8sApimachineryPkgApisMetaV1Duration {
	if o == nil || o.Cap == nil {
		var ret IoK8sApimachineryPkgApisMetaV1Duration
		return ret
	}
	return *o.Cap
}

// GetCapOk returns a tuple with the Cap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetCapOk() (*IoK8sApimachineryPkgApisMetaV1Duration, bool) {
	if o == nil || o.Cap == nil {
		return nil, false
	}
	return o.Cap, true
}

// HasCap returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) HasCap() bool {
	if o != nil && o.Cap != nil {
		return true
	}

	return false
}

// SetCap gets a reference to the given IoK8sApimachineryPkgApisMetaV1Duration and assigns it to the Cap field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) SetCap(v IoK8sApimachineryPkgApisMetaV1Duration) {
	o.Cap = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetDuration() IoK8sApimachineryPkgApisMetaV1Duration {
	if o == nil || o.Duration == nil {
		var ret IoK8sApimachineryPkgApisMetaV1Duration
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetDurationOk() (*IoK8sApimachineryPkgApisMetaV1Duration, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given IoK8sApimachineryPkgApisMetaV1Duration and assigns it to the Duration field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) SetDuration(v IoK8sApimachineryPkgApisMetaV1Duration) {
	o.Duration = &v
}

// GetJitterPercentage returns the JitterPercentage field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetJitterPercentage() int32 {
	if o == nil || o.JitterPercentage == nil {
		var ret int32
		return ret
	}
	return *o.JitterPercentage
}

// GetJitterPercentageOk returns a tuple with the JitterPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetJitterPercentageOk() (*int32, bool) {
	if o == nil || o.JitterPercentage == nil {
		return nil, false
	}
	return o.JitterPercentage, true
}

// HasJitterPercentage returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) HasJitterPercentage() bool {
	if o != nil && o.JitterPercentage != nil {
		return true
	}

	return false
}

// SetJitterPercentage gets a reference to the given int32 and assigns it to the JitterPercentage field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) SetJitterPercentage(v int32) {
	o.JitterPercentage = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetSteps() string {
	if o == nil || o.Steps == nil {
		var ret string
		return ret
	}
	return *o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) GetStepsOk() (*string, bool) {
	if o == nil || o.Steps == nil {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) HasSteps() bool {
	if o != nil && o.Steps != nil {
		return true
	}

	return false
}

// SetSteps gets a reference to the given string and assigns it to the Steps field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) SetSteps(v string) {
	o.Steps = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FactorPercentage != nil {
		toSerialize["FactorPercentage"] = o.FactorPercentage
	}
	if o.Cap != nil {
		toSerialize["cap"] = o.Cap
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.JitterPercentage != nil {
		toSerialize["jitterPercentage"] = o.JitterPercentage
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Backoff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


