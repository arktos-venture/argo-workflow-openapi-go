/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Arguments Arguments to a template
type IoArgoprojWorkflowV1alpha1Arguments struct {
	// Artifacts is the list of artifacts to pass to the template or workflow
	Artifacts *[]IoArgoprojWorkflowV1alpha1Artifact `json:"artifacts,omitempty"`
	// Parameters is the list of parameters to pass to the template or workflow
	Parameters *[]IoArgoprojWorkflowV1alpha1Parameter `json:"parameters,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1Arguments instantiates a new IoArgoprojWorkflowV1alpha1Arguments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Arguments() *IoArgoprojWorkflowV1alpha1Arguments {
	this := IoArgoprojWorkflowV1alpha1Arguments{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ArgumentsWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Arguments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ArgumentsWithDefaults() *IoArgoprojWorkflowV1alpha1Arguments {
	this := IoArgoprojWorkflowV1alpha1Arguments{}
	return &this
}

// GetArtifacts returns the Artifacts field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Arguments) GetArtifacts() []IoArgoprojWorkflowV1alpha1Artifact {
	if o == nil || o.Artifacts == nil {
		var ret []IoArgoprojWorkflowV1alpha1Artifact
		return ret
	}
	return *o.Artifacts
}

// GetArtifactsOk returns a tuple with the Artifacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Arguments) GetArtifactsOk() (*[]IoArgoprojWorkflowV1alpha1Artifact, bool) {
	if o == nil || o.Artifacts == nil {
		return nil, false
	}
	return o.Artifacts, true
}

// HasArtifacts returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Arguments) HasArtifacts() bool {
	if o != nil && o.Artifacts != nil {
		return true
	}

	return false
}

// SetArtifacts gets a reference to the given []IoArgoprojWorkflowV1alpha1Artifact and assigns it to the Artifacts field.
func (o *IoArgoprojWorkflowV1alpha1Arguments) SetArtifacts(v []IoArgoprojWorkflowV1alpha1Artifact) {
	o.Artifacts = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1Arguments) GetParameters() []IoArgoprojWorkflowV1alpha1Parameter {
	if o == nil || o.Parameters == nil {
		var ret []IoArgoprojWorkflowV1alpha1Parameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Arguments) GetParametersOk() (*[]IoArgoprojWorkflowV1alpha1Parameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1Arguments) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []IoArgoprojWorkflowV1alpha1Parameter and assigns it to the Parameters field.
func (o *IoArgoprojWorkflowV1alpha1Arguments) SetParameters(v []IoArgoprojWorkflowV1alpha1Parameter) {
	o.Parameters = &v
}

func (o IoArgoprojWorkflowV1alpha1Arguments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Artifacts != nil {
		toSerialize["artifacts"] = o.Artifacts
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Arguments struct {
	value *IoArgoprojWorkflowV1alpha1Arguments
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Arguments) Get() *IoArgoprojWorkflowV1alpha1Arguments {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Arguments) Set(val *IoArgoprojWorkflowV1alpha1Arguments) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Arguments) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Arguments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Arguments(val *IoArgoprojWorkflowV1alpha1Arguments) *NullableIoArgoprojWorkflowV1alpha1Arguments {
	return &NullableIoArgoprojWorkflowV1alpha1Arguments{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Arguments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Arguments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


