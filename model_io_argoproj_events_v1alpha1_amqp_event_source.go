/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1AMQPEventSource struct for IoArgoprojEventsV1alpha1AMQPEventSource
type IoArgoprojEventsV1alpha1AMQPEventSource struct {
	Auth *IoArgoprojEventsV1alpha1BasicAuth `json:"auth,omitempty"`
	ConnectionBackoff *IoArgoprojEventsV1alpha1Backoff `json:"connectionBackoff,omitempty"`
	Consume *IoArgoprojEventsV1alpha1AMQPConsumeConfig `json:"consume,omitempty"`
	ExchangeDeclare *IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig `json:"exchangeDeclare,omitempty"`
	ExchangeName *string `json:"exchangeName,omitempty"`
	ExchangeType *string `json:"exchangeType,omitempty"`
	JsonBody *bool `json:"jsonBody,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	QueueBind *IoArgoprojEventsV1alpha1AMQPQueueBindConfig `json:"queueBind,omitempty"`
	QueueDeclare *IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig `json:"queueDeclare,omitempty"`
	RoutingKey *string `json:"routingKey,omitempty"`
	Tls *IoArgoprojEventsV1alpha1TLSConfig `json:"tls,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewIoArgoprojEventsV1alpha1AMQPEventSource instantiates a new IoArgoprojEventsV1alpha1AMQPEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1AMQPEventSource() *IoArgoprojEventsV1alpha1AMQPEventSource {
	this := IoArgoprojEventsV1alpha1AMQPEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1AMQPEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1AMQPEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1AMQPEventSourceWithDefaults() *IoArgoprojEventsV1alpha1AMQPEventSource {
	this := IoArgoprojEventsV1alpha1AMQPEventSource{}
	return &this
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetAuth() IoArgoprojEventsV1alpha1BasicAuth {
	if o == nil || o.Auth == nil {
		var ret IoArgoprojEventsV1alpha1BasicAuth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetAuthOk() (*IoArgoprojEventsV1alpha1BasicAuth, bool) {
	if o == nil || o.Auth == nil {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasAuth() bool {
	if o != nil && o.Auth != nil {
		return true
	}

	return false
}

// SetAuth gets a reference to the given IoArgoprojEventsV1alpha1BasicAuth and assigns it to the Auth field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetAuth(v IoArgoprojEventsV1alpha1BasicAuth) {
	o.Auth = &v
}

// GetConnectionBackoff returns the ConnectionBackoff field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetConnectionBackoff() IoArgoprojEventsV1alpha1Backoff {
	if o == nil || o.ConnectionBackoff == nil {
		var ret IoArgoprojEventsV1alpha1Backoff
		return ret
	}
	return *o.ConnectionBackoff
}

// GetConnectionBackoffOk returns a tuple with the ConnectionBackoff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetConnectionBackoffOk() (*IoArgoprojEventsV1alpha1Backoff, bool) {
	if o == nil || o.ConnectionBackoff == nil {
		return nil, false
	}
	return o.ConnectionBackoff, true
}

// HasConnectionBackoff returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasConnectionBackoff() bool {
	if o != nil && o.ConnectionBackoff != nil {
		return true
	}

	return false
}

// SetConnectionBackoff gets a reference to the given IoArgoprojEventsV1alpha1Backoff and assigns it to the ConnectionBackoff field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetConnectionBackoff(v IoArgoprojEventsV1alpha1Backoff) {
	o.ConnectionBackoff = &v
}

// GetConsume returns the Consume field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetConsume() IoArgoprojEventsV1alpha1AMQPConsumeConfig {
	if o == nil || o.Consume == nil {
		var ret IoArgoprojEventsV1alpha1AMQPConsumeConfig
		return ret
	}
	return *o.Consume
}

// GetConsumeOk returns a tuple with the Consume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetConsumeOk() (*IoArgoprojEventsV1alpha1AMQPConsumeConfig, bool) {
	if o == nil || o.Consume == nil {
		return nil, false
	}
	return o.Consume, true
}

// HasConsume returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasConsume() bool {
	if o != nil && o.Consume != nil {
		return true
	}

	return false
}

// SetConsume gets a reference to the given IoArgoprojEventsV1alpha1AMQPConsumeConfig and assigns it to the Consume field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetConsume(v IoArgoprojEventsV1alpha1AMQPConsumeConfig) {
	o.Consume = &v
}

// GetExchangeDeclare returns the ExchangeDeclare field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetExchangeDeclare() IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig {
	if o == nil || o.ExchangeDeclare == nil {
		var ret IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig
		return ret
	}
	return *o.ExchangeDeclare
}

// GetExchangeDeclareOk returns a tuple with the ExchangeDeclare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetExchangeDeclareOk() (*IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig, bool) {
	if o == nil || o.ExchangeDeclare == nil {
		return nil, false
	}
	return o.ExchangeDeclare, true
}

// HasExchangeDeclare returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasExchangeDeclare() bool {
	if o != nil && o.ExchangeDeclare != nil {
		return true
	}

	return false
}

// SetExchangeDeclare gets a reference to the given IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig and assigns it to the ExchangeDeclare field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetExchangeDeclare(v IoArgoprojEventsV1alpha1AMQPExchangeDeclareConfig) {
	o.ExchangeDeclare = &v
}

// GetExchangeName returns the ExchangeName field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetExchangeName() string {
	if o == nil || o.ExchangeName == nil {
		var ret string
		return ret
	}
	return *o.ExchangeName
}

// GetExchangeNameOk returns a tuple with the ExchangeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetExchangeNameOk() (*string, bool) {
	if o == nil || o.ExchangeName == nil {
		return nil, false
	}
	return o.ExchangeName, true
}

// HasExchangeName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasExchangeName() bool {
	if o != nil && o.ExchangeName != nil {
		return true
	}

	return false
}

// SetExchangeName gets a reference to the given string and assigns it to the ExchangeName field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetExchangeName(v string) {
	o.ExchangeName = &v
}

// GetExchangeType returns the ExchangeType field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetExchangeType() string {
	if o == nil || o.ExchangeType == nil {
		var ret string
		return ret
	}
	return *o.ExchangeType
}

// GetExchangeTypeOk returns a tuple with the ExchangeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetExchangeTypeOk() (*string, bool) {
	if o == nil || o.ExchangeType == nil {
		return nil, false
	}
	return o.ExchangeType, true
}

// HasExchangeType returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasExchangeType() bool {
	if o != nil && o.ExchangeType != nil {
		return true
	}

	return false
}

// SetExchangeType gets a reference to the given string and assigns it to the ExchangeType field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetExchangeType(v string) {
	o.ExchangeType = &v
}

// GetJsonBody returns the JsonBody field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetJsonBody() bool {
	if o == nil || o.JsonBody == nil {
		var ret bool
		return ret
	}
	return *o.JsonBody
}

// GetJsonBodyOk returns a tuple with the JsonBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetJsonBodyOk() (*bool, bool) {
	if o == nil || o.JsonBody == nil {
		return nil, false
	}
	return o.JsonBody, true
}

// HasJsonBody returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasJsonBody() bool {
	if o != nil && o.JsonBody != nil {
		return true
	}

	return false
}

// SetJsonBody gets a reference to the given bool and assigns it to the JsonBody field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetJsonBody(v bool) {
	o.JsonBody = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetQueueBind returns the QueueBind field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetQueueBind() IoArgoprojEventsV1alpha1AMQPQueueBindConfig {
	if o == nil || o.QueueBind == nil {
		var ret IoArgoprojEventsV1alpha1AMQPQueueBindConfig
		return ret
	}
	return *o.QueueBind
}

// GetQueueBindOk returns a tuple with the QueueBind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetQueueBindOk() (*IoArgoprojEventsV1alpha1AMQPQueueBindConfig, bool) {
	if o == nil || o.QueueBind == nil {
		return nil, false
	}
	return o.QueueBind, true
}

// HasQueueBind returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasQueueBind() bool {
	if o != nil && o.QueueBind != nil {
		return true
	}

	return false
}

// SetQueueBind gets a reference to the given IoArgoprojEventsV1alpha1AMQPQueueBindConfig and assigns it to the QueueBind field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetQueueBind(v IoArgoprojEventsV1alpha1AMQPQueueBindConfig) {
	o.QueueBind = &v
}

// GetQueueDeclare returns the QueueDeclare field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetQueueDeclare() IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig {
	if o == nil || o.QueueDeclare == nil {
		var ret IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig
		return ret
	}
	return *o.QueueDeclare
}

// GetQueueDeclareOk returns a tuple with the QueueDeclare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetQueueDeclareOk() (*IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig, bool) {
	if o == nil || o.QueueDeclare == nil {
		return nil, false
	}
	return o.QueueDeclare, true
}

// HasQueueDeclare returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasQueueDeclare() bool {
	if o != nil && o.QueueDeclare != nil {
		return true
	}

	return false
}

// SetQueueDeclare gets a reference to the given IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig and assigns it to the QueueDeclare field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetQueueDeclare(v IoArgoprojEventsV1alpha1AMQPQueueDeclareConfig) {
	o.QueueDeclare = &v
}

// GetRoutingKey returns the RoutingKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetRoutingKey() string {
	if o == nil || o.RoutingKey == nil {
		var ret string
		return ret
	}
	return *o.RoutingKey
}

// GetRoutingKeyOk returns a tuple with the RoutingKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetRoutingKeyOk() (*string, bool) {
	if o == nil || o.RoutingKey == nil {
		return nil, false
	}
	return o.RoutingKey, true
}

// HasRoutingKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasRoutingKey() bool {
	if o != nil && o.RoutingKey != nil {
		return true
	}

	return false
}

// SetRoutingKey gets a reference to the given string and assigns it to the RoutingKey field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetRoutingKey(v string) {
	o.RoutingKey = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetTls() IoArgoprojEventsV1alpha1TLSConfig {
	if o == nil || o.Tls == nil {
		var ret IoArgoprojEventsV1alpha1TLSConfig
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetTlsOk() (*IoArgoprojEventsV1alpha1TLSConfig, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given IoArgoprojEventsV1alpha1TLSConfig and assigns it to the Tls field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetTls(v IoArgoprojEventsV1alpha1TLSConfig) {
	o.Tls = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IoArgoprojEventsV1alpha1AMQPEventSource) SetUrl(v string) {
	o.Url = &v
}

func (o IoArgoprojEventsV1alpha1AMQPEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Auth != nil {
		toSerialize["auth"] = o.Auth
	}
	if o.ConnectionBackoff != nil {
		toSerialize["connectionBackoff"] = o.ConnectionBackoff
	}
	if o.Consume != nil {
		toSerialize["consume"] = o.Consume
	}
	if o.ExchangeDeclare != nil {
		toSerialize["exchangeDeclare"] = o.ExchangeDeclare
	}
	if o.ExchangeName != nil {
		toSerialize["exchangeName"] = o.ExchangeName
	}
	if o.ExchangeType != nil {
		toSerialize["exchangeType"] = o.ExchangeType
	}
	if o.JsonBody != nil {
		toSerialize["jsonBody"] = o.JsonBody
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.QueueBind != nil {
		toSerialize["queueBind"] = o.QueueBind
	}
	if o.QueueDeclare != nil {
		toSerialize["queueDeclare"] = o.QueueDeclare
	}
	if o.RoutingKey != nil {
		toSerialize["routingKey"] = o.RoutingKey
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1AMQPEventSource struct {
	value *IoArgoprojEventsV1alpha1AMQPEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1AMQPEventSource) Get() *IoArgoprojEventsV1alpha1AMQPEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1AMQPEventSource) Set(val *IoArgoprojEventsV1alpha1AMQPEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1AMQPEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1AMQPEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1AMQPEventSource(val *IoArgoprojEventsV1alpha1AMQPEventSource) *NullableIoArgoprojEventsV1alpha1AMQPEventSource {
	return &NullableIoArgoprojEventsV1alpha1AMQPEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1AMQPEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1AMQPEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


