/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef struct for IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef
type IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef struct {
	// The name of the config map. Defaults to \"artifact-repositories\".
	ConfigMap *string `json:"configMap,omitempty"`
	// The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.
	Key *string `json:"key,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef instantiates a new IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef() *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef {
	this := IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefWithDefaults() *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef {
	this := IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef{}
	return &this
}

// GetConfigMap returns the ConfigMap field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) GetConfigMap() string {
	if o == nil || o.ConfigMap == nil {
		var ret string
		return ret
	}
	return *o.ConfigMap
}

// GetConfigMapOk returns a tuple with the ConfigMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) GetConfigMapOk() (*string, bool) {
	if o == nil || o.ConfigMap == nil {
		return nil, false
	}
	return o.ConfigMap, true
}

// HasConfigMap returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) HasConfigMap() bool {
	if o != nil && o.ConfigMap != nil {
		return true
	}

	return false
}

// SetConfigMap gets a reference to the given string and assigns it to the ConfigMap field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) SetConfigMap(v string) {
	o.ConfigMap = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) SetKey(v string) {
	o.Key = &v
}

func (o IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigMap != nil {
		toSerialize["configMap"] = o.ConfigMap
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef struct {
	value *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) Get() *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) Set(val *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef(val *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef {
	return &NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


