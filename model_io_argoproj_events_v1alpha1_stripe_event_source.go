/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1StripeEventSource struct for IoArgoprojEventsV1alpha1StripeEventSource
type IoArgoprojEventsV1alpha1StripeEventSource struct {
	ApiKey *IoK8sApiCoreV1SecretKeySelector `json:"apiKey,omitempty"`
	CreateWebhook *bool `json:"createWebhook,omitempty"`
	EventFilter *[]string `json:"eventFilter,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Webhook *IoArgoprojEventsV1alpha1WebhookContext `json:"webhook,omitempty"`
}

// NewIoArgoprojEventsV1alpha1StripeEventSource instantiates a new IoArgoprojEventsV1alpha1StripeEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1StripeEventSource() *IoArgoprojEventsV1alpha1StripeEventSource {
	this := IoArgoprojEventsV1alpha1StripeEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1StripeEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1StripeEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1StripeEventSourceWithDefaults() *IoArgoprojEventsV1alpha1StripeEventSource {
	this := IoArgoprojEventsV1alpha1StripeEventSource{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetApiKey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.ApiKey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetApiKeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.ApiKey == nil {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) HasApiKey() bool {
	if o != nil && o.ApiKey != nil {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the ApiKey field.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) SetApiKey(v IoK8sApiCoreV1SecretKeySelector) {
	o.ApiKey = &v
}

// GetCreateWebhook returns the CreateWebhook field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetCreateWebhook() bool {
	if o == nil || o.CreateWebhook == nil {
		var ret bool
		return ret
	}
	return *o.CreateWebhook
}

// GetCreateWebhookOk returns a tuple with the CreateWebhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetCreateWebhookOk() (*bool, bool) {
	if o == nil || o.CreateWebhook == nil {
		return nil, false
	}
	return o.CreateWebhook, true
}

// HasCreateWebhook returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) HasCreateWebhook() bool {
	if o != nil && o.CreateWebhook != nil {
		return true
	}

	return false
}

// SetCreateWebhook gets a reference to the given bool and assigns it to the CreateWebhook field.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) SetCreateWebhook(v bool) {
	o.CreateWebhook = &v
}

// GetEventFilter returns the EventFilter field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetEventFilter() []string {
	if o == nil || o.EventFilter == nil {
		var ret []string
		return ret
	}
	return *o.EventFilter
}

// GetEventFilterOk returns a tuple with the EventFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetEventFilterOk() (*[]string, bool) {
	if o == nil || o.EventFilter == nil {
		return nil, false
	}
	return o.EventFilter, true
}

// HasEventFilter returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) HasEventFilter() bool {
	if o != nil && o.EventFilter != nil {
		return true
	}

	return false
}

// SetEventFilter gets a reference to the given []string and assigns it to the EventFilter field.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) SetEventFilter(v []string) {
	o.EventFilter = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetWebhook() IoArgoprojEventsV1alpha1WebhookContext {
	if o == nil || o.Webhook == nil {
		var ret IoArgoprojEventsV1alpha1WebhookContext
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) GetWebhookOk() (*IoArgoprojEventsV1alpha1WebhookContext, bool) {
	if o == nil || o.Webhook == nil {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) HasWebhook() bool {
	if o != nil && o.Webhook != nil {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given IoArgoprojEventsV1alpha1WebhookContext and assigns it to the Webhook field.
func (o *IoArgoprojEventsV1alpha1StripeEventSource) SetWebhook(v IoArgoprojEventsV1alpha1WebhookContext) {
	o.Webhook = &v
}

func (o IoArgoprojEventsV1alpha1StripeEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKey != nil {
		toSerialize["apiKey"] = o.ApiKey
	}
	if o.CreateWebhook != nil {
		toSerialize["createWebhook"] = o.CreateWebhook
	}
	if o.EventFilter != nil {
		toSerialize["eventFilter"] = o.EventFilter
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Webhook != nil {
		toSerialize["webhook"] = o.Webhook
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1StripeEventSource struct {
	value *IoArgoprojEventsV1alpha1StripeEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1StripeEventSource) Get() *IoArgoprojEventsV1alpha1StripeEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1StripeEventSource) Set(val *IoArgoprojEventsV1alpha1StripeEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1StripeEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1StripeEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1StripeEventSource(val *IoArgoprojEventsV1alpha1StripeEventSource) *NullableIoArgoprojEventsV1alpha1StripeEventSource {
	return &NullableIoArgoprojEventsV1alpha1StripeEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1StripeEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1StripeEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


