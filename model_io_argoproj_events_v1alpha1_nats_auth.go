/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1NATSAuth struct for IoArgoprojEventsV1alpha1NATSAuth
type IoArgoprojEventsV1alpha1NATSAuth struct {
	Basic *IoArgoprojEventsV1alpha1BasicAuth `json:"basic,omitempty"`
	Credential *IoK8sApiCoreV1SecretKeySelector `json:"credential,omitempty"`
	Nkey *IoK8sApiCoreV1SecretKeySelector `json:"nkey,omitempty"`
	Token *IoK8sApiCoreV1SecretKeySelector `json:"token,omitempty"`
}

// NewIoArgoprojEventsV1alpha1NATSAuth instantiates a new IoArgoprojEventsV1alpha1NATSAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1NATSAuth() *IoArgoprojEventsV1alpha1NATSAuth {
	this := IoArgoprojEventsV1alpha1NATSAuth{}
	return &this
}

// NewIoArgoprojEventsV1alpha1NATSAuthWithDefaults instantiates a new IoArgoprojEventsV1alpha1NATSAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1NATSAuthWithDefaults() *IoArgoprojEventsV1alpha1NATSAuth {
	this := IoArgoprojEventsV1alpha1NATSAuth{}
	return &this
}

// GetBasic returns the Basic field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetBasic() IoArgoprojEventsV1alpha1BasicAuth {
	if o == nil || o.Basic == nil {
		var ret IoArgoprojEventsV1alpha1BasicAuth
		return ret
	}
	return *o.Basic
}

// GetBasicOk returns a tuple with the Basic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetBasicOk() (*IoArgoprojEventsV1alpha1BasicAuth, bool) {
	if o == nil || o.Basic == nil {
		return nil, false
	}
	return o.Basic, true
}

// HasBasic returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) HasBasic() bool {
	if o != nil && o.Basic != nil {
		return true
	}

	return false
}

// SetBasic gets a reference to the given IoArgoprojEventsV1alpha1BasicAuth and assigns it to the Basic field.
func (o *IoArgoprojEventsV1alpha1NATSAuth) SetBasic(v IoArgoprojEventsV1alpha1BasicAuth) {
	o.Basic = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetCredential() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.Credential == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetCredentialOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the Credential field.
func (o *IoArgoprojEventsV1alpha1NATSAuth) SetCredential(v IoK8sApiCoreV1SecretKeySelector) {
	o.Credential = &v
}

// GetNkey returns the Nkey field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetNkey() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.Nkey == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.Nkey
}

// GetNkeyOk returns a tuple with the Nkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetNkeyOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.Nkey == nil {
		return nil, false
	}
	return o.Nkey, true
}

// HasNkey returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) HasNkey() bool {
	if o != nil && o.Nkey != nil {
		return true
	}

	return false
}

// SetNkey gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the Nkey field.
func (o *IoArgoprojEventsV1alpha1NATSAuth) SetNkey(v IoK8sApiCoreV1SecretKeySelector) {
	o.Nkey = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetToken() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.Token == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) GetTokenOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1NATSAuth) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the Token field.
func (o *IoArgoprojEventsV1alpha1NATSAuth) SetToken(v IoK8sApiCoreV1SecretKeySelector) {
	o.Token = &v
}

func (o IoArgoprojEventsV1alpha1NATSAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Basic != nil {
		toSerialize["basic"] = o.Basic
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.Nkey != nil {
		toSerialize["nkey"] = o.Nkey
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1NATSAuth struct {
	value *IoArgoprojEventsV1alpha1NATSAuth
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1NATSAuth) Get() *IoArgoprojEventsV1alpha1NATSAuth {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1NATSAuth) Set(val *IoArgoprojEventsV1alpha1NATSAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1NATSAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1NATSAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1NATSAuth(val *IoArgoprojEventsV1alpha1NATSAuth) *NullableIoArgoprojEventsV1alpha1NATSAuth {
	return &NullableIoArgoprojEventsV1alpha1NATSAuth{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1NATSAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1NATSAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


