/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1Code struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1Code
type GithubComArgoprojLabsArgoDataflowApiV1alpha1Code struct {
	Runtime *string `json:"runtime,omitempty"`
	Source *string `json:"source,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Code instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Code object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1Code() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Code{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1CodeWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1Code object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1CodeWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1Code{}
	return &this
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) GetRuntime() string {
	if o == nil || o.Runtime == nil {
		var ret string
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) GetRuntimeOk() (*string, bool) {
	if o == nil || o.Runtime == nil {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) HasRuntime() bool {
	if o != nil && o.Runtime != nil {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given string and assigns it to the Runtime field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) SetRuntime(v string) {
	o.Runtime = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) SetSource(v string) {
	o.Source = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Runtime != nil {
		toSerialize["runtime"] = o.Runtime
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1Code) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1Code) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


