/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1SemaphoreRef SemaphoreRef is a reference of Semaphore
type IoArgoprojWorkflowV1alpha1SemaphoreRef struct {
	ConfigMapKeyRef *IoK8sApiCoreV1ConfigMapKeySelector `json:"configMapKeyRef,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1SemaphoreRef instantiates a new IoArgoprojWorkflowV1alpha1SemaphoreRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1SemaphoreRef() *IoArgoprojWorkflowV1alpha1SemaphoreRef {
	this := IoArgoprojWorkflowV1alpha1SemaphoreRef{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1SemaphoreRefWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1SemaphoreRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1SemaphoreRefWithDefaults() *IoArgoprojWorkflowV1alpha1SemaphoreRef {
	this := IoArgoprojWorkflowV1alpha1SemaphoreRef{}
	return &this
}

// GetConfigMapKeyRef returns the ConfigMapKeyRef field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreRef) GetConfigMapKeyRef() IoK8sApiCoreV1ConfigMapKeySelector {
	if o == nil || o.ConfigMapKeyRef == nil {
		var ret IoK8sApiCoreV1ConfigMapKeySelector
		return ret
	}
	return *o.ConfigMapKeyRef
}

// GetConfigMapKeyRefOk returns a tuple with the ConfigMapKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreRef) GetConfigMapKeyRefOk() (*IoK8sApiCoreV1ConfigMapKeySelector, bool) {
	if o == nil || o.ConfigMapKeyRef == nil {
		return nil, false
	}
	return o.ConfigMapKeyRef, true
}

// HasConfigMapKeyRef returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreRef) HasConfigMapKeyRef() bool {
	if o != nil && o.ConfigMapKeyRef != nil {
		return true
	}

	return false
}

// SetConfigMapKeyRef gets a reference to the given IoK8sApiCoreV1ConfigMapKeySelector and assigns it to the ConfigMapKeyRef field.
func (o *IoArgoprojWorkflowV1alpha1SemaphoreRef) SetConfigMapKeyRef(v IoK8sApiCoreV1ConfigMapKeySelector) {
	o.ConfigMapKeyRef = &v
}

func (o IoArgoprojWorkflowV1alpha1SemaphoreRef) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigMapKeyRef != nil {
		toSerialize["configMapKeyRef"] = o.ConfigMapKeyRef
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1SemaphoreRef struct {
	value *IoArgoprojWorkflowV1alpha1SemaphoreRef
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1SemaphoreRef) Get() *IoArgoprojWorkflowV1alpha1SemaphoreRef {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1SemaphoreRef) Set(val *IoArgoprojWorkflowV1alpha1SemaphoreRef) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1SemaphoreRef) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1SemaphoreRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1SemaphoreRef(val *IoArgoprojWorkflowV1alpha1SemaphoreRef) *NullableIoArgoprojWorkflowV1alpha1SemaphoreRef {
	return &NullableIoArgoprojWorkflowV1alpha1SemaphoreRef{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1SemaphoreRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1SemaphoreRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


