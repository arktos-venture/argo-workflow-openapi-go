/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1DataFilter struct for IoArgoprojEventsV1alpha1DataFilter
type IoArgoprojEventsV1alpha1DataFilter struct {
	// Comparator compares the event data with a user given value. Can be \">=\", \">\", \"=\", \"!=\", \"<\", or \"<=\". Is optional, and if left blank treated as equality \"=\".
	Comparator *string `json:"comparator,omitempty"`
	// Path is the JSONPath of the event's (JSON decoded) data key Path is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'. To access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'. See https://github.com/tidwall/gjson#path-syntax for more information on how to use this.
	Path *string `json:"path,omitempty"`
	Template *string `json:"template,omitempty"`
	Type *string `json:"type,omitempty"`
	Value *[]string `json:"value,omitempty"`
}

// NewIoArgoprojEventsV1alpha1DataFilter instantiates a new IoArgoprojEventsV1alpha1DataFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1DataFilter() *IoArgoprojEventsV1alpha1DataFilter {
	this := IoArgoprojEventsV1alpha1DataFilter{}
	return &this
}

// NewIoArgoprojEventsV1alpha1DataFilterWithDefaults instantiates a new IoArgoprojEventsV1alpha1DataFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1DataFilterWithDefaults() *IoArgoprojEventsV1alpha1DataFilter {
	this := IoArgoprojEventsV1alpha1DataFilter{}
	return &this
}

// GetComparator returns the Comparator field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetComparator() string {
	if o == nil || o.Comparator == nil {
		var ret string
		return ret
	}
	return *o.Comparator
}

// GetComparatorOk returns a tuple with the Comparator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetComparatorOk() (*string, bool) {
	if o == nil || o.Comparator == nil {
		return nil, false
	}
	return o.Comparator, true
}

// HasComparator returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) HasComparator() bool {
	if o != nil && o.Comparator != nil {
		return true
	}

	return false
}

// SetComparator gets a reference to the given string and assigns it to the Comparator field.
func (o *IoArgoprojEventsV1alpha1DataFilter) SetComparator(v string) {
	o.Comparator = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *IoArgoprojEventsV1alpha1DataFilter) SetPath(v string) {
	o.Path = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *IoArgoprojEventsV1alpha1DataFilter) SetTemplate(v string) {
	o.Template = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IoArgoprojEventsV1alpha1DataFilter) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetValue() []string {
	if o == nil || o.Value == nil {
		var ret []string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) GetValueOk() (*[]string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1DataFilter) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given []string and assigns it to the Value field.
func (o *IoArgoprojEventsV1alpha1DataFilter) SetValue(v []string) {
	o.Value = &v
}

func (o IoArgoprojEventsV1alpha1DataFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Comparator != nil {
		toSerialize["comparator"] = o.Comparator
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1DataFilter struct {
	value *IoArgoprojEventsV1alpha1DataFilter
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1DataFilter) Get() *IoArgoprojEventsV1alpha1DataFilter {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1DataFilter) Set(val *IoArgoprojEventsV1alpha1DataFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1DataFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1DataFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1DataFilter(val *IoArgoprojEventsV1alpha1DataFilter) *NullableIoArgoprojEventsV1alpha1DataFilter {
	return &NullableIoArgoprojEventsV1alpha1DataFilter{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1DataFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1DataFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


