/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1GitArtifact struct for IoArgoprojEventsV1alpha1GitArtifact
type IoArgoprojEventsV1alpha1GitArtifact struct {
	Branch *string `json:"branch,omitempty"`
	// Directory to clone the repository. We clone complete directory because GitArtifact is not limited to any specific Git service providers. Hence we don't use any specific git provider client.
	CloneDirectory *string `json:"cloneDirectory,omitempty"`
	Creds *IoArgoprojEventsV1alpha1GitCreds `json:"creds,omitempty"`
	FilePath *string `json:"filePath,omitempty"`
	Ref *string `json:"ref,omitempty"`
	Remote *IoArgoprojEventsV1alpha1GitRemoteConfig `json:"remote,omitempty"`
	SshKeyPath *string `json:"sshKeyPath,omitempty"`
	SshKeySecret *IoK8sApiCoreV1SecretKeySelector `json:"sshKeySecret,omitempty"`
	Tag *string `json:"tag,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewIoArgoprojEventsV1alpha1GitArtifact instantiates a new IoArgoprojEventsV1alpha1GitArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1GitArtifact() *IoArgoprojEventsV1alpha1GitArtifact {
	this := IoArgoprojEventsV1alpha1GitArtifact{}
	return &this
}

// NewIoArgoprojEventsV1alpha1GitArtifactWithDefaults instantiates a new IoArgoprojEventsV1alpha1GitArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1GitArtifactWithDefaults() *IoArgoprojEventsV1alpha1GitArtifact {
	this := IoArgoprojEventsV1alpha1GitArtifact{}
	return &this
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetBranch() string {
	if o == nil || o.Branch == nil {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetBranchOk() (*string, bool) {
	if o == nil || o.Branch == nil {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasBranch() bool {
	if o != nil && o.Branch != nil {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetBranch(v string) {
	o.Branch = &v
}

// GetCloneDirectory returns the CloneDirectory field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetCloneDirectory() string {
	if o == nil || o.CloneDirectory == nil {
		var ret string
		return ret
	}
	return *o.CloneDirectory
}

// GetCloneDirectoryOk returns a tuple with the CloneDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetCloneDirectoryOk() (*string, bool) {
	if o == nil || o.CloneDirectory == nil {
		return nil, false
	}
	return o.CloneDirectory, true
}

// HasCloneDirectory returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasCloneDirectory() bool {
	if o != nil && o.CloneDirectory != nil {
		return true
	}

	return false
}

// SetCloneDirectory gets a reference to the given string and assigns it to the CloneDirectory field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetCloneDirectory(v string) {
	o.CloneDirectory = &v
}

// GetCreds returns the Creds field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetCreds() IoArgoprojEventsV1alpha1GitCreds {
	if o == nil || o.Creds == nil {
		var ret IoArgoprojEventsV1alpha1GitCreds
		return ret
	}
	return *o.Creds
}

// GetCredsOk returns a tuple with the Creds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetCredsOk() (*IoArgoprojEventsV1alpha1GitCreds, bool) {
	if o == nil || o.Creds == nil {
		return nil, false
	}
	return o.Creds, true
}

// HasCreds returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasCreds() bool {
	if o != nil && o.Creds != nil {
		return true
	}

	return false
}

// SetCreds gets a reference to the given IoArgoprojEventsV1alpha1GitCreds and assigns it to the Creds field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetCreds(v IoArgoprojEventsV1alpha1GitCreds) {
	o.Creds = &v
}

// GetFilePath returns the FilePath field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetFilePath() string {
	if o == nil || o.FilePath == nil {
		var ret string
		return ret
	}
	return *o.FilePath
}

// GetFilePathOk returns a tuple with the FilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetFilePathOk() (*string, bool) {
	if o == nil || o.FilePath == nil {
		return nil, false
	}
	return o.FilePath, true
}

// HasFilePath returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasFilePath() bool {
	if o != nil && o.FilePath != nil {
		return true
	}

	return false
}

// SetFilePath gets a reference to the given string and assigns it to the FilePath field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetFilePath(v string) {
	o.FilePath = &v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetRef() string {
	if o == nil || o.Ref == nil {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetRefOk() (*string, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetRef(v string) {
	o.Ref = &v
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetRemote() IoArgoprojEventsV1alpha1GitRemoteConfig {
	if o == nil || o.Remote == nil {
		var ret IoArgoprojEventsV1alpha1GitRemoteConfig
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetRemoteOk() (*IoArgoprojEventsV1alpha1GitRemoteConfig, bool) {
	if o == nil || o.Remote == nil {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasRemote() bool {
	if o != nil && o.Remote != nil {
		return true
	}

	return false
}

// SetRemote gets a reference to the given IoArgoprojEventsV1alpha1GitRemoteConfig and assigns it to the Remote field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetRemote(v IoArgoprojEventsV1alpha1GitRemoteConfig) {
	o.Remote = &v
}

// GetSshKeyPath returns the SshKeyPath field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetSshKeyPath() string {
	if o == nil || o.SshKeyPath == nil {
		var ret string
		return ret
	}
	return *o.SshKeyPath
}

// GetSshKeyPathOk returns a tuple with the SshKeyPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetSshKeyPathOk() (*string, bool) {
	if o == nil || o.SshKeyPath == nil {
		return nil, false
	}
	return o.SshKeyPath, true
}

// HasSshKeyPath returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasSshKeyPath() bool {
	if o != nil && o.SshKeyPath != nil {
		return true
	}

	return false
}

// SetSshKeyPath gets a reference to the given string and assigns it to the SshKeyPath field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetSshKeyPath(v string) {
	o.SshKeyPath = &v
}

// GetSshKeySecret returns the SshKeySecret field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetSshKeySecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SshKeySecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SshKeySecret
}

// GetSshKeySecretOk returns a tuple with the SshKeySecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetSshKeySecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SshKeySecret == nil {
		return nil, false
	}
	return o.SshKeySecret, true
}

// HasSshKeySecret returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasSshKeySecret() bool {
	if o != nil && o.SshKeySecret != nil {
		return true
	}

	return false
}

// SetSshKeySecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SshKeySecret field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetSshKeySecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.SshKeySecret = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetTag() string {
	if o == nil || o.Tag == nil {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetTagOk() (*string, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetTag(v string) {
	o.Tag = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GitArtifact) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IoArgoprojEventsV1alpha1GitArtifact) SetUrl(v string) {
	o.Url = &v
}

func (o IoArgoprojEventsV1alpha1GitArtifact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Branch != nil {
		toSerialize["branch"] = o.Branch
	}
	if o.CloneDirectory != nil {
		toSerialize["cloneDirectory"] = o.CloneDirectory
	}
	if o.Creds != nil {
		toSerialize["creds"] = o.Creds
	}
	if o.FilePath != nil {
		toSerialize["filePath"] = o.FilePath
	}
	if o.Ref != nil {
		toSerialize["ref"] = o.Ref
	}
	if o.Remote != nil {
		toSerialize["remote"] = o.Remote
	}
	if o.SshKeyPath != nil {
		toSerialize["sshKeyPath"] = o.SshKeyPath
	}
	if o.SshKeySecret != nil {
		toSerialize["sshKeySecret"] = o.SshKeySecret
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1GitArtifact struct {
	value *IoArgoprojEventsV1alpha1GitArtifact
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1GitArtifact) Get() *IoArgoprojEventsV1alpha1GitArtifact {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1GitArtifact) Set(val *IoArgoprojEventsV1alpha1GitArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1GitArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1GitArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1GitArtifact(val *IoArgoprojEventsV1alpha1GitArtifact) *NullableIoArgoprojEventsV1alpha1GitArtifact {
	return &NullableIoArgoprojEventsV1alpha1GitArtifact{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1GitArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1GitArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


