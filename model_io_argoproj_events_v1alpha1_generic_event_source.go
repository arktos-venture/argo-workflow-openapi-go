/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1GenericEventSource GenericEventSource refers to a generic event source. It can be used to implement a custom event source.
type IoArgoprojEventsV1alpha1GenericEventSource struct {
	AuthSecret *IoK8sApiCoreV1SecretKeySelector `json:"authSecret,omitempty"`
	Config *string `json:"config,omitempty"`
	// Insecure determines the type of connection.
	Insecure *bool `json:"insecure,omitempty"`
	JsonBody *bool `json:"jsonBody,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	// URL of the gRPC server that implements the event source.
	Url *string `json:"url,omitempty"`
}

// NewIoArgoprojEventsV1alpha1GenericEventSource instantiates a new IoArgoprojEventsV1alpha1GenericEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1GenericEventSource() *IoArgoprojEventsV1alpha1GenericEventSource {
	this := IoArgoprojEventsV1alpha1GenericEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1GenericEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1GenericEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1GenericEventSourceWithDefaults() *IoArgoprojEventsV1alpha1GenericEventSource {
	this := IoArgoprojEventsV1alpha1GenericEventSource{}
	return &this
}

// GetAuthSecret returns the AuthSecret field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetAuthSecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.AuthSecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.AuthSecret
}

// GetAuthSecretOk returns a tuple with the AuthSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetAuthSecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.AuthSecret == nil {
		return nil, false
	}
	return o.AuthSecret, true
}

// HasAuthSecret returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) HasAuthSecret() bool {
	if o != nil && o.AuthSecret != nil {
		return true
	}

	return false
}

// SetAuthSecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the AuthSecret field.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) SetAuthSecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.AuthSecret = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetConfig() string {
	if o == nil || o.Config == nil {
		var ret string
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetConfigOk() (*string, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given string and assigns it to the Config field.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) SetConfig(v string) {
	o.Config = &v
}

// GetInsecure returns the Insecure field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetInsecure() bool {
	if o == nil || o.Insecure == nil {
		var ret bool
		return ret
	}
	return *o.Insecure
}

// GetInsecureOk returns a tuple with the Insecure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetInsecureOk() (*bool, bool) {
	if o == nil || o.Insecure == nil {
		return nil, false
	}
	return o.Insecure, true
}

// HasInsecure returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) HasInsecure() bool {
	if o != nil && o.Insecure != nil {
		return true
	}

	return false
}

// SetInsecure gets a reference to the given bool and assigns it to the Insecure field.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) SetInsecure(v bool) {
	o.Insecure = &v
}

// GetJsonBody returns the JsonBody field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetJsonBody() bool {
	if o == nil || o.JsonBody == nil {
		var ret bool
		return ret
	}
	return *o.JsonBody
}

// GetJsonBodyOk returns a tuple with the JsonBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetJsonBodyOk() (*bool, bool) {
	if o == nil || o.JsonBody == nil {
		return nil, false
	}
	return o.JsonBody, true
}

// HasJsonBody returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) HasJsonBody() bool {
	if o != nil && o.JsonBody != nil {
		return true
	}

	return false
}

// SetJsonBody gets a reference to the given bool and assigns it to the JsonBody field.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) SetJsonBody(v bool) {
	o.JsonBody = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IoArgoprojEventsV1alpha1GenericEventSource) SetUrl(v string) {
	o.Url = &v
}

func (o IoArgoprojEventsV1alpha1GenericEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthSecret != nil {
		toSerialize["authSecret"] = o.AuthSecret
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Insecure != nil {
		toSerialize["insecure"] = o.Insecure
	}
	if o.JsonBody != nil {
		toSerialize["jsonBody"] = o.JsonBody
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1GenericEventSource struct {
	value *IoArgoprojEventsV1alpha1GenericEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1GenericEventSource) Get() *IoArgoprojEventsV1alpha1GenericEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1GenericEventSource) Set(val *IoArgoprojEventsV1alpha1GenericEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1GenericEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1GenericEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1GenericEventSource(val *IoArgoprojEventsV1alpha1GenericEventSource) *NullableIoArgoprojEventsV1alpha1GenericEventSource {
	return &NullableIoArgoprojEventsV1alpha1GenericEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1GenericEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1GenericEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


