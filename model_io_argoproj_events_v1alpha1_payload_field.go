/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1PayloadField PayloadField binds a value at path within the event payload against a name.
type IoArgoprojEventsV1alpha1PayloadField struct {
	// Name acts as key that holds the value at the path.
	Name *string `json:"name,omitempty"`
	// Path is the JSONPath of the event's (JSON decoded) data key Path is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'. To access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'. See https://github.com/tidwall/gjson#path-syntax for more information on how to use this.
	Path *string `json:"path,omitempty"`
}

// NewIoArgoprojEventsV1alpha1PayloadField instantiates a new IoArgoprojEventsV1alpha1PayloadField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1PayloadField() *IoArgoprojEventsV1alpha1PayloadField {
	this := IoArgoprojEventsV1alpha1PayloadField{}
	return &this
}

// NewIoArgoprojEventsV1alpha1PayloadFieldWithDefaults instantiates a new IoArgoprojEventsV1alpha1PayloadField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1PayloadFieldWithDefaults() *IoArgoprojEventsV1alpha1PayloadField {
	this := IoArgoprojEventsV1alpha1PayloadField{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PayloadField) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PayloadField) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PayloadField) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IoArgoprojEventsV1alpha1PayloadField) SetName(v string) {
	o.Name = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1PayloadField) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1PayloadField) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1PayloadField) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *IoArgoprojEventsV1alpha1PayloadField) SetPath(v string) {
	o.Path = &v
}

func (o IoArgoprojEventsV1alpha1PayloadField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1PayloadField struct {
	value *IoArgoprojEventsV1alpha1PayloadField
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1PayloadField) Get() *IoArgoprojEventsV1alpha1PayloadField {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1PayloadField) Set(val *IoArgoprojEventsV1alpha1PayloadField) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1PayloadField) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1PayloadField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1PayloadField(val *IoArgoprojEventsV1alpha1PayloadField) *NullableIoArgoprojEventsV1alpha1PayloadField {
	return &NullableIoArgoprojEventsV1alpha1PayloadField{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1PayloadField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1PayloadField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


