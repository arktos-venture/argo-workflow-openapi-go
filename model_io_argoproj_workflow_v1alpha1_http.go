/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1HTTP struct for IoArgoprojWorkflowV1alpha1HTTP
type IoArgoprojWorkflowV1alpha1HTTP struct {
	// Body is content of the HTTP Request
	Body *string `json:"body,omitempty"`
	// Headers are an optional list of headers to send with HTTP requests
	Headers *[]IoArgoprojWorkflowV1alpha1HTTPHeader `json:"headers,omitempty"`
	// Method is HTTP methods for HTTP Request
	Method *string `json:"method,omitempty"`
	// TimeoutSeconds is request timeout for HTTP Request. Default is 30 seconds
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`
	// URL of the HTTP Request
	Url string `json:"url"`
}

// NewIoArgoprojWorkflowV1alpha1HTTP instantiates a new IoArgoprojWorkflowV1alpha1HTTP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1HTTP(url string) *IoArgoprojWorkflowV1alpha1HTTP {
	this := IoArgoprojWorkflowV1alpha1HTTP{}
	this.Url = url
	return &this
}

// NewIoArgoprojWorkflowV1alpha1HTTPWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1HTTP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1HTTPWithDefaults() *IoArgoprojWorkflowV1alpha1HTTP {
	this := IoArgoprojWorkflowV1alpha1HTTP{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *IoArgoprojWorkflowV1alpha1HTTP) SetBody(v string) {
	o.Body = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetHeaders() []IoArgoprojWorkflowV1alpha1HTTPHeader {
	if o == nil || o.Headers == nil {
		var ret []IoArgoprojWorkflowV1alpha1HTTPHeader
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetHeadersOk() (*[]IoArgoprojWorkflowV1alpha1HTTPHeader, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []IoArgoprojWorkflowV1alpha1HTTPHeader and assigns it to the Headers field.
func (o *IoArgoprojWorkflowV1alpha1HTTP) SetHeaders(v []IoArgoprojWorkflowV1alpha1HTTPHeader) {
	o.Headers = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *IoArgoprojWorkflowV1alpha1HTTP) SetMethod(v string) {
	o.Method = &v
}

// GetTimeoutSeconds returns the TimeoutSeconds field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetTimeoutSeconds() int32 {
	if o == nil || o.TimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.TimeoutSeconds
}

// GetTimeoutSecondsOk returns a tuple with the TimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.TimeoutSeconds == nil {
		return nil, false
	}
	return o.TimeoutSeconds, true
}

// HasTimeoutSeconds returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) HasTimeoutSeconds() bool {
	if o != nil && o.TimeoutSeconds != nil {
		return true
	}

	return false
}

// SetTimeoutSeconds gets a reference to the given int32 and assigns it to the TimeoutSeconds field.
func (o *IoArgoprojWorkflowV1alpha1HTTP) SetTimeoutSeconds(v int32) {
	o.TimeoutSeconds = &v
}

// GetUrl returns the Url field value
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1HTTP) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *IoArgoprojWorkflowV1alpha1HTTP) SetUrl(v string) {
	o.Url = v
}

func (o IoArgoprojWorkflowV1alpha1HTTP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.TimeoutSeconds != nil {
		toSerialize["timeoutSeconds"] = o.TimeoutSeconds
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1HTTP struct {
	value *IoArgoprojWorkflowV1alpha1HTTP
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTP) Get() *IoArgoprojWorkflowV1alpha1HTTP {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTP) Set(val *IoArgoprojWorkflowV1alpha1HTTP) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTP) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1HTTP(val *IoArgoprojWorkflowV1alpha1HTTP) *NullableIoArgoprojWorkflowV1alpha1HTTP {
	return &NullableIoArgoprojWorkflowV1alpha1HTTP{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1HTTP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1HTTP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


