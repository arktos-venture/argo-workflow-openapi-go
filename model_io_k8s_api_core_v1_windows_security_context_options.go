/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1WindowsSecurityContextOptions WindowsSecurityContextOptions contain Windows-specific options and credentials.
type IoK8sApiCoreV1WindowsSecurityContextOptions struct {
	// GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpec *string `json:"gmsaCredentialSpec,omitempty"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
	GmsaCredentialSpecName *string `json:"gmsaCredentialSpecName,omitempty"`
	// The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
	RunAsUserName *string `json:"runAsUserName,omitempty"`
}

// NewIoK8sApiCoreV1WindowsSecurityContextOptions instantiates a new IoK8sApiCoreV1WindowsSecurityContextOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1WindowsSecurityContextOptions() *IoK8sApiCoreV1WindowsSecurityContextOptions {
	this := IoK8sApiCoreV1WindowsSecurityContextOptions{}
	return &this
}

// NewIoK8sApiCoreV1WindowsSecurityContextOptionsWithDefaults instantiates a new IoK8sApiCoreV1WindowsSecurityContextOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1WindowsSecurityContextOptionsWithDefaults() *IoK8sApiCoreV1WindowsSecurityContextOptions {
	this := IoK8sApiCoreV1WindowsSecurityContextOptions{}
	return &this
}

// GetGmsaCredentialSpec returns the GmsaCredentialSpec field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) GetGmsaCredentialSpec() string {
	if o == nil || o.GmsaCredentialSpec == nil {
		var ret string
		return ret
	}
	return *o.GmsaCredentialSpec
}

// GetGmsaCredentialSpecOk returns a tuple with the GmsaCredentialSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) GetGmsaCredentialSpecOk() (*string, bool) {
	if o == nil || o.GmsaCredentialSpec == nil {
		return nil, false
	}
	return o.GmsaCredentialSpec, true
}

// HasGmsaCredentialSpec returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) HasGmsaCredentialSpec() bool {
	if o != nil && o.GmsaCredentialSpec != nil {
		return true
	}

	return false
}

// SetGmsaCredentialSpec gets a reference to the given string and assigns it to the GmsaCredentialSpec field.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) SetGmsaCredentialSpec(v string) {
	o.GmsaCredentialSpec = &v
}

// GetGmsaCredentialSpecName returns the GmsaCredentialSpecName field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) GetGmsaCredentialSpecName() string {
	if o == nil || o.GmsaCredentialSpecName == nil {
		var ret string
		return ret
	}
	return *o.GmsaCredentialSpecName
}

// GetGmsaCredentialSpecNameOk returns a tuple with the GmsaCredentialSpecName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) GetGmsaCredentialSpecNameOk() (*string, bool) {
	if o == nil || o.GmsaCredentialSpecName == nil {
		return nil, false
	}
	return o.GmsaCredentialSpecName, true
}

// HasGmsaCredentialSpecName returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) HasGmsaCredentialSpecName() bool {
	if o != nil && o.GmsaCredentialSpecName != nil {
		return true
	}

	return false
}

// SetGmsaCredentialSpecName gets a reference to the given string and assigns it to the GmsaCredentialSpecName field.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) SetGmsaCredentialSpecName(v string) {
	o.GmsaCredentialSpecName = &v
}

// GetRunAsUserName returns the RunAsUserName field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) GetRunAsUserName() string {
	if o == nil || o.RunAsUserName == nil {
		var ret string
		return ret
	}
	return *o.RunAsUserName
}

// GetRunAsUserNameOk returns a tuple with the RunAsUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) GetRunAsUserNameOk() (*string, bool) {
	if o == nil || o.RunAsUserName == nil {
		return nil, false
	}
	return o.RunAsUserName, true
}

// HasRunAsUserName returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) HasRunAsUserName() bool {
	if o != nil && o.RunAsUserName != nil {
		return true
	}

	return false
}

// SetRunAsUserName gets a reference to the given string and assigns it to the RunAsUserName field.
func (o *IoK8sApiCoreV1WindowsSecurityContextOptions) SetRunAsUserName(v string) {
	o.RunAsUserName = &v
}

func (o IoK8sApiCoreV1WindowsSecurityContextOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GmsaCredentialSpec != nil {
		toSerialize["gmsaCredentialSpec"] = o.GmsaCredentialSpec
	}
	if o.GmsaCredentialSpecName != nil {
		toSerialize["gmsaCredentialSpecName"] = o.GmsaCredentialSpecName
	}
	if o.RunAsUserName != nil {
		toSerialize["runAsUserName"] = o.RunAsUserName
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1WindowsSecurityContextOptions struct {
	value *IoK8sApiCoreV1WindowsSecurityContextOptions
	isSet bool
}

func (v NullableIoK8sApiCoreV1WindowsSecurityContextOptions) Get() *IoK8sApiCoreV1WindowsSecurityContextOptions {
	return v.value
}

func (v *NullableIoK8sApiCoreV1WindowsSecurityContextOptions) Set(val *IoK8sApiCoreV1WindowsSecurityContextOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1WindowsSecurityContextOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1WindowsSecurityContextOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1WindowsSecurityContextOptions(val *IoK8sApiCoreV1WindowsSecurityContextOptions) *NullableIoK8sApiCoreV1WindowsSecurityContextOptions {
	return &NullableIoK8sApiCoreV1WindowsSecurityContextOptions{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1WindowsSecurityContextOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1WindowsSecurityContextOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


