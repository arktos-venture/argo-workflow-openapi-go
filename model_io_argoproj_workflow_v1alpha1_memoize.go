/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Memoize Memoization enables caching for the Outputs of the template
type IoArgoprojWorkflowV1alpha1Memoize struct {
	Cache IoArgoprojWorkflowV1alpha1Cache `json:"cache"`
	// Key is the key to use as the caching key
	Key string `json:"key"`
	// MaxAge is the maximum age (e.g. \"180s\", \"24h\") of an entry that is still considered valid. If an entry is older than the MaxAge, it will be ignored.
	MaxAge string `json:"maxAge"`
}

// NewIoArgoprojWorkflowV1alpha1Memoize instantiates a new IoArgoprojWorkflowV1alpha1Memoize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Memoize(cache IoArgoprojWorkflowV1alpha1Cache, key string, maxAge string) *IoArgoprojWorkflowV1alpha1Memoize {
	this := IoArgoprojWorkflowV1alpha1Memoize{}
	this.Cache = cache
	this.Key = key
	this.MaxAge = maxAge
	return &this
}

// NewIoArgoprojWorkflowV1alpha1MemoizeWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Memoize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1MemoizeWithDefaults() *IoArgoprojWorkflowV1alpha1Memoize {
	this := IoArgoprojWorkflowV1alpha1Memoize{}
	return &this
}

// GetCache returns the Cache field value
func (o *IoArgoprojWorkflowV1alpha1Memoize) GetCache() IoArgoprojWorkflowV1alpha1Cache {
	if o == nil {
		var ret IoArgoprojWorkflowV1alpha1Cache
		return ret
	}

	return o.Cache
}

// GetCacheOk returns a tuple with the Cache field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Memoize) GetCacheOk() (*IoArgoprojWorkflowV1alpha1Cache, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cache, true
}

// SetCache sets field value
func (o *IoArgoprojWorkflowV1alpha1Memoize) SetCache(v IoArgoprojWorkflowV1alpha1Cache) {
	o.Cache = v
}

// GetKey returns the Key field value
func (o *IoArgoprojWorkflowV1alpha1Memoize) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Memoize) GetKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *IoArgoprojWorkflowV1alpha1Memoize) SetKey(v string) {
	o.Key = v
}

// GetMaxAge returns the MaxAge field value
func (o *IoArgoprojWorkflowV1alpha1Memoize) GetMaxAge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MaxAge
}

// GetMaxAgeOk returns a tuple with the MaxAge field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Memoize) GetMaxAgeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MaxAge, true
}

// SetMaxAge sets field value
func (o *IoArgoprojWorkflowV1alpha1Memoize) SetMaxAge(v string) {
	o.MaxAge = v
}

func (o IoArgoprojWorkflowV1alpha1Memoize) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cache"] = o.Cache
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["maxAge"] = o.MaxAge
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Memoize struct {
	value *IoArgoprojWorkflowV1alpha1Memoize
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Memoize) Get() *IoArgoprojWorkflowV1alpha1Memoize {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Memoize) Set(val *IoArgoprojWorkflowV1alpha1Memoize) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Memoize) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Memoize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Memoize(val *IoArgoprojWorkflowV1alpha1Memoize) *NullableIoArgoprojWorkflowV1alpha1Memoize {
	return &NullableIoArgoprojWorkflowV1alpha1Memoize{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Memoize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Memoize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


