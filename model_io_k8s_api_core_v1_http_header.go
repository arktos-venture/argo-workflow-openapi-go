/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1HTTPHeader HTTPHeader describes a custom header to be used in HTTP probes
type IoK8sApiCoreV1HTTPHeader struct {
	// The header field name
	Name string `json:"name"`
	// The header field value
	Value string `json:"value"`
}

// NewIoK8sApiCoreV1HTTPHeader instantiates a new IoK8sApiCoreV1HTTPHeader object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1HTTPHeader(name string, value string) *IoK8sApiCoreV1HTTPHeader {
	this := IoK8sApiCoreV1HTTPHeader{}
	this.Name = name
	this.Value = value
	return &this
}

// NewIoK8sApiCoreV1HTTPHeaderWithDefaults instantiates a new IoK8sApiCoreV1HTTPHeader object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1HTTPHeaderWithDefaults() *IoK8sApiCoreV1HTTPHeader {
	this := IoK8sApiCoreV1HTTPHeader{}
	return &this
}

// GetName returns the Name field value
func (o *IoK8sApiCoreV1HTTPHeader) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1HTTPHeader) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoK8sApiCoreV1HTTPHeader) SetName(v string) {
	o.Name = v
}

// GetValue returns the Value field value
func (o *IoK8sApiCoreV1HTTPHeader) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1HTTPHeader) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *IoK8sApiCoreV1HTTPHeader) SetValue(v string) {
	o.Value = v
}

func (o IoK8sApiCoreV1HTTPHeader) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1HTTPHeader struct {
	value *IoK8sApiCoreV1HTTPHeader
	isSet bool
}

func (v NullableIoK8sApiCoreV1HTTPHeader) Get() *IoK8sApiCoreV1HTTPHeader {
	return v.value
}

func (v *NullableIoK8sApiCoreV1HTTPHeader) Set(val *IoK8sApiCoreV1HTTPHeader) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1HTTPHeader) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1HTTPHeader) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1HTTPHeader(val *IoK8sApiCoreV1HTTPHeader) *NullableIoK8sApiCoreV1HTTPHeader {
	return &NullableIoK8sApiCoreV1HTTPHeader{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1HTTPHeader) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1HTTPHeader) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


