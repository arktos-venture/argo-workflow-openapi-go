/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1TypedLocalObjectReference TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.
type IoK8sApiCoreV1TypedLocalObjectReference struct {
	// APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
	ApiGroup *string `json:"apiGroup,omitempty"`
	// Kind is the type of resource being referenced
	Kind string `json:"kind"`
	// Name is the name of resource being referenced
	Name string `json:"name"`
}

// NewIoK8sApiCoreV1TypedLocalObjectReference instantiates a new IoK8sApiCoreV1TypedLocalObjectReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1TypedLocalObjectReference(kind string, name string) *IoK8sApiCoreV1TypedLocalObjectReference {
	this := IoK8sApiCoreV1TypedLocalObjectReference{}
	this.Kind = kind
	this.Name = name
	return &this
}

// NewIoK8sApiCoreV1TypedLocalObjectReferenceWithDefaults instantiates a new IoK8sApiCoreV1TypedLocalObjectReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1TypedLocalObjectReferenceWithDefaults() *IoK8sApiCoreV1TypedLocalObjectReference {
	this := IoK8sApiCoreV1TypedLocalObjectReference{}
	return &this
}

// GetApiGroup returns the ApiGroup field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1TypedLocalObjectReference) GetApiGroup() string {
	if o == nil || o.ApiGroup == nil {
		var ret string
		return ret
	}
	return *o.ApiGroup
}

// GetApiGroupOk returns a tuple with the ApiGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1TypedLocalObjectReference) GetApiGroupOk() (*string, bool) {
	if o == nil || o.ApiGroup == nil {
		return nil, false
	}
	return o.ApiGroup, true
}

// HasApiGroup returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1TypedLocalObjectReference) HasApiGroup() bool {
	if o != nil && o.ApiGroup != nil {
		return true
	}

	return false
}

// SetApiGroup gets a reference to the given string and assigns it to the ApiGroup field.
func (o *IoK8sApiCoreV1TypedLocalObjectReference) SetApiGroup(v string) {
	o.ApiGroup = &v
}

// GetKind returns the Kind field value
func (o *IoK8sApiCoreV1TypedLocalObjectReference) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1TypedLocalObjectReference) GetKindOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *IoK8sApiCoreV1TypedLocalObjectReference) SetKind(v string) {
	o.Kind = v
}

// GetName returns the Name field value
func (o *IoK8sApiCoreV1TypedLocalObjectReference) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1TypedLocalObjectReference) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoK8sApiCoreV1TypedLocalObjectReference) SetName(v string) {
	o.Name = v
}

func (o IoK8sApiCoreV1TypedLocalObjectReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiGroup != nil {
		toSerialize["apiGroup"] = o.ApiGroup
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1TypedLocalObjectReference struct {
	value *IoK8sApiCoreV1TypedLocalObjectReference
	isSet bool
}

func (v NullableIoK8sApiCoreV1TypedLocalObjectReference) Get() *IoK8sApiCoreV1TypedLocalObjectReference {
	return v.value
}

func (v *NullableIoK8sApiCoreV1TypedLocalObjectReference) Set(val *IoK8sApiCoreV1TypedLocalObjectReference) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1TypedLocalObjectReference) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1TypedLocalObjectReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1TypedLocalObjectReference(val *IoK8sApiCoreV1TypedLocalObjectReference) *NullableIoK8sApiCoreV1TypedLocalObjectReference {
	return &NullableIoK8sApiCoreV1TypedLocalObjectReference{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1TypedLocalObjectReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1TypedLocalObjectReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


