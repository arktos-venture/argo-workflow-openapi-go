/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1ValueFromSource struct for IoArgoprojEventsV1alpha1ValueFromSource
type IoArgoprojEventsV1alpha1ValueFromSource struct {
	ConfigMapKeyRef *IoK8sApiCoreV1ConfigMapKeySelector `json:"configMapKeyRef,omitempty"`
	SecretKeyRef *IoK8sApiCoreV1SecretKeySelector `json:"secretKeyRef,omitempty"`
}

// NewIoArgoprojEventsV1alpha1ValueFromSource instantiates a new IoArgoprojEventsV1alpha1ValueFromSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1ValueFromSource() *IoArgoprojEventsV1alpha1ValueFromSource {
	this := IoArgoprojEventsV1alpha1ValueFromSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1ValueFromSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1ValueFromSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1ValueFromSourceWithDefaults() *IoArgoprojEventsV1alpha1ValueFromSource {
	this := IoArgoprojEventsV1alpha1ValueFromSource{}
	return &this
}

// GetConfigMapKeyRef returns the ConfigMapKeyRef field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) GetConfigMapKeyRef() IoK8sApiCoreV1ConfigMapKeySelector {
	if o == nil || o.ConfigMapKeyRef == nil {
		var ret IoK8sApiCoreV1ConfigMapKeySelector
		return ret
	}
	return *o.ConfigMapKeyRef
}

// GetConfigMapKeyRefOk returns a tuple with the ConfigMapKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) GetConfigMapKeyRefOk() (*IoK8sApiCoreV1ConfigMapKeySelector, bool) {
	if o == nil || o.ConfigMapKeyRef == nil {
		return nil, false
	}
	return o.ConfigMapKeyRef, true
}

// HasConfigMapKeyRef returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) HasConfigMapKeyRef() bool {
	if o != nil && o.ConfigMapKeyRef != nil {
		return true
	}

	return false
}

// SetConfigMapKeyRef gets a reference to the given IoK8sApiCoreV1ConfigMapKeySelector and assigns it to the ConfigMapKeyRef field.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) SetConfigMapKeyRef(v IoK8sApiCoreV1ConfigMapKeySelector) {
	o.ConfigMapKeyRef = &v
}

// GetSecretKeyRef returns the SecretKeyRef field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) GetSecretKeyRef() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.SecretKeyRef == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.SecretKeyRef
}

// GetSecretKeyRefOk returns a tuple with the SecretKeyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) GetSecretKeyRefOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.SecretKeyRef == nil {
		return nil, false
	}
	return o.SecretKeyRef, true
}

// HasSecretKeyRef returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) HasSecretKeyRef() bool {
	if o != nil && o.SecretKeyRef != nil {
		return true
	}

	return false
}

// SetSecretKeyRef gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the SecretKeyRef field.
func (o *IoArgoprojEventsV1alpha1ValueFromSource) SetSecretKeyRef(v IoK8sApiCoreV1SecretKeySelector) {
	o.SecretKeyRef = &v
}

func (o IoArgoprojEventsV1alpha1ValueFromSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigMapKeyRef != nil {
		toSerialize["configMapKeyRef"] = o.ConfigMapKeyRef
	}
	if o.SecretKeyRef != nil {
		toSerialize["secretKeyRef"] = o.SecretKeyRef
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1ValueFromSource struct {
	value *IoArgoprojEventsV1alpha1ValueFromSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1ValueFromSource) Get() *IoArgoprojEventsV1alpha1ValueFromSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1ValueFromSource) Set(val *IoArgoprojEventsV1alpha1ValueFromSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1ValueFromSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1ValueFromSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1ValueFromSource(val *IoArgoprojEventsV1alpha1ValueFromSource) *NullableIoArgoprojEventsV1alpha1ValueFromSource {
	return &NullableIoArgoprojEventsV1alpha1ValueFromSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1ValueFromSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1ValueFromSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


