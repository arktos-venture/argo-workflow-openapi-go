/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SensorCreateSensorRequest struct for SensorCreateSensorRequest
type SensorCreateSensorRequest struct {
	CreateOptions *IoK8sApimachineryPkgApisMetaV1CreateOptions `json:"createOptions,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Sensor *IoArgoprojEventsV1alpha1Sensor `json:"sensor,omitempty"`
}

// NewSensorCreateSensorRequest instantiates a new SensorCreateSensorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSensorCreateSensorRequest() *SensorCreateSensorRequest {
	this := SensorCreateSensorRequest{}
	return &this
}

// NewSensorCreateSensorRequestWithDefaults instantiates a new SensorCreateSensorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSensorCreateSensorRequestWithDefaults() *SensorCreateSensorRequest {
	this := SensorCreateSensorRequest{}
	return &this
}

// GetCreateOptions returns the CreateOptions field value if set, zero value otherwise.
func (o *SensorCreateSensorRequest) GetCreateOptions() IoK8sApimachineryPkgApisMetaV1CreateOptions {
	if o == nil || o.CreateOptions == nil {
		var ret IoK8sApimachineryPkgApisMetaV1CreateOptions
		return ret
	}
	return *o.CreateOptions
}

// GetCreateOptionsOk returns a tuple with the CreateOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensorCreateSensorRequest) GetCreateOptionsOk() (*IoK8sApimachineryPkgApisMetaV1CreateOptions, bool) {
	if o == nil || o.CreateOptions == nil {
		return nil, false
	}
	return o.CreateOptions, true
}

// HasCreateOptions returns a boolean if a field has been set.
func (o *SensorCreateSensorRequest) HasCreateOptions() bool {
	if o != nil && o.CreateOptions != nil {
		return true
	}

	return false
}

// SetCreateOptions gets a reference to the given IoK8sApimachineryPkgApisMetaV1CreateOptions and assigns it to the CreateOptions field.
func (o *SensorCreateSensorRequest) SetCreateOptions(v IoK8sApimachineryPkgApisMetaV1CreateOptions) {
	o.CreateOptions = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *SensorCreateSensorRequest) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensorCreateSensorRequest) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *SensorCreateSensorRequest) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *SensorCreateSensorRequest) SetNamespace(v string) {
	o.Namespace = &v
}

// GetSensor returns the Sensor field value if set, zero value otherwise.
func (o *SensorCreateSensorRequest) GetSensor() IoArgoprojEventsV1alpha1Sensor {
	if o == nil || o.Sensor == nil {
		var ret IoArgoprojEventsV1alpha1Sensor
		return ret
	}
	return *o.Sensor
}

// GetSensorOk returns a tuple with the Sensor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensorCreateSensorRequest) GetSensorOk() (*IoArgoprojEventsV1alpha1Sensor, bool) {
	if o == nil || o.Sensor == nil {
		return nil, false
	}
	return o.Sensor, true
}

// HasSensor returns a boolean if a field has been set.
func (o *SensorCreateSensorRequest) HasSensor() bool {
	if o != nil && o.Sensor != nil {
		return true
	}

	return false
}

// SetSensor gets a reference to the given IoArgoprojEventsV1alpha1Sensor and assigns it to the Sensor field.
func (o *SensorCreateSensorRequest) SetSensor(v IoArgoprojEventsV1alpha1Sensor) {
	o.Sensor = &v
}

func (o SensorCreateSensorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateOptions != nil {
		toSerialize["createOptions"] = o.CreateOptions
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Sensor != nil {
		toSerialize["sensor"] = o.Sensor
	}
	return json.Marshal(toSerialize)
}

type NullableSensorCreateSensorRequest struct {
	value *SensorCreateSensorRequest
	isSet bool
}

func (v NullableSensorCreateSensorRequest) Get() *SensorCreateSensorRequest {
	return v.value
}

func (v *NullableSensorCreateSensorRequest) Set(val *SensorCreateSensorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSensorCreateSensorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSensorCreateSensorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSensorCreateSensorRequest(val *SensorCreateSensorRequest) *NullableSensorCreateSensorRequest {
	return &NullableSensorCreateSensorRequest{value: val, isSet: true}
}

func (v NullableSensorCreateSensorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSensorCreateSensorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


