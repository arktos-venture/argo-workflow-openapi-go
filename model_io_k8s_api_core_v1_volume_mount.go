/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1VolumeMount VolumeMount describes a mounting of a Volume within a container.
type IoK8sApiCoreV1VolumeMount struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath string `json:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
	MountPropagation *string `json:"mountPropagation,omitempty"`
	// This must match the Name of a Volume.
	Name string `json:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly *bool `json:"readOnly,omitempty"`
	// Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).
	SubPath *string `json:"subPath,omitempty"`
	// Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr *string `json:"subPathExpr,omitempty"`
}

// NewIoK8sApiCoreV1VolumeMount instantiates a new IoK8sApiCoreV1VolumeMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1VolumeMount(mountPath string, name string) *IoK8sApiCoreV1VolumeMount {
	this := IoK8sApiCoreV1VolumeMount{}
	this.MountPath = mountPath
	this.Name = name
	return &this
}

// NewIoK8sApiCoreV1VolumeMountWithDefaults instantiates a new IoK8sApiCoreV1VolumeMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1VolumeMountWithDefaults() *IoK8sApiCoreV1VolumeMount {
	this := IoK8sApiCoreV1VolumeMount{}
	return &this
}

// GetMountPath returns the MountPath field value
func (o *IoK8sApiCoreV1VolumeMount) GetMountPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPath
}

// GetMountPathOk returns a tuple with the MountPath field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeMount) GetMountPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MountPath, true
}

// SetMountPath sets field value
func (o *IoK8sApiCoreV1VolumeMount) SetMountPath(v string) {
	o.MountPath = v
}

// GetMountPropagation returns the MountPropagation field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1VolumeMount) GetMountPropagation() string {
	if o == nil || o.MountPropagation == nil {
		var ret string
		return ret
	}
	return *o.MountPropagation
}

// GetMountPropagationOk returns a tuple with the MountPropagation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeMount) GetMountPropagationOk() (*string, bool) {
	if o == nil || o.MountPropagation == nil {
		return nil, false
	}
	return o.MountPropagation, true
}

// HasMountPropagation returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1VolumeMount) HasMountPropagation() bool {
	if o != nil && o.MountPropagation != nil {
		return true
	}

	return false
}

// SetMountPropagation gets a reference to the given string and assigns it to the MountPropagation field.
func (o *IoK8sApiCoreV1VolumeMount) SetMountPropagation(v string) {
	o.MountPropagation = &v
}

// GetName returns the Name field value
func (o *IoK8sApiCoreV1VolumeMount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeMount) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoK8sApiCoreV1VolumeMount) SetName(v string) {
	o.Name = v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1VolumeMount) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeMount) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1VolumeMount) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *IoK8sApiCoreV1VolumeMount) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetSubPath returns the SubPath field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1VolumeMount) GetSubPath() string {
	if o == nil || o.SubPath == nil {
		var ret string
		return ret
	}
	return *o.SubPath
}

// GetSubPathOk returns a tuple with the SubPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeMount) GetSubPathOk() (*string, bool) {
	if o == nil || o.SubPath == nil {
		return nil, false
	}
	return o.SubPath, true
}

// HasSubPath returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1VolumeMount) HasSubPath() bool {
	if o != nil && o.SubPath != nil {
		return true
	}

	return false
}

// SetSubPath gets a reference to the given string and assigns it to the SubPath field.
func (o *IoK8sApiCoreV1VolumeMount) SetSubPath(v string) {
	o.SubPath = &v
}

// GetSubPathExpr returns the SubPathExpr field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1VolumeMount) GetSubPathExpr() string {
	if o == nil || o.SubPathExpr == nil {
		var ret string
		return ret
	}
	return *o.SubPathExpr
}

// GetSubPathExprOk returns a tuple with the SubPathExpr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeMount) GetSubPathExprOk() (*string, bool) {
	if o == nil || o.SubPathExpr == nil {
		return nil, false
	}
	return o.SubPathExpr, true
}

// HasSubPathExpr returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1VolumeMount) HasSubPathExpr() bool {
	if o != nil && o.SubPathExpr != nil {
		return true
	}

	return false
}

// SetSubPathExpr gets a reference to the given string and assigns it to the SubPathExpr field.
func (o *IoK8sApiCoreV1VolumeMount) SetSubPathExpr(v string) {
	o.SubPathExpr = &v
}

func (o IoK8sApiCoreV1VolumeMount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mountPath"] = o.MountPath
	}
	if o.MountPropagation != nil {
		toSerialize["mountPropagation"] = o.MountPropagation
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ReadOnly != nil {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if o.SubPath != nil {
		toSerialize["subPath"] = o.SubPath
	}
	if o.SubPathExpr != nil {
		toSerialize["subPathExpr"] = o.SubPathExpr
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1VolumeMount struct {
	value *IoK8sApiCoreV1VolumeMount
	isSet bool
}

func (v NullableIoK8sApiCoreV1VolumeMount) Get() *IoK8sApiCoreV1VolumeMount {
	return v.value
}

func (v *NullableIoK8sApiCoreV1VolumeMount) Set(val *IoK8sApiCoreV1VolumeMount) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1VolumeMount) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1VolumeMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1VolumeMount(val *IoK8sApiCoreV1VolumeMount) *NullableIoK8sApiCoreV1VolumeMount {
	return &NullableIoK8sApiCoreV1VolumeMount{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1VolumeMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1VolumeMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


