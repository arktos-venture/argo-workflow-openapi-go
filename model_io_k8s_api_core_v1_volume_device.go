/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1VolumeDevice volumeDevice describes a mapping of a raw block device within a container.
type IoK8sApiCoreV1VolumeDevice struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath string `json:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name string `json:"name"`
}

// NewIoK8sApiCoreV1VolumeDevice instantiates a new IoK8sApiCoreV1VolumeDevice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1VolumeDevice(devicePath string, name string) *IoK8sApiCoreV1VolumeDevice {
	this := IoK8sApiCoreV1VolumeDevice{}
	this.DevicePath = devicePath
	this.Name = name
	return &this
}

// NewIoK8sApiCoreV1VolumeDeviceWithDefaults instantiates a new IoK8sApiCoreV1VolumeDevice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1VolumeDeviceWithDefaults() *IoK8sApiCoreV1VolumeDevice {
	this := IoK8sApiCoreV1VolumeDevice{}
	return &this
}

// GetDevicePath returns the DevicePath field value
func (o *IoK8sApiCoreV1VolumeDevice) GetDevicePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DevicePath
}

// GetDevicePathOk returns a tuple with the DevicePath field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeDevice) GetDevicePathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DevicePath, true
}

// SetDevicePath sets field value
func (o *IoK8sApiCoreV1VolumeDevice) SetDevicePath(v string) {
	o.DevicePath = v
}

// GetName returns the Name field value
func (o *IoK8sApiCoreV1VolumeDevice) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1VolumeDevice) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoK8sApiCoreV1VolumeDevice) SetName(v string) {
	o.Name = v
}

func (o IoK8sApiCoreV1VolumeDevice) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["devicePath"] = o.DevicePath
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1VolumeDevice struct {
	value *IoK8sApiCoreV1VolumeDevice
	isSet bool
}

func (v NullableIoK8sApiCoreV1VolumeDevice) Get() *IoK8sApiCoreV1VolumeDevice {
	return v.value
}

func (v *NullableIoK8sApiCoreV1VolumeDevice) Set(val *IoK8sApiCoreV1VolumeDevice) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1VolumeDevice) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1VolumeDevice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1VolumeDevice(val *IoK8sApiCoreV1VolumeDevice) *NullableIoK8sApiCoreV1VolumeDevice {
	return &NullableIoK8sApiCoreV1VolumeDevice{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1VolumeDevice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1VolumeDevice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


