/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus struct for IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
type IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus struct {
	ArtifactRepository *IoArgoprojWorkflowV1alpha1ArtifactRepository `json:"artifactRepository,omitempty"`
	// The name of the config map. Defaults to \"artifact-repositories\".
	ConfigMap *string `json:"configMap,omitempty"`
	// If this ref represents the default artifact repository, rather than a config map.
	Default *bool `json:"default,omitempty"`
	// The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.
	Key *string `json:"key,omitempty"`
	// The namespace of the config map. Defaults to the workflow's namespace, or the controller's namespace (if found).
	Namespace *string `json:"namespace,omitempty"`
}

// NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus instantiates a new IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus() *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
	this := IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus{}
	return &this
}

// NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatusWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatusWithDefaults() *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
	this := IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus{}
	return &this
}

// GetArtifactRepository returns the ArtifactRepository field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetArtifactRepository() IoArgoprojWorkflowV1alpha1ArtifactRepository {
	if o == nil || o.ArtifactRepository == nil {
		var ret IoArgoprojWorkflowV1alpha1ArtifactRepository
		return ret
	}
	return *o.ArtifactRepository
}

// GetArtifactRepositoryOk returns a tuple with the ArtifactRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetArtifactRepositoryOk() (*IoArgoprojWorkflowV1alpha1ArtifactRepository, bool) {
	if o == nil || o.ArtifactRepository == nil {
		return nil, false
	}
	return o.ArtifactRepository, true
}

// HasArtifactRepository returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) HasArtifactRepository() bool {
	if o != nil && o.ArtifactRepository != nil {
		return true
	}

	return false
}

// SetArtifactRepository gets a reference to the given IoArgoprojWorkflowV1alpha1ArtifactRepository and assigns it to the ArtifactRepository field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) SetArtifactRepository(v IoArgoprojWorkflowV1alpha1ArtifactRepository) {
	o.ArtifactRepository = &v
}

// GetConfigMap returns the ConfigMap field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetConfigMap() string {
	if o == nil || o.ConfigMap == nil {
		var ret string
		return ret
	}
	return *o.ConfigMap
}

// GetConfigMapOk returns a tuple with the ConfigMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetConfigMapOk() (*string, bool) {
	if o == nil || o.ConfigMap == nil {
		return nil, false
	}
	return o.ConfigMap, true
}

// HasConfigMap returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) HasConfigMap() bool {
	if o != nil && o.ConfigMap != nil {
		return true
	}

	return false
}

// SetConfigMap gets a reference to the given string and assigns it to the ConfigMap field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) SetConfigMap(v string) {
	o.ConfigMap = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) SetDefault(v bool) {
	o.Default = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) SetKey(v string) {
	o.Key = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) SetNamespace(v string) {
	o.Namespace = &v
}

func (o IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArtifactRepository != nil {
		toSerialize["artifactRepository"] = o.ArtifactRepository
	}
	if o.ConfigMap != nil {
		toSerialize["configMap"] = o.ConfigMap
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus struct {
	value *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) Get() *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) Set(val *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus(val *IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
	return &NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


