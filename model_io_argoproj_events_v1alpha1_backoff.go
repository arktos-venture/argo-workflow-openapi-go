/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1Backoff struct for IoArgoprojEventsV1alpha1Backoff
type IoArgoprojEventsV1alpha1Backoff struct {
	Duration *IoArgoprojEventsV1alpha1Int64OrString `json:"duration,omitempty"`
	Factor *IoArgoprojEventsV1alpha1Amount `json:"factor,omitempty"`
	Jitter *IoArgoprojEventsV1alpha1Amount `json:"jitter,omitempty"`
	Steps *int32 `json:"steps,omitempty"`
}

// NewIoArgoprojEventsV1alpha1Backoff instantiates a new IoArgoprojEventsV1alpha1Backoff object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1Backoff() *IoArgoprojEventsV1alpha1Backoff {
	this := IoArgoprojEventsV1alpha1Backoff{}
	return &this
}

// NewIoArgoprojEventsV1alpha1BackoffWithDefaults instantiates a new IoArgoprojEventsV1alpha1Backoff object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1BackoffWithDefaults() *IoArgoprojEventsV1alpha1Backoff {
	this := IoArgoprojEventsV1alpha1Backoff{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1Backoff) GetDuration() IoArgoprojEventsV1alpha1Int64OrString {
	if o == nil || o.Duration == nil {
		var ret IoArgoprojEventsV1alpha1Int64OrString
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) GetDurationOk() (*IoArgoprojEventsV1alpha1Int64OrString, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given IoArgoprojEventsV1alpha1Int64OrString and assigns it to the Duration field.
func (o *IoArgoprojEventsV1alpha1Backoff) SetDuration(v IoArgoprojEventsV1alpha1Int64OrString) {
	o.Duration = &v
}

// GetFactor returns the Factor field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1Backoff) GetFactor() IoArgoprojEventsV1alpha1Amount {
	if o == nil || o.Factor == nil {
		var ret IoArgoprojEventsV1alpha1Amount
		return ret
	}
	return *o.Factor
}

// GetFactorOk returns a tuple with the Factor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) GetFactorOk() (*IoArgoprojEventsV1alpha1Amount, bool) {
	if o == nil || o.Factor == nil {
		return nil, false
	}
	return o.Factor, true
}

// HasFactor returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) HasFactor() bool {
	if o != nil && o.Factor != nil {
		return true
	}

	return false
}

// SetFactor gets a reference to the given IoArgoprojEventsV1alpha1Amount and assigns it to the Factor field.
func (o *IoArgoprojEventsV1alpha1Backoff) SetFactor(v IoArgoprojEventsV1alpha1Amount) {
	o.Factor = &v
}

// GetJitter returns the Jitter field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1Backoff) GetJitter() IoArgoprojEventsV1alpha1Amount {
	if o == nil || o.Jitter == nil {
		var ret IoArgoprojEventsV1alpha1Amount
		return ret
	}
	return *o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) GetJitterOk() (*IoArgoprojEventsV1alpha1Amount, bool) {
	if o == nil || o.Jitter == nil {
		return nil, false
	}
	return o.Jitter, true
}

// HasJitter returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) HasJitter() bool {
	if o != nil && o.Jitter != nil {
		return true
	}

	return false
}

// SetJitter gets a reference to the given IoArgoprojEventsV1alpha1Amount and assigns it to the Jitter field.
func (o *IoArgoprojEventsV1alpha1Backoff) SetJitter(v IoArgoprojEventsV1alpha1Amount) {
	o.Jitter = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1Backoff) GetSteps() int32 {
	if o == nil || o.Steps == nil {
		var ret int32
		return ret
	}
	return *o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) GetStepsOk() (*int32, bool) {
	if o == nil || o.Steps == nil {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1Backoff) HasSteps() bool {
	if o != nil && o.Steps != nil {
		return true
	}

	return false
}

// SetSteps gets a reference to the given int32 and assigns it to the Steps field.
func (o *IoArgoprojEventsV1alpha1Backoff) SetSteps(v int32) {
	o.Steps = &v
}

func (o IoArgoprojEventsV1alpha1Backoff) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Factor != nil {
		toSerialize["factor"] = o.Factor
	}
	if o.Jitter != nil {
		toSerialize["jitter"] = o.Jitter
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1Backoff struct {
	value *IoArgoprojEventsV1alpha1Backoff
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1Backoff) Get() *IoArgoprojEventsV1alpha1Backoff {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1Backoff) Set(val *IoArgoprojEventsV1alpha1Backoff) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1Backoff) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1Backoff) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1Backoff(val *IoArgoprojEventsV1alpha1Backoff) *NullableIoArgoprojEventsV1alpha1Backoff {
	return &NullableIoArgoprojEventsV1alpha1Backoff{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1Backoff) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1Backoff) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


