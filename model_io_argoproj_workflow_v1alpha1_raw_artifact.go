/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1RawArtifact RawArtifact allows raw string content to be placed as an artifact in a container
type IoArgoprojWorkflowV1alpha1RawArtifact struct {
	// Data is the string contents of the artifact
	Data string `json:"data"`
}

// NewIoArgoprojWorkflowV1alpha1RawArtifact instantiates a new IoArgoprojWorkflowV1alpha1RawArtifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1RawArtifact(data string) *IoArgoprojWorkflowV1alpha1RawArtifact {
	this := IoArgoprojWorkflowV1alpha1RawArtifact{}
	this.Data = data
	return &this
}

// NewIoArgoprojWorkflowV1alpha1RawArtifactWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1RawArtifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1RawArtifactWithDefaults() *IoArgoprojWorkflowV1alpha1RawArtifact {
	this := IoArgoprojWorkflowV1alpha1RawArtifact{}
	return &this
}

// GetData returns the Data field value
func (o *IoArgoprojWorkflowV1alpha1RawArtifact) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1RawArtifact) GetDataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *IoArgoprojWorkflowV1alpha1RawArtifact) SetData(v string) {
	o.Data = v
}

func (o IoArgoprojWorkflowV1alpha1RawArtifact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1RawArtifact struct {
	value *IoArgoprojWorkflowV1alpha1RawArtifact
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1RawArtifact) Get() *IoArgoprojWorkflowV1alpha1RawArtifact {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1RawArtifact) Set(val *IoArgoprojWorkflowV1alpha1RawArtifact) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1RawArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1RawArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1RawArtifact(val *IoArgoprojWorkflowV1alpha1RawArtifact) *NullableIoArgoprojWorkflowV1alpha1RawArtifact {
	return &NullableIoArgoprojWorkflowV1alpha1RawArtifact{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1RawArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1RawArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


