/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1KafkaConsumerGroup struct for IoArgoprojEventsV1alpha1KafkaConsumerGroup
type IoArgoprojEventsV1alpha1KafkaConsumerGroup struct {
	GroupName *string `json:"groupName,omitempty"`
	Oldest *bool `json:"oldest,omitempty"`
	RebalanceStrategy *string `json:"rebalanceStrategy,omitempty"`
}

// NewIoArgoprojEventsV1alpha1KafkaConsumerGroup instantiates a new IoArgoprojEventsV1alpha1KafkaConsumerGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1KafkaConsumerGroup() *IoArgoprojEventsV1alpha1KafkaConsumerGroup {
	this := IoArgoprojEventsV1alpha1KafkaConsumerGroup{}
	return &this
}

// NewIoArgoprojEventsV1alpha1KafkaConsumerGroupWithDefaults instantiates a new IoArgoprojEventsV1alpha1KafkaConsumerGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1KafkaConsumerGroupWithDefaults() *IoArgoprojEventsV1alpha1KafkaConsumerGroup {
	this := IoArgoprojEventsV1alpha1KafkaConsumerGroup{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) SetGroupName(v string) {
	o.GroupName = &v
}

// GetOldest returns the Oldest field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) GetOldest() bool {
	if o == nil || o.Oldest == nil {
		var ret bool
		return ret
	}
	return *o.Oldest
}

// GetOldestOk returns a tuple with the Oldest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) GetOldestOk() (*bool, bool) {
	if o == nil || o.Oldest == nil {
		return nil, false
	}
	return o.Oldest, true
}

// HasOldest returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) HasOldest() bool {
	if o != nil && o.Oldest != nil {
		return true
	}

	return false
}

// SetOldest gets a reference to the given bool and assigns it to the Oldest field.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) SetOldest(v bool) {
	o.Oldest = &v
}

// GetRebalanceStrategy returns the RebalanceStrategy field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) GetRebalanceStrategy() string {
	if o == nil || o.RebalanceStrategy == nil {
		var ret string
		return ret
	}
	return *o.RebalanceStrategy
}

// GetRebalanceStrategyOk returns a tuple with the RebalanceStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) GetRebalanceStrategyOk() (*string, bool) {
	if o == nil || o.RebalanceStrategy == nil {
		return nil, false
	}
	return o.RebalanceStrategy, true
}

// HasRebalanceStrategy returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) HasRebalanceStrategy() bool {
	if o != nil && o.RebalanceStrategy != nil {
		return true
	}

	return false
}

// SetRebalanceStrategy gets a reference to the given string and assigns it to the RebalanceStrategy field.
func (o *IoArgoprojEventsV1alpha1KafkaConsumerGroup) SetRebalanceStrategy(v string) {
	o.RebalanceStrategy = &v
}

func (o IoArgoprojEventsV1alpha1KafkaConsumerGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupName != nil {
		toSerialize["groupName"] = o.GroupName
	}
	if o.Oldest != nil {
		toSerialize["oldest"] = o.Oldest
	}
	if o.RebalanceStrategy != nil {
		toSerialize["rebalanceStrategy"] = o.RebalanceStrategy
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup struct {
	value *IoArgoprojEventsV1alpha1KafkaConsumerGroup
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup) Get() *IoArgoprojEventsV1alpha1KafkaConsumerGroup {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup) Set(val *IoArgoprojEventsV1alpha1KafkaConsumerGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1KafkaConsumerGroup(val *IoArgoprojEventsV1alpha1KafkaConsumerGroup) *NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup {
	return &NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1KafkaConsumerGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


