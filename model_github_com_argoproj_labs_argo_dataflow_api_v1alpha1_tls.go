/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS
type GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS struct {
	CaCertSecret *IoK8sApiCoreV1SecretKeySelector `json:"caCertSecret,omitempty"`
	CertSecret *IoK8sApiCoreV1SecretKeySelector `json:"certSecret,omitempty"`
	KeySecret *IoK8sApiCoreV1SecretKeySelector `json:"keySecret,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS() *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1TLSWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1TLSWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS{}
	return &this
}

// GetCaCertSecret returns the CaCertSecret field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) GetCaCertSecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.CaCertSecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.CaCertSecret
}

// GetCaCertSecretOk returns a tuple with the CaCertSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) GetCaCertSecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.CaCertSecret == nil {
		return nil, false
	}
	return o.CaCertSecret, true
}

// HasCaCertSecret returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) HasCaCertSecret() bool {
	if o != nil && o.CaCertSecret != nil {
		return true
	}

	return false
}

// SetCaCertSecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the CaCertSecret field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) SetCaCertSecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.CaCertSecret = &v
}

// GetCertSecret returns the CertSecret field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) GetCertSecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.CertSecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.CertSecret
}

// GetCertSecretOk returns a tuple with the CertSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) GetCertSecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.CertSecret == nil {
		return nil, false
	}
	return o.CertSecret, true
}

// HasCertSecret returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) HasCertSecret() bool {
	if o != nil && o.CertSecret != nil {
		return true
	}

	return false
}

// SetCertSecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the CertSecret field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) SetCertSecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.CertSecret = &v
}

// GetKeySecret returns the KeySecret field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) GetKeySecret() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.KeySecret == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.KeySecret
}

// GetKeySecretOk returns a tuple with the KeySecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) GetKeySecretOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.KeySecret == nil {
		return nil, false
	}
	return o.KeySecret, true
}

// HasKeySecret returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) HasKeySecret() bool {
	if o != nil && o.KeySecret != nil {
		return true
	}

	return false
}

// SetKeySecret gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the KeySecret field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) SetKeySecret(v IoK8sApiCoreV1SecretKeySelector) {
	o.KeySecret = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CaCertSecret != nil {
		toSerialize["caCertSecret"] = o.CaCertSecret
	}
	if o.CertSecret != nil {
		toSerialize["certSecret"] = o.CertSecret
	}
	if o.KeySecret != nil {
		toSerialize["keySecret"] = o.KeySecret
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1TLS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


