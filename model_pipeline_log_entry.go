/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// PipelineLogEntry struct for PipelineLogEntry
type PipelineLogEntry struct {
	Msg *string `json:"msg,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	PipelineName *string `json:"pipelineName,omitempty"`
	StepName *string `json:"stepName,omitempty"`
	// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
	Time *time.Time `json:"time,omitempty"`
}

// NewPipelineLogEntry instantiates a new PipelineLogEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineLogEntry() *PipelineLogEntry {
	this := PipelineLogEntry{}
	return &this
}

// NewPipelineLogEntryWithDefaults instantiates a new PipelineLogEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineLogEntryWithDefaults() *PipelineLogEntry {
	this := PipelineLogEntry{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *PipelineLogEntry) GetMsg() string {
	if o == nil || o.Msg == nil {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineLogEntry) GetMsgOk() (*string, bool) {
	if o == nil || o.Msg == nil {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *PipelineLogEntry) HasMsg() bool {
	if o != nil && o.Msg != nil {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *PipelineLogEntry) SetMsg(v string) {
	o.Msg = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *PipelineLogEntry) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineLogEntry) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *PipelineLogEntry) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *PipelineLogEntry) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPipelineName returns the PipelineName field value if set, zero value otherwise.
func (o *PipelineLogEntry) GetPipelineName() string {
	if o == nil || o.PipelineName == nil {
		var ret string
		return ret
	}
	return *o.PipelineName
}

// GetPipelineNameOk returns a tuple with the PipelineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineLogEntry) GetPipelineNameOk() (*string, bool) {
	if o == nil || o.PipelineName == nil {
		return nil, false
	}
	return o.PipelineName, true
}

// HasPipelineName returns a boolean if a field has been set.
func (o *PipelineLogEntry) HasPipelineName() bool {
	if o != nil && o.PipelineName != nil {
		return true
	}

	return false
}

// SetPipelineName gets a reference to the given string and assigns it to the PipelineName field.
func (o *PipelineLogEntry) SetPipelineName(v string) {
	o.PipelineName = &v
}

// GetStepName returns the StepName field value if set, zero value otherwise.
func (o *PipelineLogEntry) GetStepName() string {
	if o == nil || o.StepName == nil {
		var ret string
		return ret
	}
	return *o.StepName
}

// GetStepNameOk returns a tuple with the StepName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineLogEntry) GetStepNameOk() (*string, bool) {
	if o == nil || o.StepName == nil {
		return nil, false
	}
	return o.StepName, true
}

// HasStepName returns a boolean if a field has been set.
func (o *PipelineLogEntry) HasStepName() bool {
	if o != nil && o.StepName != nil {
		return true
	}

	return false
}

// SetStepName gets a reference to the given string and assigns it to the StepName field.
func (o *PipelineLogEntry) SetStepName(v string) {
	o.StepName = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *PipelineLogEntry) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineLogEntry) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *PipelineLogEntry) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *PipelineLogEntry) SetTime(v time.Time) {
	o.Time = &v
}

func (o PipelineLogEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Msg != nil {
		toSerialize["msg"] = o.Msg
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.PipelineName != nil {
		toSerialize["pipelineName"] = o.PipelineName
	}
	if o.StepName != nil {
		toSerialize["stepName"] = o.StepName
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineLogEntry struct {
	value *PipelineLogEntry
	isSet bool
}

func (v NullablePipelineLogEntry) Get() *PipelineLogEntry {
	return v.value
}

func (v *NullablePipelineLogEntry) Set(val *PipelineLogEntry) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineLogEntry) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineLogEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineLogEntry(val *PipelineLogEntry) *NullablePipelineLogEntry {
	return &NullablePipelineLogEntry{value: val, isSet: true}
}

func (v NullablePipelineLogEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineLogEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


