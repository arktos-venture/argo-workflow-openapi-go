/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1S3Filter struct for IoArgoprojEventsV1alpha1S3Filter
type IoArgoprojEventsV1alpha1S3Filter struct {
	Prefix *string `json:"prefix,omitempty"`
	Suffix *string `json:"suffix,omitempty"`
}

// NewIoArgoprojEventsV1alpha1S3Filter instantiates a new IoArgoprojEventsV1alpha1S3Filter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1S3Filter() *IoArgoprojEventsV1alpha1S3Filter {
	this := IoArgoprojEventsV1alpha1S3Filter{}
	return &this
}

// NewIoArgoprojEventsV1alpha1S3FilterWithDefaults instantiates a new IoArgoprojEventsV1alpha1S3Filter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1S3FilterWithDefaults() *IoArgoprojEventsV1alpha1S3Filter {
	this := IoArgoprojEventsV1alpha1S3Filter{}
	return &this
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Filter) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Filter) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Filter) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *IoArgoprojEventsV1alpha1S3Filter) SetPrefix(v string) {
	o.Prefix = &v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1S3Filter) GetSuffix() string {
	if o == nil || o.Suffix == nil {
		var ret string
		return ret
	}
	return *o.Suffix
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1S3Filter) GetSuffixOk() (*string, bool) {
	if o == nil || o.Suffix == nil {
		return nil, false
	}
	return o.Suffix, true
}

// HasSuffix returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1S3Filter) HasSuffix() bool {
	if o != nil && o.Suffix != nil {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given string and assigns it to the Suffix field.
func (o *IoArgoprojEventsV1alpha1S3Filter) SetSuffix(v string) {
	o.Suffix = &v
}

func (o IoArgoprojEventsV1alpha1S3Filter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	if o.Suffix != nil {
		toSerialize["suffix"] = o.Suffix
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1S3Filter struct {
	value *IoArgoprojEventsV1alpha1S3Filter
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1S3Filter) Get() *IoArgoprojEventsV1alpha1S3Filter {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1S3Filter) Set(val *IoArgoprojEventsV1alpha1S3Filter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1S3Filter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1S3Filter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1S3Filter(val *IoArgoprojEventsV1alpha1S3Filter) *NullableIoArgoprojEventsV1alpha1S3Filter {
	return &NullableIoArgoprojEventsV1alpha1S3Filter{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1S3Filter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1S3Filter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


