/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList
type GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList struct {
	Items *[]GithubComArgoprojLabsArgoDataflowApiV1alpha1Pipeline `json:"items,omitempty"`
	Metadata *IoK8sApimachineryPkgApisMetaV1ListMeta `json:"metadata,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList() *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineListWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineListWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) GetItems() []GithubComArgoprojLabsArgoDataflowApiV1alpha1Pipeline {
	if o == nil || o.Items == nil {
		var ret []GithubComArgoprojLabsArgoDataflowApiV1alpha1Pipeline
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) GetItemsOk() (*[]GithubComArgoprojLabsArgoDataflowApiV1alpha1Pipeline, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []GithubComArgoprojLabsArgoDataflowApiV1alpha1Pipeline and assigns it to the Items field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) SetItems(v []GithubComArgoprojLabsArgoDataflowApiV1alpha1Pipeline) {
	o.Items = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) GetMetadata() IoK8sApimachineryPkgApisMetaV1ListMeta {
	if o == nil || o.Metadata == nil {
		var ret IoK8sApimachineryPkgApisMetaV1ListMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) GetMetadataOk() (*IoK8sApimachineryPkgApisMetaV1ListMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given IoK8sApimachineryPkgApisMetaV1ListMeta and assigns it to the Metadata field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) SetMetadata(v IoK8sApimachineryPkgApisMetaV1ListMeta) {
	o.Metadata = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1PipelineList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


