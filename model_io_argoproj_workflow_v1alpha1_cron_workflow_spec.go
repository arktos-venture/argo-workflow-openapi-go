/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1CronWorkflowSpec CronWorkflowSpec is the specification of a CronWorkflow
type IoArgoprojWorkflowV1alpha1CronWorkflowSpec struct {
	// ConcurrencyPolicy is the K8s-style concurrency policy that will be used
	ConcurrencyPolicy *string `json:"concurrencyPolicy,omitempty"`
	// FailedJobsHistoryLimit is the number of failed jobs to be kept at a time
	FailedJobsHistoryLimit *int32 `json:"failedJobsHistoryLimit,omitempty"`
	// Schedule is a schedule to run the Workflow in Cron format
	Schedule string `json:"schedule"`
	// StartingDeadlineSeconds is the K8s-style deadline that will limit the time a CronWorkflow will be run after its original scheduled time if it is missed.
	StartingDeadlineSeconds *int32 `json:"startingDeadlineSeconds,omitempty"`
	// SuccessfulJobsHistoryLimit is the number of successful jobs to be kept at a time
	SuccessfulJobsHistoryLimit *int32 `json:"successfulJobsHistoryLimit,omitempty"`
	// Suspend is a flag that will stop new CronWorkflows from running if set to true
	Suspend *bool `json:"suspend,omitempty"`
	// Timezone is the timezone against which the cron schedule will be calculated, e.g. \"Asia/Tokyo\". Default is machine's local time.
	Timezone *string `json:"timezone,omitempty"`
	WorkflowMetadata *IoK8sApimachineryPkgApisMetaV1ObjectMeta `json:"workflowMetadata,omitempty"`
	WorkflowSpec IoArgoprojWorkflowV1alpha1WorkflowSpec `json:"workflowSpec"`
}

// NewIoArgoprojWorkflowV1alpha1CronWorkflowSpec instantiates a new IoArgoprojWorkflowV1alpha1CronWorkflowSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1CronWorkflowSpec(schedule string, workflowSpec IoArgoprojWorkflowV1alpha1WorkflowSpec) *IoArgoprojWorkflowV1alpha1CronWorkflowSpec {
	this := IoArgoprojWorkflowV1alpha1CronWorkflowSpec{}
	this.Schedule = schedule
	this.WorkflowSpec = workflowSpec
	return &this
}

// NewIoArgoprojWorkflowV1alpha1CronWorkflowSpecWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1CronWorkflowSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1CronWorkflowSpecWithDefaults() *IoArgoprojWorkflowV1alpha1CronWorkflowSpec {
	this := IoArgoprojWorkflowV1alpha1CronWorkflowSpec{}
	return &this
}

// GetConcurrencyPolicy returns the ConcurrencyPolicy field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetConcurrencyPolicy() string {
	if o == nil || o.ConcurrencyPolicy == nil {
		var ret string
		return ret
	}
	return *o.ConcurrencyPolicy
}

// GetConcurrencyPolicyOk returns a tuple with the ConcurrencyPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetConcurrencyPolicyOk() (*string, bool) {
	if o == nil || o.ConcurrencyPolicy == nil {
		return nil, false
	}
	return o.ConcurrencyPolicy, true
}

// HasConcurrencyPolicy returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasConcurrencyPolicy() bool {
	if o != nil && o.ConcurrencyPolicy != nil {
		return true
	}

	return false
}

// SetConcurrencyPolicy gets a reference to the given string and assigns it to the ConcurrencyPolicy field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetConcurrencyPolicy(v string) {
	o.ConcurrencyPolicy = &v
}

// GetFailedJobsHistoryLimit returns the FailedJobsHistoryLimit field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetFailedJobsHistoryLimit() int32 {
	if o == nil || o.FailedJobsHistoryLimit == nil {
		var ret int32
		return ret
	}
	return *o.FailedJobsHistoryLimit
}

// GetFailedJobsHistoryLimitOk returns a tuple with the FailedJobsHistoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetFailedJobsHistoryLimitOk() (*int32, bool) {
	if o == nil || o.FailedJobsHistoryLimit == nil {
		return nil, false
	}
	return o.FailedJobsHistoryLimit, true
}

// HasFailedJobsHistoryLimit returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasFailedJobsHistoryLimit() bool {
	if o != nil && o.FailedJobsHistoryLimit != nil {
		return true
	}

	return false
}

// SetFailedJobsHistoryLimit gets a reference to the given int32 and assigns it to the FailedJobsHistoryLimit field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetFailedJobsHistoryLimit(v int32) {
	o.FailedJobsHistoryLimit = &v
}

// GetSchedule returns the Schedule field value
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetScheduleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetSchedule(v string) {
	o.Schedule = v
}

// GetStartingDeadlineSeconds returns the StartingDeadlineSeconds field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetStartingDeadlineSeconds() int32 {
	if o == nil || o.StartingDeadlineSeconds == nil {
		var ret int32
		return ret
	}
	return *o.StartingDeadlineSeconds
}

// GetStartingDeadlineSecondsOk returns a tuple with the StartingDeadlineSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetStartingDeadlineSecondsOk() (*int32, bool) {
	if o == nil || o.StartingDeadlineSeconds == nil {
		return nil, false
	}
	return o.StartingDeadlineSeconds, true
}

// HasStartingDeadlineSeconds returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasStartingDeadlineSeconds() bool {
	if o != nil && o.StartingDeadlineSeconds != nil {
		return true
	}

	return false
}

// SetStartingDeadlineSeconds gets a reference to the given int32 and assigns it to the StartingDeadlineSeconds field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetStartingDeadlineSeconds(v int32) {
	o.StartingDeadlineSeconds = &v
}

// GetSuccessfulJobsHistoryLimit returns the SuccessfulJobsHistoryLimit field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetSuccessfulJobsHistoryLimit() int32 {
	if o == nil || o.SuccessfulJobsHistoryLimit == nil {
		var ret int32
		return ret
	}
	return *o.SuccessfulJobsHistoryLimit
}

// GetSuccessfulJobsHistoryLimitOk returns a tuple with the SuccessfulJobsHistoryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetSuccessfulJobsHistoryLimitOk() (*int32, bool) {
	if o == nil || o.SuccessfulJobsHistoryLimit == nil {
		return nil, false
	}
	return o.SuccessfulJobsHistoryLimit, true
}

// HasSuccessfulJobsHistoryLimit returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasSuccessfulJobsHistoryLimit() bool {
	if o != nil && o.SuccessfulJobsHistoryLimit != nil {
		return true
	}

	return false
}

// SetSuccessfulJobsHistoryLimit gets a reference to the given int32 and assigns it to the SuccessfulJobsHistoryLimit field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetSuccessfulJobsHistoryLimit(v int32) {
	o.SuccessfulJobsHistoryLimit = &v
}

// GetSuspend returns the Suspend field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetSuspend() bool {
	if o == nil || o.Suspend == nil {
		var ret bool
		return ret
	}
	return *o.Suspend
}

// GetSuspendOk returns a tuple with the Suspend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetSuspendOk() (*bool, bool) {
	if o == nil || o.Suspend == nil {
		return nil, false
	}
	return o.Suspend, true
}

// HasSuspend returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasSuspend() bool {
	if o != nil && o.Suspend != nil {
		return true
	}

	return false
}

// SetSuspend gets a reference to the given bool and assigns it to the Suspend field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetSuspend(v bool) {
	o.Suspend = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetTimezone() string {
	if o == nil || o.Timezone == nil {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetTimezoneOk() (*string, bool) {
	if o == nil || o.Timezone == nil {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasTimezone() bool {
	if o != nil && o.Timezone != nil {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetTimezone(v string) {
	o.Timezone = &v
}

// GetWorkflowMetadata returns the WorkflowMetadata field value if set, zero value otherwise.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetWorkflowMetadata() IoK8sApimachineryPkgApisMetaV1ObjectMeta {
	if o == nil || o.WorkflowMetadata == nil {
		var ret IoK8sApimachineryPkgApisMetaV1ObjectMeta
		return ret
	}
	return *o.WorkflowMetadata
}

// GetWorkflowMetadataOk returns a tuple with the WorkflowMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetWorkflowMetadataOk() (*IoK8sApimachineryPkgApisMetaV1ObjectMeta, bool) {
	if o == nil || o.WorkflowMetadata == nil {
		return nil, false
	}
	return o.WorkflowMetadata, true
}

// HasWorkflowMetadata returns a boolean if a field has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) HasWorkflowMetadata() bool {
	if o != nil && o.WorkflowMetadata != nil {
		return true
	}

	return false
}

// SetWorkflowMetadata gets a reference to the given IoK8sApimachineryPkgApisMetaV1ObjectMeta and assigns it to the WorkflowMetadata field.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetWorkflowMetadata(v IoK8sApimachineryPkgApisMetaV1ObjectMeta) {
	o.WorkflowMetadata = &v
}

// GetWorkflowSpec returns the WorkflowSpec field value
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetWorkflowSpec() IoArgoprojWorkflowV1alpha1WorkflowSpec {
	if o == nil {
		var ret IoArgoprojWorkflowV1alpha1WorkflowSpec
		return ret
	}

	return o.WorkflowSpec
}

// GetWorkflowSpecOk returns a tuple with the WorkflowSpec field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) GetWorkflowSpecOk() (*IoArgoprojWorkflowV1alpha1WorkflowSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WorkflowSpec, true
}

// SetWorkflowSpec sets field value
func (o *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) SetWorkflowSpec(v IoArgoprojWorkflowV1alpha1WorkflowSpec) {
	o.WorkflowSpec = v
}

func (o IoArgoprojWorkflowV1alpha1CronWorkflowSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConcurrencyPolicy != nil {
		toSerialize["concurrencyPolicy"] = o.ConcurrencyPolicy
	}
	if o.FailedJobsHistoryLimit != nil {
		toSerialize["failedJobsHistoryLimit"] = o.FailedJobsHistoryLimit
	}
	if true {
		toSerialize["schedule"] = o.Schedule
	}
	if o.StartingDeadlineSeconds != nil {
		toSerialize["startingDeadlineSeconds"] = o.StartingDeadlineSeconds
	}
	if o.SuccessfulJobsHistoryLimit != nil {
		toSerialize["successfulJobsHistoryLimit"] = o.SuccessfulJobsHistoryLimit
	}
	if o.Suspend != nil {
		toSerialize["suspend"] = o.Suspend
	}
	if o.Timezone != nil {
		toSerialize["timezone"] = o.Timezone
	}
	if o.WorkflowMetadata != nil {
		toSerialize["workflowMetadata"] = o.WorkflowMetadata
	}
	if true {
		toSerialize["workflowSpec"] = o.WorkflowSpec
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec struct {
	value *IoArgoprojWorkflowV1alpha1CronWorkflowSpec
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec) Get() *IoArgoprojWorkflowV1alpha1CronWorkflowSpec {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec) Set(val *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec(val *IoArgoprojWorkflowV1alpha1CronWorkflowSpec) *NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec {
	return &NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1CronWorkflowSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


