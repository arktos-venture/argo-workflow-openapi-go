/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1MQTTEventSource struct for IoArgoprojEventsV1alpha1MQTTEventSource
type IoArgoprojEventsV1alpha1MQTTEventSource struct {
	ClientId *string `json:"clientId,omitempty"`
	ConnectionBackoff *IoArgoprojEventsV1alpha1Backoff `json:"connectionBackoff,omitempty"`
	JsonBody *bool `json:"jsonBody,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Tls *IoArgoprojEventsV1alpha1TLSConfig `json:"tls,omitempty"`
	Topic *string `json:"topic,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewIoArgoprojEventsV1alpha1MQTTEventSource instantiates a new IoArgoprojEventsV1alpha1MQTTEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1MQTTEventSource() *IoArgoprojEventsV1alpha1MQTTEventSource {
	this := IoArgoprojEventsV1alpha1MQTTEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1MQTTEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1MQTTEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1MQTTEventSourceWithDefaults() *IoArgoprojEventsV1alpha1MQTTEventSource {
	this := IoArgoprojEventsV1alpha1MQTTEventSource{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetClientId(v string) {
	o.ClientId = &v
}

// GetConnectionBackoff returns the ConnectionBackoff field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetConnectionBackoff() IoArgoprojEventsV1alpha1Backoff {
	if o == nil || o.ConnectionBackoff == nil {
		var ret IoArgoprojEventsV1alpha1Backoff
		return ret
	}
	return *o.ConnectionBackoff
}

// GetConnectionBackoffOk returns a tuple with the ConnectionBackoff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetConnectionBackoffOk() (*IoArgoprojEventsV1alpha1Backoff, bool) {
	if o == nil || o.ConnectionBackoff == nil {
		return nil, false
	}
	return o.ConnectionBackoff, true
}

// HasConnectionBackoff returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasConnectionBackoff() bool {
	if o != nil && o.ConnectionBackoff != nil {
		return true
	}

	return false
}

// SetConnectionBackoff gets a reference to the given IoArgoprojEventsV1alpha1Backoff and assigns it to the ConnectionBackoff field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetConnectionBackoff(v IoArgoprojEventsV1alpha1Backoff) {
	o.ConnectionBackoff = &v
}

// GetJsonBody returns the JsonBody field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetJsonBody() bool {
	if o == nil || o.JsonBody == nil {
		var ret bool
		return ret
	}
	return *o.JsonBody
}

// GetJsonBodyOk returns a tuple with the JsonBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetJsonBodyOk() (*bool, bool) {
	if o == nil || o.JsonBody == nil {
		return nil, false
	}
	return o.JsonBody, true
}

// HasJsonBody returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasJsonBody() bool {
	if o != nil && o.JsonBody != nil {
		return true
	}

	return false
}

// SetJsonBody gets a reference to the given bool and assigns it to the JsonBody field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetJsonBody(v bool) {
	o.JsonBody = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetTls returns the Tls field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetTls() IoArgoprojEventsV1alpha1TLSConfig {
	if o == nil || o.Tls == nil {
		var ret IoArgoprojEventsV1alpha1TLSConfig
		return ret
	}
	return *o.Tls
}

// GetTlsOk returns a tuple with the Tls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetTlsOk() (*IoArgoprojEventsV1alpha1TLSConfig, bool) {
	if o == nil || o.Tls == nil {
		return nil, false
	}
	return o.Tls, true
}

// HasTls returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasTls() bool {
	if o != nil && o.Tls != nil {
		return true
	}

	return false
}

// SetTls gets a reference to the given IoArgoprojEventsV1alpha1TLSConfig and assigns it to the Tls field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetTls(v IoArgoprojEventsV1alpha1TLSConfig) {
	o.Tls = &v
}

// GetTopic returns the Topic field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetTopic() string {
	if o == nil || o.Topic == nil {
		var ret string
		return ret
	}
	return *o.Topic
}

// GetTopicOk returns a tuple with the Topic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetTopicOk() (*string, bool) {
	if o == nil || o.Topic == nil {
		return nil, false
	}
	return o.Topic, true
}

// HasTopic returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasTopic() bool {
	if o != nil && o.Topic != nil {
		return true
	}

	return false
}

// SetTopic gets a reference to the given string and assigns it to the Topic field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetTopic(v string) {
	o.Topic = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *IoArgoprojEventsV1alpha1MQTTEventSource) SetUrl(v string) {
	o.Url = &v
}

func (o IoArgoprojEventsV1alpha1MQTTEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.ConnectionBackoff != nil {
		toSerialize["connectionBackoff"] = o.ConnectionBackoff
	}
	if o.JsonBody != nil {
		toSerialize["jsonBody"] = o.JsonBody
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Tls != nil {
		toSerialize["tls"] = o.Tls
	}
	if o.Topic != nil {
		toSerialize["topic"] = o.Topic
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1MQTTEventSource struct {
	value *IoArgoprojEventsV1alpha1MQTTEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1MQTTEventSource) Get() *IoArgoprojEventsV1alpha1MQTTEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1MQTTEventSource) Set(val *IoArgoprojEventsV1alpha1MQTTEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1MQTTEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1MQTTEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1MQTTEventSource(val *IoArgoprojEventsV1alpha1MQTTEventSource) *NullableIoArgoprojEventsV1alpha1MQTTEventSource {
	return &NullableIoArgoprojEventsV1alpha1MQTTEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1MQTTEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1MQTTEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


