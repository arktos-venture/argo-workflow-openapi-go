/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink struct for GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink
type GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink struct {
	Headers *[]GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPHeader `json:"headers,omitempty"`
	InsecureSkipVerify *bool `json:"insecureSkipVerify,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink() *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink{}
	return &this
}

// NewGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSinkWithDefaults instantiates a new GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSinkWithDefaults() *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink {
	this := GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink{}
	return &this
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) GetHeaders() []GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPHeader {
	if o == nil || o.Headers == nil {
		var ret []GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPHeader
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) GetHeadersOk() (*[]GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPHeader, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPHeader and assigns it to the Headers field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) SetHeaders(v []GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPHeader) {
	o.Headers = &v
}

// GetInsecureSkipVerify returns the InsecureSkipVerify field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) GetInsecureSkipVerify() bool {
	if o == nil || o.InsecureSkipVerify == nil {
		var ret bool
		return ret
	}
	return *o.InsecureSkipVerify
}

// GetInsecureSkipVerifyOk returns a tuple with the InsecureSkipVerify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) GetInsecureSkipVerifyOk() (*bool, bool) {
	if o == nil || o.InsecureSkipVerify == nil {
		return nil, false
	}
	return o.InsecureSkipVerify, true
}

// HasInsecureSkipVerify returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) HasInsecureSkipVerify() bool {
	if o != nil && o.InsecureSkipVerify != nil {
		return true
	}

	return false
}

// SetInsecureSkipVerify gets a reference to the given bool and assigns it to the InsecureSkipVerify field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) SetInsecureSkipVerify(v bool) {
	o.InsecureSkipVerify = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) SetUrl(v string) {
	o.Url = &v
}

func (o GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.InsecureSkipVerify != nil {
		toSerialize["insecureSkipVerify"] = o.InsecureSkipVerify
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink struct {
	value *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink
	isSet bool
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) Get() *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink {
	return v.value
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) Set(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink(val *GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink {
	return &NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink{value: val, isSet: true}
}

func (v NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


