/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1BasicAuth struct for IoArgoprojEventsV1alpha1BasicAuth
type IoArgoprojEventsV1alpha1BasicAuth struct {
	Password *IoK8sApiCoreV1SecretKeySelector `json:"password,omitempty"`
	Username *IoK8sApiCoreV1SecretKeySelector `json:"username,omitempty"`
}

// NewIoArgoprojEventsV1alpha1BasicAuth instantiates a new IoArgoprojEventsV1alpha1BasicAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1BasicAuth() *IoArgoprojEventsV1alpha1BasicAuth {
	this := IoArgoprojEventsV1alpha1BasicAuth{}
	return &this
}

// NewIoArgoprojEventsV1alpha1BasicAuthWithDefaults instantiates a new IoArgoprojEventsV1alpha1BasicAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1BasicAuthWithDefaults() *IoArgoprojEventsV1alpha1BasicAuth {
	this := IoArgoprojEventsV1alpha1BasicAuth{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1BasicAuth) GetPassword() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.Password == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1BasicAuth) GetPasswordOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1BasicAuth) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the Password field.
func (o *IoArgoprojEventsV1alpha1BasicAuth) SetPassword(v IoK8sApiCoreV1SecretKeySelector) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1BasicAuth) GetUsername() IoK8sApiCoreV1SecretKeySelector {
	if o == nil || o.Username == nil {
		var ret IoK8sApiCoreV1SecretKeySelector
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1BasicAuth) GetUsernameOk() (*IoK8sApiCoreV1SecretKeySelector, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1BasicAuth) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given IoK8sApiCoreV1SecretKeySelector and assigns it to the Username field.
func (o *IoArgoprojEventsV1alpha1BasicAuth) SetUsername(v IoK8sApiCoreV1SecretKeySelector) {
	o.Username = &v
}

func (o IoArgoprojEventsV1alpha1BasicAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1BasicAuth struct {
	value *IoArgoprojEventsV1alpha1BasicAuth
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1BasicAuth) Get() *IoArgoprojEventsV1alpha1BasicAuth {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1BasicAuth) Set(val *IoArgoprojEventsV1alpha1BasicAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1BasicAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1BasicAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1BasicAuth(val *IoArgoprojEventsV1alpha1BasicAuth) *NullableIoArgoprojEventsV1alpha1BasicAuth {
	return &NullableIoArgoprojEventsV1alpha1BasicAuth{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1BasicAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1BasicAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


