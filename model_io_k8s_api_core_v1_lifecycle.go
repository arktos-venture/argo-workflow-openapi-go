/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1Lifecycle Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
type IoK8sApiCoreV1Lifecycle struct {
	PostStart *IoK8sApiCoreV1Handler `json:"postStart,omitempty"`
	PreStop *IoK8sApiCoreV1Handler `json:"preStop,omitempty"`
}

// NewIoK8sApiCoreV1Lifecycle instantiates a new IoK8sApiCoreV1Lifecycle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1Lifecycle() *IoK8sApiCoreV1Lifecycle {
	this := IoK8sApiCoreV1Lifecycle{}
	return &this
}

// NewIoK8sApiCoreV1LifecycleWithDefaults instantiates a new IoK8sApiCoreV1Lifecycle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1LifecycleWithDefaults() *IoK8sApiCoreV1Lifecycle {
	this := IoK8sApiCoreV1Lifecycle{}
	return &this
}

// GetPostStart returns the PostStart field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Lifecycle) GetPostStart() IoK8sApiCoreV1Handler {
	if o == nil || o.PostStart == nil {
		var ret IoK8sApiCoreV1Handler
		return ret
	}
	return *o.PostStart
}

// GetPostStartOk returns a tuple with the PostStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Lifecycle) GetPostStartOk() (*IoK8sApiCoreV1Handler, bool) {
	if o == nil || o.PostStart == nil {
		return nil, false
	}
	return o.PostStart, true
}

// HasPostStart returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Lifecycle) HasPostStart() bool {
	if o != nil && o.PostStart != nil {
		return true
	}

	return false
}

// SetPostStart gets a reference to the given IoK8sApiCoreV1Handler and assigns it to the PostStart field.
func (o *IoK8sApiCoreV1Lifecycle) SetPostStart(v IoK8sApiCoreV1Handler) {
	o.PostStart = &v
}

// GetPreStop returns the PreStop field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Lifecycle) GetPreStop() IoK8sApiCoreV1Handler {
	if o == nil || o.PreStop == nil {
		var ret IoK8sApiCoreV1Handler
		return ret
	}
	return *o.PreStop
}

// GetPreStopOk returns a tuple with the PreStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Lifecycle) GetPreStopOk() (*IoK8sApiCoreV1Handler, bool) {
	if o == nil || o.PreStop == nil {
		return nil, false
	}
	return o.PreStop, true
}

// HasPreStop returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Lifecycle) HasPreStop() bool {
	if o != nil && o.PreStop != nil {
		return true
	}

	return false
}

// SetPreStop gets a reference to the given IoK8sApiCoreV1Handler and assigns it to the PreStop field.
func (o *IoK8sApiCoreV1Lifecycle) SetPreStop(v IoK8sApiCoreV1Handler) {
	o.PreStop = &v
}

func (o IoK8sApiCoreV1Lifecycle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PostStart != nil {
		toSerialize["postStart"] = o.PostStart
	}
	if o.PreStop != nil {
		toSerialize["preStop"] = o.PreStop
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1Lifecycle struct {
	value *IoK8sApiCoreV1Lifecycle
	isSet bool
}

func (v NullableIoK8sApiCoreV1Lifecycle) Get() *IoK8sApiCoreV1Lifecycle {
	return v.value
}

func (v *NullableIoK8sApiCoreV1Lifecycle) Set(val *IoK8sApiCoreV1Lifecycle) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1Lifecycle) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1Lifecycle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1Lifecycle(val *IoK8sApiCoreV1Lifecycle) *NullableIoK8sApiCoreV1Lifecycle {
	return &NullableIoK8sApiCoreV1Lifecycle{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1Lifecycle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1Lifecycle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


