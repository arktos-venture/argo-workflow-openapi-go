/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1EventDependencyFilter EventDependencyFilter defines filters and constraints for a io.argoproj.workflow.v1alpha1.
type IoArgoprojEventsV1alpha1EventDependencyFilter struct {
	Context *IoArgoprojEventsV1alpha1EventContext `json:"context,omitempty"`
	Data *[]IoArgoprojEventsV1alpha1DataFilter `json:"data,omitempty"`
	// Exprs contains the list of expressions evaluated against the event payload.
	Exprs *[]IoArgoprojEventsV1alpha1ExprFilter `json:"exprs,omitempty"`
	Time *IoArgoprojEventsV1alpha1TimeFilter `json:"time,omitempty"`
}

// NewIoArgoprojEventsV1alpha1EventDependencyFilter instantiates a new IoArgoprojEventsV1alpha1EventDependencyFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1EventDependencyFilter() *IoArgoprojEventsV1alpha1EventDependencyFilter {
	this := IoArgoprojEventsV1alpha1EventDependencyFilter{}
	return &this
}

// NewIoArgoprojEventsV1alpha1EventDependencyFilterWithDefaults instantiates a new IoArgoprojEventsV1alpha1EventDependencyFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1EventDependencyFilterWithDefaults() *IoArgoprojEventsV1alpha1EventDependencyFilter {
	this := IoArgoprojEventsV1alpha1EventDependencyFilter{}
	return &this
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetContext() IoArgoprojEventsV1alpha1EventContext {
	if o == nil || o.Context == nil {
		var ret IoArgoprojEventsV1alpha1EventContext
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetContextOk() (*IoArgoprojEventsV1alpha1EventContext, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given IoArgoprojEventsV1alpha1EventContext and assigns it to the Context field.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) SetContext(v IoArgoprojEventsV1alpha1EventContext) {
	o.Context = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetData() []IoArgoprojEventsV1alpha1DataFilter {
	if o == nil || o.Data == nil {
		var ret []IoArgoprojEventsV1alpha1DataFilter
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetDataOk() (*[]IoArgoprojEventsV1alpha1DataFilter, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []IoArgoprojEventsV1alpha1DataFilter and assigns it to the Data field.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) SetData(v []IoArgoprojEventsV1alpha1DataFilter) {
	o.Data = &v
}

// GetExprs returns the Exprs field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetExprs() []IoArgoprojEventsV1alpha1ExprFilter {
	if o == nil || o.Exprs == nil {
		var ret []IoArgoprojEventsV1alpha1ExprFilter
		return ret
	}
	return *o.Exprs
}

// GetExprsOk returns a tuple with the Exprs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetExprsOk() (*[]IoArgoprojEventsV1alpha1ExprFilter, bool) {
	if o == nil || o.Exprs == nil {
		return nil, false
	}
	return o.Exprs, true
}

// HasExprs returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) HasExprs() bool {
	if o != nil && o.Exprs != nil {
		return true
	}

	return false
}

// SetExprs gets a reference to the given []IoArgoprojEventsV1alpha1ExprFilter and assigns it to the Exprs field.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) SetExprs(v []IoArgoprojEventsV1alpha1ExprFilter) {
	o.Exprs = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetTime() IoArgoprojEventsV1alpha1TimeFilter {
	if o == nil || o.Time == nil {
		var ret IoArgoprojEventsV1alpha1TimeFilter
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) GetTimeOk() (*IoArgoprojEventsV1alpha1TimeFilter, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given IoArgoprojEventsV1alpha1TimeFilter and assigns it to the Time field.
func (o *IoArgoprojEventsV1alpha1EventDependencyFilter) SetTime(v IoArgoprojEventsV1alpha1TimeFilter) {
	o.Time = &v
}

func (o IoArgoprojEventsV1alpha1EventDependencyFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Exprs != nil {
		toSerialize["exprs"] = o.Exprs
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1EventDependencyFilter struct {
	value *IoArgoprojEventsV1alpha1EventDependencyFilter
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1EventDependencyFilter) Get() *IoArgoprojEventsV1alpha1EventDependencyFilter {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1EventDependencyFilter) Set(val *IoArgoprojEventsV1alpha1EventDependencyFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1EventDependencyFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1EventDependencyFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1EventDependencyFilter(val *IoArgoprojEventsV1alpha1EventDependencyFilter) *NullableIoArgoprojEventsV1alpha1EventDependencyFilter {
	return &NullableIoArgoprojEventsV1alpha1EventDependencyFilter{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1EventDependencyFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1EventDependencyFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


