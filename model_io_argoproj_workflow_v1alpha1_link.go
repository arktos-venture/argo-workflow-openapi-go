/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Link A link to another app.
type IoArgoprojWorkflowV1alpha1Link struct {
	// The name of the link, E.g. \"Workflow Logs\" or \"Pod Logs\"
	Name string `json:"name"`
	// \"workflow\", \"pod\", \"pod-logs\", \"event-source-logs\", \"sensor-logs\" or \"chat\"
	Scope string `json:"scope"`
	// The URL. Can contain \"${metadata.namespace}\", \"${metadata.name}\", \"${status.startedAt}\", \"${status.finishedAt}\" or any other element in workflow yaml, e.g. \"${io.argoproj.workflow.v1alpha1.metadata.annotations.userDefinedKey}\"
	Url string `json:"url"`
}

// NewIoArgoprojWorkflowV1alpha1Link instantiates a new IoArgoprojWorkflowV1alpha1Link object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Link(name string, scope string, url string) *IoArgoprojWorkflowV1alpha1Link {
	this := IoArgoprojWorkflowV1alpha1Link{}
	this.Name = name
	this.Scope = scope
	this.Url = url
	return &this
}

// NewIoArgoprojWorkflowV1alpha1LinkWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Link object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1LinkWithDefaults() *IoArgoprojWorkflowV1alpha1Link {
	this := IoArgoprojWorkflowV1alpha1Link{}
	return &this
}

// GetName returns the Name field value
func (o *IoArgoprojWorkflowV1alpha1Link) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Link) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IoArgoprojWorkflowV1alpha1Link) SetName(v string) {
	o.Name = v
}

// GetScope returns the Scope field value
func (o *IoArgoprojWorkflowV1alpha1Link) GetScope() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Link) GetScopeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *IoArgoprojWorkflowV1alpha1Link) SetScope(v string) {
	o.Scope = v
}

// GetUrl returns the Url field value
func (o *IoArgoprojWorkflowV1alpha1Link) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Link) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *IoArgoprojWorkflowV1alpha1Link) SetUrl(v string) {
	o.Url = v
}

func (o IoArgoprojWorkflowV1alpha1Link) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Link struct {
	value *IoArgoprojWorkflowV1alpha1Link
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Link) Get() *IoArgoprojWorkflowV1alpha1Link {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Link) Set(val *IoArgoprojWorkflowV1alpha1Link) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Link) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Link) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Link(val *IoArgoprojWorkflowV1alpha1Link) *NullableIoArgoprojWorkflowV1alpha1Link {
	return &NullableIoArgoprojWorkflowV1alpha1Link{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Link) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Link) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


