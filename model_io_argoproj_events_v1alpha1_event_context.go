/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// IoArgoprojEventsV1alpha1EventContext struct for IoArgoprojEventsV1alpha1EventContext
type IoArgoprojEventsV1alpha1EventContext struct {
	// DataContentType - A MIME (RFC2046) string describing the media type of `data`.
	Datacontenttype *string `json:"datacontenttype,omitempty"`
	// ID of the event; must be non-empty and unique within the scope of the producer.
	Id *string `json:"id,omitempty"`
	// Source - A URI describing the event producer.
	Source *string `json:"source,omitempty"`
	// SpecVersion - The version of the CloudEvents specification used by the io.argoproj.workflow.v1alpha1.
	Specversion *string `json:"specversion,omitempty"`
	Subject *string `json:"subject,omitempty"`
	// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
	Time *time.Time `json:"time,omitempty"`
	// Type - The type of the occurrence which has happened.
	Type *string `json:"type,omitempty"`
}

// NewIoArgoprojEventsV1alpha1EventContext instantiates a new IoArgoprojEventsV1alpha1EventContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1EventContext() *IoArgoprojEventsV1alpha1EventContext {
	this := IoArgoprojEventsV1alpha1EventContext{}
	return &this
}

// NewIoArgoprojEventsV1alpha1EventContextWithDefaults instantiates a new IoArgoprojEventsV1alpha1EventContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1EventContextWithDefaults() *IoArgoprojEventsV1alpha1EventContext {
	this := IoArgoprojEventsV1alpha1EventContext{}
	return &this
}

// GetDatacontenttype returns the Datacontenttype field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetDatacontenttype() string {
	if o == nil || o.Datacontenttype == nil {
		var ret string
		return ret
	}
	return *o.Datacontenttype
}

// GetDatacontenttypeOk returns a tuple with the Datacontenttype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetDatacontenttypeOk() (*string, bool) {
	if o == nil || o.Datacontenttype == nil {
		return nil, false
	}
	return o.Datacontenttype, true
}

// HasDatacontenttype returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasDatacontenttype() bool {
	if o != nil && o.Datacontenttype != nil {
		return true
	}

	return false
}

// SetDatacontenttype gets a reference to the given string and assigns it to the Datacontenttype field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetDatacontenttype(v string) {
	o.Datacontenttype = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetId(v string) {
	o.Id = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetSource(v string) {
	o.Source = &v
}

// GetSpecversion returns the Specversion field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetSpecversion() string {
	if o == nil || o.Specversion == nil {
		var ret string
		return ret
	}
	return *o.Specversion
}

// GetSpecversionOk returns a tuple with the Specversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetSpecversionOk() (*string, bool) {
	if o == nil || o.Specversion == nil {
		return nil, false
	}
	return o.Specversion, true
}

// HasSpecversion returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasSpecversion() bool {
	if o != nil && o.Specversion != nil {
		return true
	}

	return false
}

// SetSpecversion gets a reference to the given string and assigns it to the Specversion field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetSpecversion(v string) {
	o.Specversion = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetSubject() string {
	if o == nil || o.Subject == nil {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetSubjectOk() (*string, bool) {
	if o == nil || o.Subject == nil {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasSubject() bool {
	if o != nil && o.Subject != nil {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetSubject(v string) {
	o.Subject = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetTime() time.Time {
	if o == nil || o.Time == nil {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetTimeOk() (*time.Time, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetTime(v time.Time) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1EventContext) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1EventContext) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IoArgoprojEventsV1alpha1EventContext) SetType(v string) {
	o.Type = &v
}

func (o IoArgoprojEventsV1alpha1EventContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Datacontenttype != nil {
		toSerialize["datacontenttype"] = o.Datacontenttype
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Specversion != nil {
		toSerialize["specversion"] = o.Specversion
	}
	if o.Subject != nil {
		toSerialize["subject"] = o.Subject
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1EventContext struct {
	value *IoArgoprojEventsV1alpha1EventContext
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1EventContext) Get() *IoArgoprojEventsV1alpha1EventContext {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1EventContext) Set(val *IoArgoprojEventsV1alpha1EventContext) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1EventContext) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1EventContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1EventContext(val *IoArgoprojEventsV1alpha1EventContext) *NullableIoArgoprojEventsV1alpha1EventContext {
	return &NullableIoArgoprojEventsV1alpha1EventContext{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1EventContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1EventContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


