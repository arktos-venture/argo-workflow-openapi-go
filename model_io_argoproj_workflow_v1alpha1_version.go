/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojWorkflowV1alpha1Version struct for IoArgoprojWorkflowV1alpha1Version
type IoArgoprojWorkflowV1alpha1Version struct {
	BuildDate string `json:"buildDate"`
	Compiler string `json:"compiler"`
	GitCommit string `json:"gitCommit"`
	GitTag string `json:"gitTag"`
	GitTreeState string `json:"gitTreeState"`
	GoVersion string `json:"goVersion"`
	Platform string `json:"platform"`
	Version string `json:"version"`
}

// NewIoArgoprojWorkflowV1alpha1Version instantiates a new IoArgoprojWorkflowV1alpha1Version object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojWorkflowV1alpha1Version(buildDate string, compiler string, gitCommit string, gitTag string, gitTreeState string, goVersion string, platform string, version string) *IoArgoprojWorkflowV1alpha1Version {
	this := IoArgoprojWorkflowV1alpha1Version{}
	this.BuildDate = buildDate
	this.Compiler = compiler
	this.GitCommit = gitCommit
	this.GitTag = gitTag
	this.GitTreeState = gitTreeState
	this.GoVersion = goVersion
	this.Platform = platform
	this.Version = version
	return &this
}

// NewIoArgoprojWorkflowV1alpha1VersionWithDefaults instantiates a new IoArgoprojWorkflowV1alpha1Version object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojWorkflowV1alpha1VersionWithDefaults() *IoArgoprojWorkflowV1alpha1Version {
	this := IoArgoprojWorkflowV1alpha1Version{}
	return &this
}

// GetBuildDate returns the BuildDate field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetBuildDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuildDate
}

// GetBuildDateOk returns a tuple with the BuildDate field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetBuildDateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BuildDate, true
}

// SetBuildDate sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetBuildDate(v string) {
	o.BuildDate = v
}

// GetCompiler returns the Compiler field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetCompiler() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Compiler
}

// GetCompilerOk returns a tuple with the Compiler field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetCompilerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Compiler, true
}

// SetCompiler sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetCompiler(v string) {
	o.Compiler = v
}

// GetGitCommit returns the GitCommit field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetGitCommit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitCommit
}

// GetGitCommitOk returns a tuple with the GitCommit field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetGitCommitOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GitCommit, true
}

// SetGitCommit sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetGitCommit(v string) {
	o.GitCommit = v
}

// GetGitTag returns the GitTag field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetGitTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitTag
}

// GetGitTagOk returns a tuple with the GitTag field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetGitTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GitTag, true
}

// SetGitTag sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetGitTag(v string) {
	o.GitTag = v
}

// GetGitTreeState returns the GitTreeState field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetGitTreeState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitTreeState
}

// GetGitTreeStateOk returns a tuple with the GitTreeState field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetGitTreeStateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GitTreeState, true
}

// SetGitTreeState sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetGitTreeState(v string) {
	o.GitTreeState = v
}

// GetGoVersion returns the GoVersion field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetGoVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GoVersion
}

// GetGoVersionOk returns a tuple with the GoVersion field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetGoVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GoVersion, true
}

// SetGoVersion sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetGoVersion(v string) {
	o.GoVersion = v
}

// GetPlatform returns the Platform field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetPlatformOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetPlatform(v string) {
	o.Platform = v
}

// GetVersion returns the Version field value
func (o *IoArgoprojWorkflowV1alpha1Version) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *IoArgoprojWorkflowV1alpha1Version) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *IoArgoprojWorkflowV1alpha1Version) SetVersion(v string) {
	o.Version = v
}

func (o IoArgoprojWorkflowV1alpha1Version) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["buildDate"] = o.BuildDate
	}
	if true {
		toSerialize["compiler"] = o.Compiler
	}
	if true {
		toSerialize["gitCommit"] = o.GitCommit
	}
	if true {
		toSerialize["gitTag"] = o.GitTag
	}
	if true {
		toSerialize["gitTreeState"] = o.GitTreeState
	}
	if true {
		toSerialize["goVersion"] = o.GoVersion
	}
	if true {
		toSerialize["platform"] = o.Platform
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojWorkflowV1alpha1Version struct {
	value *IoArgoprojWorkflowV1alpha1Version
	isSet bool
}

func (v NullableIoArgoprojWorkflowV1alpha1Version) Get() *IoArgoprojWorkflowV1alpha1Version {
	return v.value
}

func (v *NullableIoArgoprojWorkflowV1alpha1Version) Set(val *IoArgoprojWorkflowV1alpha1Version) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojWorkflowV1alpha1Version) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojWorkflowV1alpha1Version) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojWorkflowV1alpha1Version(val *IoArgoprojWorkflowV1alpha1Version) *NullableIoArgoprojWorkflowV1alpha1Version {
	return &NullableIoArgoprojWorkflowV1alpha1Version{value: val, isSet: true}
}

func (v NullableIoArgoprojWorkflowV1alpha1Version) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojWorkflowV1alpha1Version) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


