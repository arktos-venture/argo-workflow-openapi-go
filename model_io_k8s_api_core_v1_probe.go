/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1Probe Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
type IoK8sApiCoreV1Probe struct {
	Exec *IoK8sApiCoreV1ExecAction `json:"exec,omitempty"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
	FailureThreshold *int32 `json:"failureThreshold,omitempty"`
	HttpGet *IoK8sApiCoreV1HTTPGetAction `json:"httpGet,omitempty"`
	// Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int32 `json:"initialDelaySeconds,omitempty"`
	// How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int32 `json:"periodSeconds,omitempty"`
	// Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int32 `json:"successThreshold,omitempty"`
	TcpSocket *IoK8sApiCoreV1TCPSocketAction `json:"tcpSocket,omitempty"`
	// Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int32 `json:"timeoutSeconds,omitempty"`
}

// NewIoK8sApiCoreV1Probe instantiates a new IoK8sApiCoreV1Probe object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1Probe() *IoK8sApiCoreV1Probe {
	this := IoK8sApiCoreV1Probe{}
	return &this
}

// NewIoK8sApiCoreV1ProbeWithDefaults instantiates a new IoK8sApiCoreV1Probe object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1ProbeWithDefaults() *IoK8sApiCoreV1Probe {
	this := IoK8sApiCoreV1Probe{}
	return &this
}

// GetExec returns the Exec field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetExec() IoK8sApiCoreV1ExecAction {
	if o == nil || o.Exec == nil {
		var ret IoK8sApiCoreV1ExecAction
		return ret
	}
	return *o.Exec
}

// GetExecOk returns a tuple with the Exec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetExecOk() (*IoK8sApiCoreV1ExecAction, bool) {
	if o == nil || o.Exec == nil {
		return nil, false
	}
	return o.Exec, true
}

// HasExec returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasExec() bool {
	if o != nil && o.Exec != nil {
		return true
	}

	return false
}

// SetExec gets a reference to the given IoK8sApiCoreV1ExecAction and assigns it to the Exec field.
func (o *IoK8sApiCoreV1Probe) SetExec(v IoK8sApiCoreV1ExecAction) {
	o.Exec = &v
}

// GetFailureThreshold returns the FailureThreshold field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetFailureThreshold() int32 {
	if o == nil || o.FailureThreshold == nil {
		var ret int32
		return ret
	}
	return *o.FailureThreshold
}

// GetFailureThresholdOk returns a tuple with the FailureThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetFailureThresholdOk() (*int32, bool) {
	if o == nil || o.FailureThreshold == nil {
		return nil, false
	}
	return o.FailureThreshold, true
}

// HasFailureThreshold returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasFailureThreshold() bool {
	if o != nil && o.FailureThreshold != nil {
		return true
	}

	return false
}

// SetFailureThreshold gets a reference to the given int32 and assigns it to the FailureThreshold field.
func (o *IoK8sApiCoreV1Probe) SetFailureThreshold(v int32) {
	o.FailureThreshold = &v
}

// GetHttpGet returns the HttpGet field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetHttpGet() IoK8sApiCoreV1HTTPGetAction {
	if o == nil || o.HttpGet == nil {
		var ret IoK8sApiCoreV1HTTPGetAction
		return ret
	}
	return *o.HttpGet
}

// GetHttpGetOk returns a tuple with the HttpGet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetHttpGetOk() (*IoK8sApiCoreV1HTTPGetAction, bool) {
	if o == nil || o.HttpGet == nil {
		return nil, false
	}
	return o.HttpGet, true
}

// HasHttpGet returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasHttpGet() bool {
	if o != nil && o.HttpGet != nil {
		return true
	}

	return false
}

// SetHttpGet gets a reference to the given IoK8sApiCoreV1HTTPGetAction and assigns it to the HttpGet field.
func (o *IoK8sApiCoreV1Probe) SetHttpGet(v IoK8sApiCoreV1HTTPGetAction) {
	o.HttpGet = &v
}

// GetInitialDelaySeconds returns the InitialDelaySeconds field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetInitialDelaySeconds() int32 {
	if o == nil || o.InitialDelaySeconds == nil {
		var ret int32
		return ret
	}
	return *o.InitialDelaySeconds
}

// GetInitialDelaySecondsOk returns a tuple with the InitialDelaySeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetInitialDelaySecondsOk() (*int32, bool) {
	if o == nil || o.InitialDelaySeconds == nil {
		return nil, false
	}
	return o.InitialDelaySeconds, true
}

// HasInitialDelaySeconds returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasInitialDelaySeconds() bool {
	if o != nil && o.InitialDelaySeconds != nil {
		return true
	}

	return false
}

// SetInitialDelaySeconds gets a reference to the given int32 and assigns it to the InitialDelaySeconds field.
func (o *IoK8sApiCoreV1Probe) SetInitialDelaySeconds(v int32) {
	o.InitialDelaySeconds = &v
}

// GetPeriodSeconds returns the PeriodSeconds field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetPeriodSeconds() int32 {
	if o == nil || o.PeriodSeconds == nil {
		var ret int32
		return ret
	}
	return *o.PeriodSeconds
}

// GetPeriodSecondsOk returns a tuple with the PeriodSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetPeriodSecondsOk() (*int32, bool) {
	if o == nil || o.PeriodSeconds == nil {
		return nil, false
	}
	return o.PeriodSeconds, true
}

// HasPeriodSeconds returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasPeriodSeconds() bool {
	if o != nil && o.PeriodSeconds != nil {
		return true
	}

	return false
}

// SetPeriodSeconds gets a reference to the given int32 and assigns it to the PeriodSeconds field.
func (o *IoK8sApiCoreV1Probe) SetPeriodSeconds(v int32) {
	o.PeriodSeconds = &v
}

// GetSuccessThreshold returns the SuccessThreshold field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetSuccessThreshold() int32 {
	if o == nil || o.SuccessThreshold == nil {
		var ret int32
		return ret
	}
	return *o.SuccessThreshold
}

// GetSuccessThresholdOk returns a tuple with the SuccessThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetSuccessThresholdOk() (*int32, bool) {
	if o == nil || o.SuccessThreshold == nil {
		return nil, false
	}
	return o.SuccessThreshold, true
}

// HasSuccessThreshold returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasSuccessThreshold() bool {
	if o != nil && o.SuccessThreshold != nil {
		return true
	}

	return false
}

// SetSuccessThreshold gets a reference to the given int32 and assigns it to the SuccessThreshold field.
func (o *IoK8sApiCoreV1Probe) SetSuccessThreshold(v int32) {
	o.SuccessThreshold = &v
}

// GetTcpSocket returns the TcpSocket field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetTcpSocket() IoK8sApiCoreV1TCPSocketAction {
	if o == nil || o.TcpSocket == nil {
		var ret IoK8sApiCoreV1TCPSocketAction
		return ret
	}
	return *o.TcpSocket
}

// GetTcpSocketOk returns a tuple with the TcpSocket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetTcpSocketOk() (*IoK8sApiCoreV1TCPSocketAction, bool) {
	if o == nil || o.TcpSocket == nil {
		return nil, false
	}
	return o.TcpSocket, true
}

// HasTcpSocket returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasTcpSocket() bool {
	if o != nil && o.TcpSocket != nil {
		return true
	}

	return false
}

// SetTcpSocket gets a reference to the given IoK8sApiCoreV1TCPSocketAction and assigns it to the TcpSocket field.
func (o *IoK8sApiCoreV1Probe) SetTcpSocket(v IoK8sApiCoreV1TCPSocketAction) {
	o.TcpSocket = &v
}

// GetTimeoutSeconds returns the TimeoutSeconds field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1Probe) GetTimeoutSeconds() int32 {
	if o == nil || o.TimeoutSeconds == nil {
		var ret int32
		return ret
	}
	return *o.TimeoutSeconds
}

// GetTimeoutSecondsOk returns a tuple with the TimeoutSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1Probe) GetTimeoutSecondsOk() (*int32, bool) {
	if o == nil || o.TimeoutSeconds == nil {
		return nil, false
	}
	return o.TimeoutSeconds, true
}

// HasTimeoutSeconds returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1Probe) HasTimeoutSeconds() bool {
	if o != nil && o.TimeoutSeconds != nil {
		return true
	}

	return false
}

// SetTimeoutSeconds gets a reference to the given int32 and assigns it to the TimeoutSeconds field.
func (o *IoK8sApiCoreV1Probe) SetTimeoutSeconds(v int32) {
	o.TimeoutSeconds = &v
}

func (o IoK8sApiCoreV1Probe) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Exec != nil {
		toSerialize["exec"] = o.Exec
	}
	if o.FailureThreshold != nil {
		toSerialize["failureThreshold"] = o.FailureThreshold
	}
	if o.HttpGet != nil {
		toSerialize["httpGet"] = o.HttpGet
	}
	if o.InitialDelaySeconds != nil {
		toSerialize["initialDelaySeconds"] = o.InitialDelaySeconds
	}
	if o.PeriodSeconds != nil {
		toSerialize["periodSeconds"] = o.PeriodSeconds
	}
	if o.SuccessThreshold != nil {
		toSerialize["successThreshold"] = o.SuccessThreshold
	}
	if o.TcpSocket != nil {
		toSerialize["tcpSocket"] = o.TcpSocket
	}
	if o.TimeoutSeconds != nil {
		toSerialize["timeoutSeconds"] = o.TimeoutSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1Probe struct {
	value *IoK8sApiCoreV1Probe
	isSet bool
}

func (v NullableIoK8sApiCoreV1Probe) Get() *IoK8sApiCoreV1Probe {
	return v.value
}

func (v *NullableIoK8sApiCoreV1Probe) Set(val *IoK8sApiCoreV1Probe) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1Probe) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1Probe) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1Probe(val *IoK8sApiCoreV1Probe) *NullableIoK8sApiCoreV1Probe {
	return &NullableIoK8sApiCoreV1Probe{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1Probe) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1Probe) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


