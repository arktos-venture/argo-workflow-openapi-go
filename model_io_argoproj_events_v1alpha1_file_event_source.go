/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoArgoprojEventsV1alpha1FileEventSource FileEventSource describes an event-source for file related events.
type IoArgoprojEventsV1alpha1FileEventSource struct {
	EventType *string `json:"eventType,omitempty"`
	Metadata *map[string]string `json:"metadata,omitempty"`
	Polling *bool `json:"polling,omitempty"`
	WatchPathConfig *IoArgoprojEventsV1alpha1WatchPathConfig `json:"watchPathConfig,omitempty"`
}

// NewIoArgoprojEventsV1alpha1FileEventSource instantiates a new IoArgoprojEventsV1alpha1FileEventSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1FileEventSource() *IoArgoprojEventsV1alpha1FileEventSource {
	this := IoArgoprojEventsV1alpha1FileEventSource{}
	return &this
}

// NewIoArgoprojEventsV1alpha1FileEventSourceWithDefaults instantiates a new IoArgoprojEventsV1alpha1FileEventSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1FileEventSourceWithDefaults() *IoArgoprojEventsV1alpha1FileEventSource {
	this := IoArgoprojEventsV1alpha1FileEventSource{}
	return &this
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetEventType() string {
	if o == nil || o.EventType == nil {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetEventTypeOk() (*string, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *IoArgoprojEventsV1alpha1FileEventSource) SetEventType(v string) {
	o.EventType = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *IoArgoprojEventsV1alpha1FileEventSource) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetPolling returns the Polling field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetPolling() bool {
	if o == nil || o.Polling == nil {
		var ret bool
		return ret
	}
	return *o.Polling
}

// GetPollingOk returns a tuple with the Polling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetPollingOk() (*bool, bool) {
	if o == nil || o.Polling == nil {
		return nil, false
	}
	return o.Polling, true
}

// HasPolling returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) HasPolling() bool {
	if o != nil && o.Polling != nil {
		return true
	}

	return false
}

// SetPolling gets a reference to the given bool and assigns it to the Polling field.
func (o *IoArgoprojEventsV1alpha1FileEventSource) SetPolling(v bool) {
	o.Polling = &v
}

// GetWatchPathConfig returns the WatchPathConfig field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetWatchPathConfig() IoArgoprojEventsV1alpha1WatchPathConfig {
	if o == nil || o.WatchPathConfig == nil {
		var ret IoArgoprojEventsV1alpha1WatchPathConfig
		return ret
	}
	return *o.WatchPathConfig
}

// GetWatchPathConfigOk returns a tuple with the WatchPathConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) GetWatchPathConfigOk() (*IoArgoprojEventsV1alpha1WatchPathConfig, bool) {
	if o == nil || o.WatchPathConfig == nil {
		return nil, false
	}
	return o.WatchPathConfig, true
}

// HasWatchPathConfig returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1FileEventSource) HasWatchPathConfig() bool {
	if o != nil && o.WatchPathConfig != nil {
		return true
	}

	return false
}

// SetWatchPathConfig gets a reference to the given IoArgoprojEventsV1alpha1WatchPathConfig and assigns it to the WatchPathConfig field.
func (o *IoArgoprojEventsV1alpha1FileEventSource) SetWatchPathConfig(v IoArgoprojEventsV1alpha1WatchPathConfig) {
	o.WatchPathConfig = &v
}

func (o IoArgoprojEventsV1alpha1FileEventSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Polling != nil {
		toSerialize["polling"] = o.Polling
	}
	if o.WatchPathConfig != nil {
		toSerialize["watchPathConfig"] = o.WatchPathConfig
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1FileEventSource struct {
	value *IoArgoprojEventsV1alpha1FileEventSource
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1FileEventSource) Get() *IoArgoprojEventsV1alpha1FileEventSource {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1FileEventSource) Set(val *IoArgoprojEventsV1alpha1FileEventSource) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1FileEventSource) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1FileEventSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1FileEventSource(val *IoArgoprojEventsV1alpha1FileEventSource) *NullableIoArgoprojEventsV1alpha1FileEventSource {
	return &NullableIoArgoprojEventsV1alpha1FileEventSource{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1FileEventSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1FileEventSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


