/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IoK8sApiCoreV1ExecAction ExecAction describes a \"run in container\" action.
type IoK8sApiCoreV1ExecAction struct {
	// Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command *[]string `json:"command,omitempty"`
}

// NewIoK8sApiCoreV1ExecAction instantiates a new IoK8sApiCoreV1ExecAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoK8sApiCoreV1ExecAction() *IoK8sApiCoreV1ExecAction {
	this := IoK8sApiCoreV1ExecAction{}
	return &this
}

// NewIoK8sApiCoreV1ExecActionWithDefaults instantiates a new IoK8sApiCoreV1ExecAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoK8sApiCoreV1ExecActionWithDefaults() *IoK8sApiCoreV1ExecAction {
	this := IoK8sApiCoreV1ExecAction{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *IoK8sApiCoreV1ExecAction) GetCommand() []string {
	if o == nil || o.Command == nil {
		var ret []string
		return ret
	}
	return *o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoK8sApiCoreV1ExecAction) GetCommandOk() (*[]string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *IoK8sApiCoreV1ExecAction) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given []string and assigns it to the Command field.
func (o *IoK8sApiCoreV1ExecAction) SetCommand(v []string) {
	o.Command = &v
}

func (o IoK8sApiCoreV1ExecAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	return json.Marshal(toSerialize)
}

type NullableIoK8sApiCoreV1ExecAction struct {
	value *IoK8sApiCoreV1ExecAction
	isSet bool
}

func (v NullableIoK8sApiCoreV1ExecAction) Get() *IoK8sApiCoreV1ExecAction {
	return v.value
}

func (v *NullableIoK8sApiCoreV1ExecAction) Set(val *IoK8sApiCoreV1ExecAction) {
	v.value = val
	v.isSet = true
}

func (v NullableIoK8sApiCoreV1ExecAction) IsSet() bool {
	return v.isSet
}

func (v *NullableIoK8sApiCoreV1ExecAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoK8sApiCoreV1ExecAction(val *IoK8sApiCoreV1ExecAction) *NullableIoK8sApiCoreV1ExecAction {
	return &NullableIoK8sApiCoreV1ExecAction{value: val, isSet: true}
}

func (v NullableIoK8sApiCoreV1ExecAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoK8sApiCoreV1ExecAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


