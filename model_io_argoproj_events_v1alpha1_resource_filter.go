/*
Argo Server API

You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`

API version: VERSION
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// IoArgoprojEventsV1alpha1ResourceFilter struct for IoArgoprojEventsV1alpha1ResourceFilter
type IoArgoprojEventsV1alpha1ResourceFilter struct {
	AfterStart *bool `json:"afterStart,omitempty"`
	// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
	CreatedBy *time.Time `json:"createdBy,omitempty"`
	Fields *[]IoArgoprojEventsV1alpha1Selector `json:"fields,omitempty"`
	Labels *[]IoArgoprojEventsV1alpha1Selector `json:"labels,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

// NewIoArgoprojEventsV1alpha1ResourceFilter instantiates a new IoArgoprojEventsV1alpha1ResourceFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIoArgoprojEventsV1alpha1ResourceFilter() *IoArgoprojEventsV1alpha1ResourceFilter {
	this := IoArgoprojEventsV1alpha1ResourceFilter{}
	return &this
}

// NewIoArgoprojEventsV1alpha1ResourceFilterWithDefaults instantiates a new IoArgoprojEventsV1alpha1ResourceFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIoArgoprojEventsV1alpha1ResourceFilterWithDefaults() *IoArgoprojEventsV1alpha1ResourceFilter {
	this := IoArgoprojEventsV1alpha1ResourceFilter{}
	return &this
}

// GetAfterStart returns the AfterStart field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetAfterStart() bool {
	if o == nil || o.AfterStart == nil {
		var ret bool
		return ret
	}
	return *o.AfterStart
}

// GetAfterStartOk returns a tuple with the AfterStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetAfterStartOk() (*bool, bool) {
	if o == nil || o.AfterStart == nil {
		return nil, false
	}
	return o.AfterStart, true
}

// HasAfterStart returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) HasAfterStart() bool {
	if o != nil && o.AfterStart != nil {
		return true
	}

	return false
}

// SetAfterStart gets a reference to the given bool and assigns it to the AfterStart field.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) SetAfterStart(v bool) {
	o.AfterStart = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetCreatedBy() time.Time {
	if o == nil || o.CreatedBy == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetCreatedByOk() (*time.Time, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given time.Time and assigns it to the CreatedBy field.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) SetCreatedBy(v time.Time) {
	o.CreatedBy = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetFields() []IoArgoprojEventsV1alpha1Selector {
	if o == nil || o.Fields == nil {
		var ret []IoArgoprojEventsV1alpha1Selector
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetFieldsOk() (*[]IoArgoprojEventsV1alpha1Selector, bool) {
	if o == nil || o.Fields == nil {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) HasFields() bool {
	if o != nil && o.Fields != nil {
		return true
	}

	return false
}

// SetFields gets a reference to the given []IoArgoprojEventsV1alpha1Selector and assigns it to the Fields field.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) SetFields(v []IoArgoprojEventsV1alpha1Selector) {
	o.Fields = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetLabels() []IoArgoprojEventsV1alpha1Selector {
	if o == nil || o.Labels == nil {
		var ret []IoArgoprojEventsV1alpha1Selector
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetLabelsOk() (*[]IoArgoprojEventsV1alpha1Selector, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []IoArgoprojEventsV1alpha1Selector and assigns it to the Labels field.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) SetLabels(v []IoArgoprojEventsV1alpha1Selector) {
	o.Labels = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetPrefix() string {
	if o == nil || o.Prefix == nil {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) GetPrefixOk() (*string, bool) {
	if o == nil || o.Prefix == nil {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) HasPrefix() bool {
	if o != nil && o.Prefix != nil {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *IoArgoprojEventsV1alpha1ResourceFilter) SetPrefix(v string) {
	o.Prefix = &v
}

func (o IoArgoprojEventsV1alpha1ResourceFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AfterStart != nil {
		toSerialize["afterStart"] = o.AfterStart
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Fields != nil {
		toSerialize["fields"] = o.Fields
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Prefix != nil {
		toSerialize["prefix"] = o.Prefix
	}
	return json.Marshal(toSerialize)
}

type NullableIoArgoprojEventsV1alpha1ResourceFilter struct {
	value *IoArgoprojEventsV1alpha1ResourceFilter
	isSet bool
}

func (v NullableIoArgoprojEventsV1alpha1ResourceFilter) Get() *IoArgoprojEventsV1alpha1ResourceFilter {
	return v.value
}

func (v *NullableIoArgoprojEventsV1alpha1ResourceFilter) Set(val *IoArgoprojEventsV1alpha1ResourceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIoArgoprojEventsV1alpha1ResourceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIoArgoprojEventsV1alpha1ResourceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIoArgoprojEventsV1alpha1ResourceFilter(val *IoArgoprojEventsV1alpha1ResourceFilter) *NullableIoArgoprojEventsV1alpha1ResourceFilter {
	return &NullableIoArgoprojEventsV1alpha1ResourceFilter{value: val, isSet: true}
}

func (v NullableIoArgoprojEventsV1alpha1ResourceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIoArgoprojEventsV1alpha1ResourceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


